
test11_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000060  00800100  000019e2  00001a76  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000019e2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000005e  00800160  00800160  00001ad6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001ad6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001b08  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  00001b44  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000003ff  00000000  00000000  00001bc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000024b4  00000000  00000000  00001fc3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000e27  00000000  00000000  00004477  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001b9f  00000000  00000000  0000529e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000003d4  00000000  00000000  00006e40  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000009dd  00000000  00000000  00007214  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000017ba  00000000  00000000  00007bf1  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000028  00000000  00000000  000093ab  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	62 c0       	rjmp	.+196    	; 0xca <__bad_interrupt>
       6:	00 00       	nop
       8:	60 c0       	rjmp	.+192    	; 0xca <__bad_interrupt>
       a:	00 00       	nop
       c:	5e c0       	rjmp	.+188    	; 0xca <__bad_interrupt>
       e:	00 00       	nop
      10:	5c c0       	rjmp	.+184    	; 0xca <__bad_interrupt>
      12:	00 00       	nop
      14:	5a c0       	rjmp	.+180    	; 0xca <__bad_interrupt>
      16:	00 00       	nop
      18:	58 c0       	rjmp	.+176    	; 0xca <__bad_interrupt>
      1a:	00 00       	nop
      1c:	56 c0       	rjmp	.+172    	; 0xca <__bad_interrupt>
      1e:	00 00       	nop
      20:	54 c0       	rjmp	.+168    	; 0xca <__bad_interrupt>
      22:	00 00       	nop
      24:	52 c0       	rjmp	.+164    	; 0xca <__bad_interrupt>
      26:	00 00       	nop
      28:	50 c0       	rjmp	.+160    	; 0xca <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4e c0       	rjmp	.+156    	; 0xca <__bad_interrupt>
      2e:	00 00       	nop
      30:	33 c4       	rjmp	.+2150   	; 0x898 <__vector_12>
      32:	00 00       	nop
      34:	4a c0       	rjmp	.+148    	; 0xca <__bad_interrupt>
      36:	00 00       	nop
      38:	48 c0       	rjmp	.+144    	; 0xca <__bad_interrupt>
      3a:	00 00       	nop
      3c:	46 c0       	rjmp	.+140    	; 0xca <__bad_interrupt>
      3e:	00 00       	nop
      40:	44 c0       	rjmp	.+136    	; 0xca <__bad_interrupt>
      42:	00 00       	nop
      44:	42 c0       	rjmp	.+132    	; 0xca <__bad_interrupt>
      46:	00 00       	nop
      48:	40 c0       	rjmp	.+128    	; 0xca <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3e c0       	rjmp	.+124    	; 0xca <__bad_interrupt>
      4e:	00 00       	nop
      50:	3c c0       	rjmp	.+120    	; 0xca <__bad_interrupt>
      52:	00 00       	nop
      54:	3a c0       	rjmp	.+116    	; 0xca <__bad_interrupt>
      56:	00 00       	nop
      58:	38 c0       	rjmp	.+112    	; 0xca <__bad_interrupt>
      5a:	00 00       	nop
      5c:	36 c0       	rjmp	.+108    	; 0xca <__bad_interrupt>
      5e:	00 00       	nop
      60:	34 c0       	rjmp	.+104    	; 0xca <__bad_interrupt>
      62:	00 00       	nop
      64:	32 c0       	rjmp	.+100    	; 0xca <__bad_interrupt>
      66:	00 00       	nop
      68:	30 c0       	rjmp	.+96     	; 0xca <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2e c0       	rjmp	.+92     	; 0xca <__bad_interrupt>
      6e:	00 00       	nop
      70:	2c c0       	rjmp	.+88     	; 0xca <__bad_interrupt>
      72:	00 00       	nop
      74:	2a c0       	rjmp	.+84     	; 0xca <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c3       	rjmp	.+1706   	; 0x724 <__vector_30>
      7a:	00 00       	nop
      7c:	26 c0       	rjmp	.+76     	; 0xca <__bad_interrupt>
      7e:	00 00       	nop
      80:	06 c3       	rjmp	.+1548   	; 0x68e <__vector_32>
      82:	00 00       	nop
      84:	22 c0       	rjmp	.+68     	; 0xca <__bad_interrupt>
      86:	00 00       	nop
      88:	20 c0       	rjmp	.+64     	; 0xca <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e1       	ldi	r29, 0x10	; 16
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e2 ee       	ldi	r30, 0xE2	; 226
      a0:	f9 e1       	ldi	r31, 0x19	; 25
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a0 36       	cpi	r26, 0x60	; 96
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	21 e0       	ldi	r18, 0x01	; 1
      b4:	a0 e6       	ldi	r26, 0x60	; 96
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	ae 3b       	cpi	r26, 0xBE	; 190
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 c4 0c 	call	0x1988	; 0x1988 <main>
      c6:	0c 94 ef 0c 	jmp	0x19de	; 0x19de <_exit>

000000ca <__bad_interrupt>:
      ca:	9a cf       	rjmp	.-204    	; 0x0 <__vectors>

000000cc <stdio_putchar>:
      cc:	1f 93       	push	r17
      ce:	18 2f       	mov	r17, r24
      d0:	8a 30       	cpi	r24, 0x0A	; 10
      d2:	11 f4       	brne	.+4      	; 0xd8 <stdio_putchar+0xc>
      d4:	8d e0       	ldi	r24, 0x0D	; 13
      d6:	fa df       	rcall	.-12     	; 0xcc <stdio_putchar>
      d8:	5d 9b       	sbis	0x0b, 5	; 11
      da:	fe cf       	rjmp	.-4      	; 0xd8 <stdio_putchar+0xc>
      dc:	1c b9       	out	0x0c, r17	; 12
      de:	80 e0       	ldi	r24, 0x00	; 0
      e0:	90 e0       	ldi	r25, 0x00	; 0
      e2:	1f 91       	pop	r17
      e4:	08 95       	ret

000000e6 <stdio_getchar>:
      e6:	1f 93       	push	r17
      e8:	bc 01       	movw	r22, r24
      ea:	5f 9b       	sbis	0x0b, 7	; 11
      ec:	fe cf       	rjmp	.-4      	; 0xea <stdio_getchar+0x4>
      ee:	1c b1       	in	r17, 0x0c	; 12
      f0:	81 2f       	mov	r24, r17
      f2:	ec df       	rcall	.-40     	; 0xcc <stdio_putchar>
      f4:	81 2f       	mov	r24, r17
      f6:	90 e0       	ldi	r25, 0x00	; 0
      f8:	1f 91       	pop	r17
      fa:	08 95       	ret

000000fc <DIO_fpt>:
      fc:	38 2f       	mov	r19, r24
      fe:	84 30       	cpi	r24, 0x04	; 4
     100:	10 f0       	brcs	.+4      	; 0x106 <DIO_fpt+0xa>
     102:	81 e0       	ldi	r24, 0x01	; 1
     104:	08 95       	ret
     106:	48 30       	cpi	r20, 0x08	; 8
     108:	10 f0       	brcs	.+4      	; 0x10e <DIO_fpt+0x12>
     10a:	82 e0       	ldi	r24, 0x02	; 2
     10c:	08 95       	ret
     10e:	82 2f       	mov	r24, r18
     110:	90 e0       	ldi	r25, 0x00	; 0
     112:	02 c0       	rjmp	.+4      	; 0x118 <DIO_fpt+0x1c>
     114:	88 0f       	add	r24, r24
     116:	99 1f       	adc	r25, r25
     118:	4a 95       	dec	r20
     11a:	e2 f7       	brpl	.-8      	; 0x114 <DIO_fpt+0x18>
     11c:	28 2f       	mov	r18, r24
     11e:	31 30       	cpi	r19, 0x01	; 1
     120:	89 f0       	breq	.+34     	; 0x144 <DIO_fpt+0x48>
     122:	31 30       	cpi	r19, 0x01	; 1
     124:	28 f0       	brcs	.+10     	; 0x130 <DIO_fpt+0x34>
     126:	32 30       	cpi	r19, 0x02	; 2
     128:	b9 f0       	breq	.+46     	; 0x158 <DIO_fpt+0x5c>
     12a:	33 30       	cpi	r19, 0x03	; 3
     12c:	f1 f4       	brne	.+60     	; 0x16a <DIO_fpt+0x6e>
     12e:	1f c0       	rjmp	.+62     	; 0x16e <DIO_fpt+0x72>
     130:	8a b3       	in	r24, 0x1a	; 26
     132:	86 2b       	or	r24, r22
     134:	8a bb       	out	0x1a, r24	; 26
     136:	8b b3       	in	r24, 0x1b	; 27
     138:	26 23       	and	r18, r22
     13a:	60 95       	com	r22
     13c:	86 23       	and	r24, r22
     13e:	28 2b       	or	r18, r24
     140:	2b bb       	out	0x1b, r18	; 27
     142:	13 c0       	rjmp	.+38     	; 0x16a <DIO_fpt+0x6e>
     144:	87 b3       	in	r24, 0x17	; 23
     146:	86 2b       	or	r24, r22
     148:	87 bb       	out	0x17, r24	; 23
     14a:	88 b3       	in	r24, 0x18	; 24
     14c:	26 23       	and	r18, r22
     14e:	60 95       	com	r22
     150:	86 23       	and	r24, r22
     152:	28 2b       	or	r18, r24
     154:	28 bb       	out	0x18, r18	; 24
     156:	09 c0       	rjmp	.+18     	; 0x16a <DIO_fpt+0x6e>
     158:	84 b3       	in	r24, 0x14	; 20
     15a:	86 2b       	or	r24, r22
     15c:	84 bb       	out	0x14, r24	; 20
     15e:	85 b3       	in	r24, 0x15	; 21
     160:	26 23       	and	r18, r22
     162:	60 95       	com	r22
     164:	86 23       	and	r24, r22
     166:	28 2b       	or	r18, r24
     168:	25 bb       	out	0x15, r18	; 21
     16a:	80 e0       	ldi	r24, 0x00	; 0
     16c:	08 95       	ret
     16e:	82 b1       	in	r24, 0x02	; 2
     170:	86 2b       	or	r24, r22
     172:	82 b9       	out	0x02, r24	; 2
     174:	83 b1       	in	r24, 0x03	; 3
     176:	26 23       	and	r18, r22
     178:	60 95       	com	r22
     17a:	86 23       	and	r24, r22
     17c:	28 2b       	or	r18, r24
     17e:	23 b9       	out	0x03, r18	; 3
     180:	80 e0       	ldi	r24, 0x00	; 0
     182:	08 95       	ret

00000184 <DIO_fgt>:
     184:	f9 01       	movw	r30, r18
     186:	84 30       	cpi	r24, 0x04	; 4
     188:	10 f0       	brcs	.+4      	; 0x18e <DIO_fgt+0xa>
     18a:	81 e0       	ldi	r24, 0x01	; 1
     18c:	08 95       	ret
     18e:	48 30       	cpi	r20, 0x08	; 8
     190:	10 f0       	brcs	.+4      	; 0x196 <DIO_fgt+0x12>
     192:	82 e0       	ldi	r24, 0x02	; 2
     194:	08 95       	ret
     196:	81 30       	cpi	r24, 0x01	; 1
     198:	b9 f0       	breq	.+46     	; 0x1c8 <DIO_fgt+0x44>
     19a:	81 30       	cpi	r24, 0x01	; 1
     19c:	28 f0       	brcs	.+10     	; 0x1a8 <DIO_fgt+0x24>
     19e:	82 30       	cpi	r24, 0x02	; 2
     1a0:	19 f1       	breq	.+70     	; 0x1e8 <DIO_fgt+0x64>
     1a2:	83 30       	cpi	r24, 0x03	; 3
     1a4:	c1 f5       	brne	.+112    	; 0x216 <DIO_fgt+0x92>
     1a6:	39 c0       	rjmp	.+114    	; 0x21a <DIO_fgt+0x96>
     1a8:	8a b3       	in	r24, 0x1a	; 26
     1aa:	88 23       	and	r24, r24
     1ac:	29 f0       	breq	.+10     	; 0x1b8 <DIO_fgt+0x34>
     1ae:	9a b3       	in	r25, 0x1a	; 26
     1b0:	86 2f       	mov	r24, r22
     1b2:	80 95       	com	r24
     1b4:	89 23       	and	r24, r25
     1b6:	05 c0       	rjmp	.+10     	; 0x1c2 <DIO_fgt+0x3e>
     1b8:	8a b3       	in	r24, 0x1a	; 26
     1ba:	88 23       	and	r24, r24
     1bc:	19 f4       	brne	.+6      	; 0x1c4 <DIO_fgt+0x40>
     1be:	86 2f       	mov	r24, r22
     1c0:	80 95       	com	r24
     1c2:	8a bb       	out	0x1a, r24	; 26
     1c4:	89 b3       	in	r24, 0x19	; 25
     1c6:	1f c0       	rjmp	.+62     	; 0x206 <DIO_fgt+0x82>
     1c8:	87 b3       	in	r24, 0x17	; 23
     1ca:	88 23       	and	r24, r24
     1cc:	29 f0       	breq	.+10     	; 0x1d8 <DIO_fgt+0x54>
     1ce:	97 b3       	in	r25, 0x17	; 23
     1d0:	86 2f       	mov	r24, r22
     1d2:	80 95       	com	r24
     1d4:	89 23       	and	r24, r25
     1d6:	05 c0       	rjmp	.+10     	; 0x1e2 <DIO_fgt+0x5e>
     1d8:	87 b3       	in	r24, 0x17	; 23
     1da:	88 23       	and	r24, r24
     1dc:	19 f4       	brne	.+6      	; 0x1e4 <DIO_fgt+0x60>
     1de:	86 2f       	mov	r24, r22
     1e0:	80 95       	com	r24
     1e2:	87 bb       	out	0x17, r24	; 23
     1e4:	86 b3       	in	r24, 0x16	; 22
     1e6:	0f c0       	rjmp	.+30     	; 0x206 <DIO_fgt+0x82>
     1e8:	84 b3       	in	r24, 0x14	; 20
     1ea:	88 23       	and	r24, r24
     1ec:	29 f0       	breq	.+10     	; 0x1f8 <DIO_fgt+0x74>
     1ee:	94 b3       	in	r25, 0x14	; 20
     1f0:	86 2f       	mov	r24, r22
     1f2:	80 95       	com	r24
     1f4:	89 23       	and	r24, r25
     1f6:	05 c0       	rjmp	.+10     	; 0x202 <DIO_fgt+0x7e>
     1f8:	84 b3       	in	r24, 0x14	; 20
     1fa:	88 23       	and	r24, r24
     1fc:	19 f4       	brne	.+6      	; 0x204 <DIO_fgt+0x80>
     1fe:	86 2f       	mov	r24, r22
     200:	80 95       	com	r24
     202:	84 bb       	out	0x14, r24	; 20
     204:	83 b3       	in	r24, 0x13	; 19
     206:	86 23       	and	r24, r22
     208:	90 e0       	ldi	r25, 0x00	; 0
     20a:	02 c0       	rjmp	.+4      	; 0x210 <DIO_fgt+0x8c>
     20c:	95 95       	asr	r25
     20e:	87 95       	ror	r24
     210:	4a 95       	dec	r20
     212:	e2 f7       	brpl	.-8      	; 0x20c <DIO_fgt+0x88>
     214:	80 83       	st	Z, r24
     216:	80 e0       	ldi	r24, 0x00	; 0
     218:	08 95       	ret
     21a:	82 b1       	in	r24, 0x02	; 2
     21c:	88 23       	and	r24, r24
     21e:	29 f0       	breq	.+10     	; 0x22a <DIO_fgt+0xa6>
     220:	92 b1       	in	r25, 0x02	; 2
     222:	86 2f       	mov	r24, r22
     224:	80 95       	com	r24
     226:	89 23       	and	r24, r25
     228:	05 c0       	rjmp	.+10     	; 0x234 <DIO_fgt+0xb0>
     22a:	82 b1       	in	r24, 0x02	; 2
     22c:	88 23       	and	r24, r24
     22e:	19 f4       	brne	.+6      	; 0x236 <DIO_fgt+0xb2>
     230:	86 2f       	mov	r24, r22
     232:	80 95       	com	r24
     234:	82 b9       	out	0x02, r24	; 2
     236:	81 b1       	in	r24, 0x01	; 1
     238:	86 23       	and	r24, r22
     23a:	90 e0       	ldi	r25, 0x00	; 0
     23c:	02 c0       	rjmp	.+4      	; 0x242 <DIO_fgt+0xbe>
     23e:	95 95       	asr	r25
     240:	87 95       	ror	r24
     242:	4a 95       	dec	r20
     244:	e2 f7       	brpl	.-8      	; 0x23e <DIO_fgt+0xba>
     246:	80 83       	st	Z, r24
     248:	80 e0       	ldi	r24, 0x00	; 0
     24a:	08 95       	ret

0000024c <HMI_Transceiver_get>:
     24c:	df 92       	push	r13
     24e:	ef 92       	push	r14
     250:	ff 92       	push	r15
     252:	0f 93       	push	r16
     254:	1f 93       	push	r17
     256:	cf 93       	push	r28
     258:	df 93       	push	r29
     25a:	08 2f       	mov	r16, r24
     25c:	d6 2e       	mov	r13, r22
     25e:	e7 2e       	mov	r14, r23
     260:	81 32       	cpi	r24, 0x21	; 33
     262:	10 f0       	brcs	.+4      	; 0x268 <HMI_Transceiver_get+0x1c>
     264:	81 e0       	ldi	r24, 0x01	; 1
     266:	2a c0       	rjmp	.+84     	; 0x2bc <HMI_Transceiver_get+0x70>
     268:	0e 94 2f 0b 	call	0x165e	; 0x165e <PC_getchar>
     26c:	8b 3a       	cpi	r24, 0xAB	; 171
     26e:	29 f5       	brne	.+74     	; 0x2ba <HMI_Transceiver_get+0x6e>
     270:	0e 94 2f 0b 	call	0x165e	; 0x165e <PC_getchar>
     274:	8b 3a       	cpi	r24, 0xAB	; 171
     276:	09 f5       	brne	.+66     	; 0x2ba <HMI_Transceiver_get+0x6e>
     278:	0e 94 2f 0b 	call	0x165e	; 0x165e <PC_getchar>
     27c:	8b 3a       	cpi	r24, 0xAB	; 171
     27e:	e9 f4       	brne	.+58     	; 0x2ba <HMI_Transceiver_get+0x6e>
     280:	0e 94 2f 0b 	call	0x165e	; 0x165e <PC_getchar>
     284:	f8 2e       	mov	r15, r24
     286:	18 2f       	mov	r17, r24
     288:	8d 2d       	mov	r24, r13
     28a:	9e 2d       	mov	r25, r14
     28c:	9c 01       	movw	r18, r24
     28e:	e9 01       	movw	r28, r18
     290:	04 c0       	rjmp	.+8      	; 0x29a <HMI_Transceiver_get+0x4e>
     292:	0e 94 2f 0b 	call	0x165e	; 0x165e <PC_getchar>
     296:	89 93       	st	Y+, r24
     298:	18 0f       	add	r17, r24
     29a:	9e 01       	movw	r18, r28
     29c:	2d 19       	sub	r18, r13
     29e:	20 17       	cp	r18, r16
     2a0:	c0 f3       	brcs	.-16     	; 0x292 <HMI_Transceiver_get+0x46>
     2a2:	0e 94 2f 0b 	call	0x165e	; 0x165e <PC_getchar>
     2a6:	f0 16       	cp	r15, r16
     2a8:	11 f0       	breq	.+4      	; 0x2ae <HMI_Transceiver_get+0x62>
     2aa:	83 e0       	ldi	r24, 0x03	; 3
     2ac:	07 c0       	rjmp	.+14     	; 0x2bc <HMI_Transceiver_get+0x70>
     2ae:	81 17       	cp	r24, r17
     2b0:	11 f4       	brne	.+4      	; 0x2b6 <HMI_Transceiver_get+0x6a>
     2b2:	80 e0       	ldi	r24, 0x00	; 0
     2b4:	03 c0       	rjmp	.+6      	; 0x2bc <HMI_Transceiver_get+0x70>
     2b6:	84 e0       	ldi	r24, 0x04	; 4
     2b8:	01 c0       	rjmp	.+2      	; 0x2bc <HMI_Transceiver_get+0x70>
     2ba:	82 e0       	ldi	r24, 0x02	; 2
     2bc:	df 91       	pop	r29
     2be:	cf 91       	pop	r28
     2c0:	1f 91       	pop	r17
     2c2:	0f 91       	pop	r16
     2c4:	ff 90       	pop	r15
     2c6:	ef 90       	pop	r14
     2c8:	df 90       	pop	r13
     2ca:	08 95       	ret

000002cc <HMI_Structure_get>:
     2cc:	af 92       	push	r10
     2ce:	bf 92       	push	r11
     2d0:	cf 92       	push	r12
     2d2:	df 92       	push	r13
     2d4:	ef 92       	push	r14
     2d6:	ff 92       	push	r15
     2d8:	0f 93       	push	r16
     2da:	1f 93       	push	r17
     2dc:	cf 93       	push	r28
     2de:	df 93       	push	r29
     2e0:	18 2f       	mov	r17, r24
     2e2:	09 2f       	mov	r16, r25
     2e4:	e6 2e       	mov	r14, r22
     2e6:	b4 2e       	mov	r11, r20
     2e8:	a5 2e       	mov	r10, r21
     2ea:	2f ef       	ldi	r18, 0xFF	; 255
     2ec:	62 17       	cp	r22, r18
     2ee:	11 f4       	brne	.+4      	; 0x2f4 <HMI_Structure_get+0x28>
     2f0:	81 e0       	ldi	r24, 0x01	; 1
     2f2:	45 c0       	rjmp	.+138    	; 0x37e <HMI_Structure_get+0xb2>
     2f4:	0e 94 2f 0b 	call	0x165e	; 0x165e <PC_getchar>
     2f8:	8b 3a       	cpi	r24, 0xAB	; 171
     2fa:	09 f0       	breq	.+2      	; 0x2fe <HMI_Structure_get+0x32>
     2fc:	3f c0       	rjmp	.+126    	; 0x37c <HMI_Structure_get+0xb0>
     2fe:	0e 94 2f 0b 	call	0x165e	; 0x165e <PC_getchar>
     302:	8b 3a       	cpi	r24, 0xAB	; 171
     304:	d9 f5       	brne	.+118    	; 0x37c <HMI_Structure_get+0xb0>
     306:	0e 94 2f 0b 	call	0x165e	; 0x165e <PC_getchar>
     30a:	8b 3a       	cpi	r24, 0xAB	; 171
     30c:	b9 f5       	brne	.+110    	; 0x37c <HMI_Structure_get+0xb0>
     30e:	0e 94 2f 0b 	call	0x165e	; 0x165e <PC_getchar>
     312:	f8 2e       	mov	r15, r24
     314:	0e 94 2f 0b 	call	0x165e	; 0x165e <PC_getchar>
     318:	c8 2e       	mov	r12, r24
     31a:	a1 2f       	mov	r26, r17
     31c:	b0 2f       	mov	r27, r16
     31e:	fd 01       	movw	r30, r26
     320:	01 90       	ld	r0, Z+
     322:	00 20       	and	r0, r0
     324:	e9 f7       	brne	.-6      	; 0x320 <HMI_Structure_get+0x54>
     326:	31 97       	sbiw	r30, 0x01	; 1
     328:	de 2e       	mov	r13, r30
     32a:	d1 1a       	sub	r13, r17
     32c:	21 2f       	mov	r18, r17
     32e:	30 2f       	mov	r19, r16
     330:	c9 01       	movw	r24, r18
     332:	ec 01       	movw	r28, r24
     334:	0c 2d       	mov	r16, r12
     336:	10 e0       	ldi	r17, 0x00	; 0
     338:	05 c0       	rjmp	.+10     	; 0x344 <HMI_Structure_get+0x78>
     33a:	0e 94 2f 0b 	call	0x165e	; 0x165e <PC_getchar>
     33e:	89 93       	st	Y+, r24
     340:	08 0f       	add	r16, r24
     342:	1f 5f       	subi	r17, 0xFF	; 255
     344:	1d 15       	cp	r17, r13
     346:	c8 f3       	brcs	.-14     	; 0x33a <HMI_Structure_get+0x6e>
     348:	8b 2d       	mov	r24, r11
     34a:	9a 2d       	mov	r25, r10
     34c:	9c 01       	movw	r18, r24
     34e:	e9 01       	movw	r28, r18
     350:	04 c0       	rjmp	.+8      	; 0x35a <HMI_Structure_get+0x8e>
     352:	0e 94 2f 0b 	call	0x165e	; 0x165e <PC_getchar>
     356:	89 93       	st	Y+, r24
     358:	08 0f       	add	r16, r24
     35a:	9e 01       	movw	r18, r28
     35c:	2b 19       	sub	r18, r11
     35e:	2e 15       	cp	r18, r14
     360:	c0 f3       	brcs	.-16     	; 0x352 <HMI_Structure_get+0x86>
     362:	0e 94 2f 0b 	call	0x165e	; 0x165e <PC_getchar>
     366:	fc 18       	sub	r15, r12
     368:	fe 14       	cp	r15, r14
     36a:	11 f0       	breq	.+4      	; 0x370 <HMI_Structure_get+0xa4>
     36c:	83 e0       	ldi	r24, 0x03	; 3
     36e:	07 c0       	rjmp	.+14     	; 0x37e <HMI_Structure_get+0xb2>
     370:	80 17       	cp	r24, r16
     372:	11 f4       	brne	.+4      	; 0x378 <HMI_Structure_get+0xac>
     374:	80 e0       	ldi	r24, 0x00	; 0
     376:	03 c0       	rjmp	.+6      	; 0x37e <HMI_Structure_get+0xb2>
     378:	84 e0       	ldi	r24, 0x04	; 4
     37a:	01 c0       	rjmp	.+2      	; 0x37e <HMI_Structure_get+0xb2>
     37c:	82 e0       	ldi	r24, 0x02	; 2
     37e:	df 91       	pop	r29
     380:	cf 91       	pop	r28
     382:	1f 91       	pop	r17
     384:	0f 91       	pop	r16
     386:	ff 90       	pop	r15
     388:	ef 90       	pop	r14
     38a:	df 90       	pop	r13
     38c:	cf 90       	pop	r12
     38e:	bf 90       	pop	r11
     390:	af 90       	pop	r10
     392:	08 95       	ret

00000394 <HMI_Structure_put>:
     394:	af 92       	push	r10
     396:	bf 92       	push	r11
     398:	cf 92       	push	r12
     39a:	df 92       	push	r13
     39c:	ef 92       	push	r14
     39e:	ff 92       	push	r15
     3a0:	0f 93       	push	r16
     3a2:	1f 93       	push	r17
     3a4:	cf 93       	push	r28
     3a6:	df 93       	push	r29
     3a8:	d8 2e       	mov	r13, r24
     3aa:	c9 2e       	mov	r12, r25
     3ac:	e6 2e       	mov	r14, r22
     3ae:	b4 2e       	mov	r11, r20
     3b0:	a5 2e       	mov	r10, r21
     3b2:	8b eb       	ldi	r24, 0xBB	; 187
     3b4:	0e 94 2b 0b 	call	0x1656	; 0x1656 <PC_putchar>
     3b8:	8b eb       	ldi	r24, 0xBB	; 187
     3ba:	0e 94 2b 0b 	call	0x1656	; 0x1656 <PC_putchar>
     3be:	8b eb       	ldi	r24, 0xBB	; 187
     3c0:	0e 94 2b 0b 	call	0x1656	; 0x1656 <PC_putchar>
     3c4:	ed 2d       	mov	r30, r13
     3c6:	fc 2d       	mov	r31, r12
     3c8:	ef 01       	movw	r28, r30
     3ca:	09 90       	ld	r0, Y+
     3cc:	00 20       	and	r0, r0
     3ce:	e9 f7       	brne	.-6      	; 0x3ca <HMI_Structure_put+0x36>
     3d0:	21 97       	sbiw	r28, 0x01	; 1
     3d2:	ce 1b       	sub	r28, r30
     3d4:	df 0b       	sbc	r29, r31
     3d6:	0c 2f       	mov	r16, r28
     3d8:	8c 2f       	mov	r24, r28
     3da:	90 e0       	ldi	r25, 0x00	; 0
     3dc:	01 96       	adiw	r24, 0x01	; 1
     3de:	8e 0d       	add	r24, r14
     3e0:	91 1d       	adc	r25, r1
     3e2:	8f 3f       	cpi	r24, 0xFF	; 255
     3e4:	91 05       	cpc	r25, r1
     3e6:	19 f0       	breq	.+6      	; 0x3ee <HMI_Structure_put+0x5a>
     3e8:	14 f0       	brlt	.+4      	; 0x3ee <HMI_Structure_put+0x5a>
     3ea:	81 e0       	ldi	r24, 0x01	; 1
     3ec:	2c c0       	rjmp	.+88     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
     3ee:	0f 5f       	subi	r16, 0xFF	; 255
     3f0:	10 2f       	mov	r17, r16
     3f2:	1e 0d       	add	r17, r14
     3f4:	01 50       	subi	r16, 0x01	; 1
     3f6:	81 2f       	mov	r24, r17
     3f8:	0e 94 2b 0b 	call	0x1656	; 0x1656 <PC_putchar>
     3fc:	8c 2f       	mov	r24, r28
     3fe:	0e 94 2b 0b 	call	0x1656	; 0x1656 <PC_putchar>
     402:	f1 2e       	mov	r15, r17
     404:	f0 0e       	add	r15, r16
     406:	2d 2d       	mov	r18, r13
     408:	3c 2d       	mov	r19, r12
     40a:	c9 01       	movw	r24, r18
     40c:	ec 01       	movw	r28, r24
     40e:	10 e0       	ldi	r17, 0x00	; 0
     410:	06 c0       	rjmp	.+12     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
     412:	88 81       	ld	r24, Y
     414:	0e 94 2b 0b 	call	0x1656	; 0x1656 <PC_putchar>
     418:	89 91       	ld	r24, Y+
     41a:	f8 0e       	add	r15, r24
     41c:	1f 5f       	subi	r17, 0xFF	; 255
     41e:	10 17       	cp	r17, r16
     420:	c0 f3       	brcs	.-16     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
     422:	8b 2d       	mov	r24, r11
     424:	9a 2d       	mov	r25, r10
     426:	9c 01       	movw	r18, r24
     428:	e9 01       	movw	r28, r18
     42a:	00 e0       	ldi	r16, 0x00	; 0
     42c:	06 c0       	rjmp	.+12     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
     42e:	88 81       	ld	r24, Y
     430:	0e 94 2b 0b 	call	0x1656	; 0x1656 <PC_putchar>
     434:	89 91       	ld	r24, Y+
     436:	f8 0e       	add	r15, r24
     438:	0f 5f       	subi	r16, 0xFF	; 255
     43a:	0e 15       	cp	r16, r14
     43c:	c0 f3       	brcs	.-16     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
     43e:	8f 2d       	mov	r24, r15
     440:	0e 94 2b 0b 	call	0x1656	; 0x1656 <PC_putchar>
     444:	80 e0       	ldi	r24, 0x00	; 0
     446:	df 91       	pop	r29
     448:	cf 91       	pop	r28
     44a:	1f 91       	pop	r17
     44c:	0f 91       	pop	r16
     44e:	ff 90       	pop	r15
     450:	ef 90       	pop	r14
     452:	df 90       	pop	r13
     454:	cf 90       	pop	r12
     456:	bf 90       	pop	r11
     458:	af 90       	pop	r10
     45a:	08 95       	ret

0000045c <HMI_Transceiver_put>:
     45c:	ef 92       	push	r14
     45e:	ff 92       	push	r15
     460:	0f 93       	push	r16
     462:	1f 93       	push	r17
     464:	cf 93       	push	r28
     466:	df 93       	push	r29
     468:	08 2f       	mov	r16, r24
     46a:	7b 01       	movw	r14, r22
     46c:	81 32       	cpi	r24, 0x21	; 33
     46e:	10 f0       	brcs	.+4      	; 0x474 <HMI_Transceiver_put+0x18>
     470:	81 e0       	ldi	r24, 0x01	; 1
     472:	1c c0       	rjmp	.+56     	; 0x4ac <HMI_Transceiver_put+0x50>
     474:	8a ea       	ldi	r24, 0xAA	; 170
     476:	0e 94 2b 0b 	call	0x1656	; 0x1656 <PC_putchar>
     47a:	8a ea       	ldi	r24, 0xAA	; 170
     47c:	0e 94 2b 0b 	call	0x1656	; 0x1656 <PC_putchar>
     480:	8a ea       	ldi	r24, 0xAA	; 170
     482:	0e 94 2b 0b 	call	0x1656	; 0x1656 <PC_putchar>
     486:	80 2f       	mov	r24, r16
     488:	0e 94 2b 0b 	call	0x1656	; 0x1656 <PC_putchar>
     48c:	10 2f       	mov	r17, r16
     48e:	e7 01       	movw	r28, r14
     490:	05 c0       	rjmp	.+10     	; 0x49c <HMI_Transceiver_put+0x40>
     492:	88 81       	ld	r24, Y
     494:	0e 94 2b 0b 	call	0x1656	; 0x1656 <PC_putchar>
     498:	89 91       	ld	r24, Y+
     49a:	18 0f       	add	r17, r24
     49c:	9e 01       	movw	r18, r28
     49e:	2e 19       	sub	r18, r14
     4a0:	20 17       	cp	r18, r16
     4a2:	b8 f3       	brcs	.-18     	; 0x492 <HMI_Transceiver_put+0x36>
     4a4:	81 2f       	mov	r24, r17
     4a6:	0e 94 2b 0b 	call	0x1656	; 0x1656 <PC_putchar>
     4aa:	80 e0       	ldi	r24, 0x00	; 0
     4ac:	df 91       	pop	r29
     4ae:	cf 91       	pop	r28
     4b0:	1f 91       	pop	r17
     4b2:	0f 91       	pop	r16
     4b4:	ff 90       	pop	r15
     4b6:	ef 90       	pop	r14
     4b8:	08 95       	ret

000004ba <ASA_M128_set>:
     4ba:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
     4be:	91 e1       	ldi	r25, 0x11	; 17
     4c0:	99 b9       	out	0x09, r25	; 9
     4c2:	8a b1       	in	r24, 0x0a	; 10
     4c4:	88 61       	ori	r24, 0x18	; 24
     4c6:	8a b9       	out	0x0a, r24	; 10
     4c8:	e5 e9       	ldi	r30, 0x95	; 149
     4ca:	f0 e0       	ldi	r31, 0x00	; 0
     4cc:	80 81       	ld	r24, Z
     4ce:	86 60       	ori	r24, 0x06	; 6
     4d0:	80 83       	st	Z, r24
     4d2:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
     4d6:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
     4da:	ea e9       	ldi	r30, 0x9A	; 154
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	80 81       	ld	r24, Z
     4e0:	88 61       	ori	r24, 0x18	; 24
     4e2:	80 83       	st	Z, r24
     4e4:	ed e9       	ldi	r30, 0x9D	; 157
     4e6:	f0 e0       	ldi	r31, 0x00	; 0
     4e8:	80 81       	ld	r24, Z
     4ea:	86 60       	ori	r24, 0x06	; 6
     4ec:	80 83       	st	Z, r24
     4ee:	80 e0       	ldi	r24, 0x00	; 0
     4f0:	91 e0       	ldi	r25, 0x01	; 1
     4f2:	90 93 bb 01 	sts	0x01BB, r25	; 0x8001bb <__iob+0x3>
     4f6:	80 93 ba 01 	sts	0x01BA, r24	; 0x8001ba <__iob+0x2>
     4fa:	90 93 b9 01 	sts	0x01B9, r25	; 0x8001b9 <__iob+0x1>
     4fe:	80 93 b8 01 	sts	0x01B8, r24	; 0x8001b8 <__iob>
     502:	87 b3       	in	r24, 0x17	; 23
     504:	80 6e       	ori	r24, 0xE0	; 224
     506:	87 bb       	out	0x17, r24	; 23
     508:	80 e0       	ldi	r24, 0x00	; 0
     50a:	0e 94 ce 0a 	call	0x159c	; 0x159c <ASA_ID_set>
     50e:	14 d0       	rcall	.+40     	; 0x538 <timer1_set>
     510:	78 94       	sei
     512:	80 e0       	ldi	r24, 0x00	; 0
     514:	08 95       	ret

00000516 <FrcStSw>:
     516:	fc 01       	movw	r30, r24
     518:	60 83       	st	Z, r22
     51a:	08 95       	ret

0000051c <EnUnpk>:
     51c:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <StateMachObj>
     520:	ea e9       	ldi	r30, 0x9A	; 154
     522:	f0 e0       	ldi	r31, 0x00	; 0
     524:	80 81       	ld	r24, Z
     526:	80 68       	ori	r24, 0x80	; 128
     528:	80 83       	st	Z, r24
     52a:	08 95       	ret

0000052c <DisUnpk>:
     52c:	ea e9       	ldi	r30, 0x9A	; 154
     52e:	f0 e0       	ldi	r31, 0x00	; 0
     530:	80 81       	ld	r24, Z
     532:	8f 77       	andi	r24, 0x7F	; 127
     534:	80 83       	st	Z, r24
     536:	08 95       	ret

00000538 <timer1_set>:
     538:	8e b5       	in	r24, 0x2e	; 46
     53a:	88 60       	ori	r24, 0x08	; 8
     53c:	8e bd       	out	0x2e, r24	; 46
     53e:	8e b5       	in	r24, 0x2e	; 46
     540:	82 60       	ori	r24, 0x02	; 2
     542:	8e bd       	out	0x2e, r24	; 46
     544:	87 b7       	in	r24, 0x37	; 55
     546:	80 61       	ori	r24, 0x10	; 16
     548:	87 bf       	out	0x37, r24	; 55
     54a:	8f e8       	ldi	r24, 0x8F	; 143
     54c:	90 e0       	ldi	r25, 0x00	; 0
     54e:	9b bd       	out	0x2b, r25	; 43
     550:	8a bd       	out	0x2a, r24	; 42
     552:	1d bc       	out	0x2d, r1	; 45
     554:	1c bc       	out	0x2c, r1	; 44
     556:	08 95       	ret

00000558 <RstTimeout>:
     558:	8e e1       	ldi	r24, 0x1E	; 30
     55a:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <uartTimeout>
     55e:	08 95       	ret

00000560 <BatchBuffer_put>:
     560:	0f 93       	push	r16
     562:	1f 93       	push	r17
     564:	cf 93       	push	r28
     566:	df 93       	push	r29
     568:	ec 01       	movw	r28, r24
     56a:	8a 01       	movw	r16, r20
     56c:	89 81       	ldd	r24, Y+1	; 0x01
     56e:	70 e0       	ldi	r23, 0x00	; 0
     570:	e8 2f       	mov	r30, r24
     572:	f0 e0       	ldi	r31, 0x00	; 0
     574:	9b 01       	movw	r18, r22
     576:	2e 0f       	add	r18, r30
     578:	3f 1f       	adc	r19, r31
     57a:	8a 81       	ldd	r24, Y+2	; 0x02
     57c:	90 e0       	ldi	r25, 0x00	; 0
     57e:	82 17       	cp	r24, r18
     580:	93 07       	cpc	r25, r19
     582:	64 f1       	brlt	.+88     	; 0x5dc <BatchBuffer_put+0x7c>
     584:	af 01       	movw	r20, r30
     586:	4c 5f       	subi	r20, 0xFC	; 252
     588:	5f 4f       	sbci	r21, 0xFF	; 255
     58a:	4c 0f       	add	r20, r28
     58c:	5d 1f       	adc	r21, r29
     58e:	20 e0       	ldi	r18, 0x00	; 0
     590:	30 e0       	ldi	r19, 0x00	; 0
     592:	0d c0       	rjmp	.+26     	; 0x5ae <BatchBuffer_put+0x4e>
     594:	da 01       	movw	r26, r20
     596:	a2 0f       	add	r26, r18
     598:	b3 1f       	adc	r27, r19
     59a:	f8 01       	movw	r30, r16
     59c:	e2 0f       	add	r30, r18
     59e:	f3 1f       	adc	r31, r19
     5a0:	80 81       	ld	r24, Z
     5a2:	8c 93       	st	X, r24
     5a4:	88 81       	ld	r24, Y
     5a6:	8f 5f       	subi	r24, 0xFF	; 255
     5a8:	88 83       	st	Y, r24
     5aa:	2f 5f       	subi	r18, 0xFF	; 255
     5ac:	3f 4f       	sbci	r19, 0xFF	; 255
     5ae:	26 17       	cp	r18, r22
     5b0:	37 07       	cpc	r19, r23
     5b2:	84 f3       	brlt	.-32     	; 0x594 <BatchBuffer_put+0x34>
     5b4:	58 81       	ld	r21, Y
     5b6:	49 81       	ldd	r20, Y+1	; 0x01
     5b8:	24 2f       	mov	r18, r20
     5ba:	30 e0       	ldi	r19, 0x00	; 0
     5bc:	25 0f       	add	r18, r21
     5be:	31 1d       	adc	r19, r1
     5c0:	8a 81       	ldd	r24, Y+2	; 0x02
     5c2:	90 e0       	ldi	r25, 0x00	; 0
     5c4:	45 0f       	add	r20, r21
     5c6:	28 17       	cp	r18, r24
     5c8:	39 07       	cpc	r19, r25
     5ca:	11 f4       	brne	.+4      	; 0x5d0 <BatchBuffer_put+0x70>
     5cc:	81 e0       	ldi	r24, 0x01	; 1
     5ce:	01 c0       	rjmp	.+2      	; 0x5d2 <BatchBuffer_put+0x72>
     5d0:	82 e0       	ldi	r24, 0x02	; 2
     5d2:	8b 83       	std	Y+3, r24	; 0x03
     5d4:	49 83       	std	Y+1, r20	; 0x01
     5d6:	18 82       	st	Y, r1
     5d8:	80 e0       	ldi	r24, 0x00	; 0
     5da:	02 c0       	rjmp	.+4      	; 0x5e0 <BatchBuffer_put+0x80>
     5dc:	81 e0       	ldi	r24, 0x01	; 1
     5de:	8b 83       	std	Y+3, r24	; 0x03
     5e0:	df 91       	pop	r29
     5e2:	cf 91       	pop	r28
     5e4:	1f 91       	pop	r17
     5e6:	0f 91       	pop	r16
     5e8:	08 95       	ret

000005ea <BatchBuffer_get>:
     5ea:	0f 93       	push	r16
     5ec:	1f 93       	push	r17
     5ee:	cf 93       	push	r28
     5f0:	df 93       	push	r29
     5f2:	ec 01       	movw	r28, r24
     5f4:	96 2f       	mov	r25, r22
     5f6:	89 81       	ldd	r24, Y+1	; 0x01
     5f8:	86 17       	cp	r24, r22
     5fa:	10 f4       	brcc	.+4      	; 0x600 <BatchBuffer_get+0x16>
     5fc:	81 e0       	ldi	r24, 0x01	; 1
     5fe:	42 c0       	rjmp	.+132    	; 0x684 <BatchBuffer_get+0x9a>
     600:	88 81       	ld	r24, Y
     602:	68 2f       	mov	r22, r24
     604:	70 e0       	ldi	r23, 0x00	; 0
     606:	6c 5f       	subi	r22, 0xFC	; 252
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	6c 0f       	add	r22, r28
     60c:	7d 1f       	adc	r23, r29
     60e:	20 e0       	ldi	r18, 0x00	; 0
     610:	30 e0       	ldi	r19, 0x00	; 0
     612:	09 2f       	mov	r16, r25
     614:	10 e0       	ldi	r17, 0x00	; 0
     616:	0d c0       	rjmp	.+26     	; 0x632 <BatchBuffer_get+0x48>
     618:	da 01       	movw	r26, r20
     61a:	a2 0f       	add	r26, r18
     61c:	b3 1f       	adc	r27, r19
     61e:	fb 01       	movw	r30, r22
     620:	e2 0f       	add	r30, r18
     622:	f3 1f       	adc	r31, r19
     624:	80 81       	ld	r24, Z
     626:	8c 93       	st	X, r24
     628:	88 81       	ld	r24, Y
     62a:	8f 5f       	subi	r24, 0xFF	; 255
     62c:	88 83       	st	Y, r24
     62e:	2f 5f       	subi	r18, 0xFF	; 255
     630:	3f 4f       	sbci	r19, 0xFF	; 255
     632:	20 17       	cp	r18, r16
     634:	31 07       	cpc	r19, r17
     636:	84 f3       	brlt	.-32     	; 0x618 <BatchBuffer_get+0x2e>
     638:	88 81       	ld	r24, Y
     63a:	08 2f       	mov	r16, r24
     63c:	10 e0       	ldi	r17, 0x00	; 0
     63e:	db 01       	movw	r26, r22
     640:	a0 0f       	add	r26, r16
     642:	b1 1f       	adc	r27, r17
     644:	40 e0       	ldi	r20, 0x00	; 0
     646:	50 e0       	ldi	r21, 0x00	; 0
     648:	08 c0       	rjmp	.+16     	; 0x65a <BatchBuffer_get+0x70>
     64a:	fb 01       	movw	r30, r22
     64c:	e4 0f       	add	r30, r20
     64e:	f5 1f       	adc	r31, r21
     650:	8c 91       	ld	r24, X
     652:	80 83       	st	Z, r24
     654:	1d 92       	st	X+, r1
     656:	4f 5f       	subi	r20, 0xFF	; 255
     658:	5f 4f       	sbci	r21, 0xFF	; 255
     65a:	e9 81       	ldd	r30, Y+1	; 0x01
     65c:	9a 01       	movw	r18, r20
     65e:	20 0f       	add	r18, r16
     660:	31 1f       	adc	r19, r17
     662:	8e 2f       	mov	r24, r30
     664:	90 e0       	ldi	r25, 0x00	; 0
     666:	28 17       	cp	r18, r24
     668:	39 07       	cpc	r19, r25
     66a:	7c f3       	brlt	.-34     	; 0x64a <BatchBuffer_get+0x60>
     66c:	98 81       	ld	r25, Y
     66e:	9e 17       	cp	r25, r30
     670:	19 f4       	brne	.+6      	; 0x678 <BatchBuffer_get+0x8e>
     672:	1b 82       	std	Y+3, r1	; 0x03
     674:	19 82       	std	Y+1, r1	; 0x01
     676:	04 c0       	rjmp	.+8      	; 0x680 <BatchBuffer_get+0x96>
     678:	82 e0       	ldi	r24, 0x02	; 2
     67a:	8b 83       	std	Y+3, r24	; 0x03
     67c:	e9 1b       	sub	r30, r25
     67e:	e9 83       	std	Y+1, r30	; 0x01
     680:	18 82       	st	Y, r1
     682:	80 e0       	ldi	r24, 0x00	; 0
     684:	df 91       	pop	r29
     686:	cf 91       	pop	r28
     688:	1f 91       	pop	r17
     68a:	0f 91       	pop	r16
     68c:	08 95       	ret

0000068e <__vector_32>:
     68e:	1f 92       	push	r1
     690:	0f 92       	push	r0
     692:	0f b6       	in	r0, 0x3f	; 63
     694:	0f 92       	push	r0
     696:	0b b6       	in	r0, 0x3b	; 59
     698:	0f 92       	push	r0
     69a:	11 24       	eor	r1, r1
     69c:	2f 93       	push	r18
     69e:	3f 93       	push	r19
     6a0:	4f 93       	push	r20
     6a2:	5f 93       	push	r21
     6a4:	6f 93       	push	r22
     6a6:	7f 93       	push	r23
     6a8:	8f 93       	push	r24
     6aa:	9f 93       	push	r25
     6ac:	af 93       	push	r26
     6ae:	bf 93       	push	r27
     6b0:	ef 93       	push	r30
     6b2:	ff 93       	push	r31
     6b4:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <CmdBuf+0x3>
     6b8:	88 23       	and	r24, r24
     6ba:	59 f0       	breq	.+22     	; 0x6d2 <__vector_32+0x44>
     6bc:	8e e0       	ldi	r24, 0x0E	; 14
     6be:	91 e0       	ldi	r25, 0x01	; 1
     6c0:	61 e0       	ldi	r22, 0x01	; 1
     6c2:	45 eb       	ldi	r20, 0xB5	; 181
     6c4:	51 e0       	ldi	r21, 0x01	; 1
     6c6:	91 df       	rcall	.-222    	; 0x5ea <BatchBuffer_get>
     6c8:	80 91 b5 01 	lds	r24, 0x01B5	; 0x8001b5 <Data_get>
     6cc:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
     6d0:	05 c0       	rjmp	.+10     	; 0x6dc <__vector_32+0x4e>
     6d2:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     6d6:	8f 7b       	andi	r24, 0xBF	; 191
     6d8:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     6dc:	ff 91       	pop	r31
     6de:	ef 91       	pop	r30
     6e0:	bf 91       	pop	r27
     6e2:	af 91       	pop	r26
     6e4:	9f 91       	pop	r25
     6e6:	8f 91       	pop	r24
     6e8:	7f 91       	pop	r23
     6ea:	6f 91       	pop	r22
     6ec:	5f 91       	pop	r21
     6ee:	4f 91       	pop	r20
     6f0:	3f 91       	pop	r19
     6f2:	2f 91       	pop	r18
     6f4:	0f 90       	pop	r0
     6f6:	0b be       	out	0x3b, r0	; 59
     6f8:	0f 90       	pop	r0
     6fa:	0f be       	out	0x3f, r0	; 63
     6fc:	0f 90       	pop	r0
     6fe:	1f 90       	pop	r1
     700:	18 95       	reti

00000702 <BatchBuffer_full>:
     702:	fc 01       	movw	r30, r24
     704:	81 e0       	ldi	r24, 0x01	; 1
     706:	83 83       	std	Z+3, r24	; 0x03
     708:	08 95       	ret

0000070a <BatchBuffer_clear>:
     70a:	fc 01       	movw	r30, r24
     70c:	13 82       	std	Z+3, r1	; 0x03
     70e:	11 82       	std	Z+1, r1	; 0x01
     710:	10 82       	st	Z, r1
     712:	80 e0       	ldi	r24, 0x00	; 0
     714:	90 e0       	ldi	r25, 0x00	; 0
     716:	14 82       	std	Z+4, r1	; 0x04
     718:	01 96       	adiw	r24, 0x01	; 1
     71a:	31 96       	adiw	r30, 0x01	; 1
     71c:	80 32       	cpi	r24, 0x20	; 32
     71e:	91 05       	cpc	r25, r1
     720:	d1 f7       	brne	.-12     	; 0x716 <BatchBuffer_clear+0xc>
     722:	08 95       	ret

00000724 <__vector_30>:
     724:	1f 92       	push	r1
     726:	0f 92       	push	r0
     728:	0f b6       	in	r0, 0x3f	; 63
     72a:	0f 92       	push	r0
     72c:	0b b6       	in	r0, 0x3b	; 59
     72e:	0f 92       	push	r0
     730:	11 24       	eor	r1, r1
     732:	2f 93       	push	r18
     734:	3f 93       	push	r19
     736:	4f 93       	push	r20
     738:	5f 93       	push	r21
     73a:	6f 93       	push	r22
     73c:	7f 93       	push	r23
     73e:	8f 93       	push	r24
     740:	9f 93       	push	r25
     742:	af 93       	push	r26
     744:	bf 93       	push	r27
     746:	ef 93       	push	r30
     748:	ff 93       	push	r31
     74a:	90 91 9c 00 	lds	r25, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
     74e:	90 93 8e 01 	sts	0x018E, r25	; 0x80018e <UnpkToolObj+0x2>
     752:	80 91 87 01 	lds	r24, 0x0187	; 0x800187 <StateMachObj>
     756:	82 30       	cpi	r24, 0x02	; 2
     758:	31 f1       	breq	.+76     	; 0x7a6 <__vector_30+0x82>
     75a:	83 30       	cpi	r24, 0x03	; 3
     75c:	30 f4       	brcc	.+12     	; 0x76a <__vector_30+0x46>
     75e:	88 23       	and	r24, r24
     760:	59 f0       	breq	.+22     	; 0x778 <__vector_30+0x54>
     762:	81 30       	cpi	r24, 0x01	; 1
     764:	09 f0       	breq	.+2      	; 0x768 <__vector_30+0x44>
     766:	85 c0       	rjmp	.+266    	; 0x872 <__vector_30+0x14e>
     768:	0c c0       	rjmp	.+24     	; 0x782 <__vector_30+0x5e>
     76a:	83 30       	cpi	r24, 0x03	; 3
     76c:	09 f4       	brne	.+2      	; 0x770 <__vector_30+0x4c>
     76e:	4b c0       	rjmp	.+150    	; 0x806 <__vector_30+0xe2>
     770:	84 30       	cpi	r24, 0x04	; 4
     772:	09 f0       	breq	.+2      	; 0x776 <__vector_30+0x52>
     774:	7e c0       	rjmp	.+252    	; 0x872 <__vector_30+0x14e>
     776:	6a c0       	rjmp	.+212    	; 0x84c <__vector_30+0x128>
     778:	90 3f       	cpi	r25, 0xF0	; 240
     77a:	09 f0       	breq	.+2      	; 0x77e <__vector_30+0x5a>
     77c:	63 c0       	rjmp	.+198    	; 0x844 <__vector_30+0x120>
     77e:	81 e0       	ldi	r24, 0x01	; 1
     780:	5f c0       	rjmp	.+190    	; 0x840 <__vector_30+0x11c>
     782:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <__data_end>
     786:	98 17       	cp	r25, r24
     788:	21 f4       	brne	.+8      	; 0x792 <__vector_30+0x6e>
     78a:	82 e0       	ldi	r24, 0x02	; 2
     78c:	80 93 87 01 	sts	0x0187, r24	; 0x800187 <StateMachObj>
     790:	07 c0       	rjmp	.+14     	; 0x7a0 <__vector_30+0x7c>
     792:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <StateMachObj>
     796:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     79a:	8f 77       	andi	r24, 0x7F	; 127
     79c:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     7a0:	10 92 8f 01 	sts	0x018F, r1	; 0x80018f <UnpkToolObj+0x3>
     7a4:	4f c0       	rjmp	.+158    	; 0x844 <__vector_30+0x120>
     7a6:	99 23       	and	r25, r25
     7a8:	b9 f4       	brne	.+46     	; 0x7d8 <__vector_30+0xb4>
     7aa:	80 91 61 01 	lds	r24, 0x0161	; 0x800161 <__data_end+0x1>
     7ae:	82 30       	cpi	r24, 0x02	; 2
     7b0:	39 f4       	brne	.+14     	; 0x7c0 <__vector_30+0x9c>
     7b2:	83 e0       	ldi	r24, 0x03	; 3
     7b4:	80 93 87 01 	sts	0x0187, r24	; 0x800187 <StateMachObj>
     7b8:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <__data_end+0x3>
     7bc:	90 e0       	ldi	r25, 0x00	; 0
     7be:	07 c0       	rjmp	.+14     	; 0x7ce <__vector_30+0xaa>
     7c0:	84 30       	cpi	r24, 0x04	; 4
     7c2:	51 f4       	brne	.+20     	; 0x7d8 <__vector_30+0xb4>
     7c4:	83 e0       	ldi	r24, 0x03	; 3
     7c6:	80 93 87 01 	sts	0x0187, r24	; 0x800187 <StateMachObj>
     7ca:	81 e0       	ldi	r24, 0x01	; 1
     7cc:	90 e0       	ldi	r25, 0x00	; 0
     7ce:	90 93 8d 01 	sts	0x018D, r25	; 0x80018d <UnpkToolObj+0x1>
     7d2:	80 93 8c 01 	sts	0x018C, r24	; 0x80018c <UnpkToolObj>
     7d6:	07 c0       	rjmp	.+14     	; 0x7e6 <__vector_30+0xc2>
     7d8:	84 e0       	ldi	r24, 0x04	; 4
     7da:	80 93 87 01 	sts	0x0187, r24	; 0x800187 <StateMachObj>
     7de:	10 92 8d 01 	sts	0x018D, r1	; 0x80018d <UnpkToolObj+0x1>
     7e2:	10 92 8c 01 	sts	0x018C, r1	; 0x80018c <UnpkToolObj>
     7e6:	82 e3       	ldi	r24, 0x32	; 50
     7e8:	91 e0       	ldi	r25, 0x01	; 1
     7ea:	61 e0       	ldi	r22, 0x01	; 1
     7ec:	4e e8       	ldi	r20, 0x8E	; 142
     7ee:	51 e0       	ldi	r21, 0x01	; 1
     7f0:	b7 de       	rcall	.-658    	; 0x560 <BatchBuffer_put>
     7f2:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <UnpkToolObj+0x2>
     7f6:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <UnpkParaObj+0x1>
     7fa:	90 91 8f 01 	lds	r25, 0x018F	; 0x80018f <UnpkToolObj+0x3>
     7fe:	98 0f       	add	r25, r24
     800:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <UnpkToolObj+0x3>
     804:	1f c0       	rjmp	.+62     	; 0x844 <__vector_30+0x120>
     806:	82 e3       	ldi	r24, 0x32	; 50
     808:	91 e0       	ldi	r25, 0x01	; 1
     80a:	61 e0       	ldi	r22, 0x01	; 1
     80c:	4e e8       	ldi	r20, 0x8E	; 142
     80e:	51 e0       	ldi	r21, 0x01	; 1
     810:	a7 de       	rcall	.-690    	; 0x560 <BatchBuffer_put>
     812:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <UnpkToolObj+0x2>
     816:	90 91 8f 01 	lds	r25, 0x018F	; 0x80018f <UnpkToolObj+0x3>
     81a:	89 0f       	add	r24, r25
     81c:	80 93 8f 01 	sts	0x018F, r24	; 0x80018f <UnpkToolObj+0x3>
     820:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <UnpkToolObj>
     824:	90 91 8d 01 	lds	r25, 0x018D	; 0x80018d <UnpkToolObj+0x1>
     828:	01 97       	sbiw	r24, 0x01	; 1
     82a:	90 93 8d 01 	sts	0x018D, r25	; 0x80018d <UnpkToolObj+0x1>
     82e:	80 93 8c 01 	sts	0x018C, r24	; 0x80018c <UnpkToolObj>
     832:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <UnpkToolObj>
     836:	90 91 8d 01 	lds	r25, 0x018D	; 0x80018d <UnpkToolObj+0x1>
     83a:	89 2b       	or	r24, r25
     83c:	19 f4       	brne	.+6      	; 0x844 <__vector_30+0x120>
     83e:	84 e0       	ldi	r24, 0x04	; 4
     840:	80 93 87 01 	sts	0x0187, r24	; 0x800187 <StateMachObj>
     844:	8e e1       	ldi	r24, 0x1E	; 30
     846:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <uartTimeout>
     84a:	13 c0       	rjmp	.+38     	; 0x872 <__vector_30+0x14e>
     84c:	80 91 8f 01 	lds	r24, 0x018F	; 0x80018f <UnpkToolObj+0x3>
     850:	98 17       	cp	r25, r24
     852:	21 f4       	brne	.+8      	; 0x85c <__vector_30+0x138>
     854:	81 e0       	ldi	r24, 0x01	; 1
     856:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <ReBuf+0x3>
     85a:	03 c0       	rjmp	.+6      	; 0x862 <__vector_30+0x13e>
     85c:	82 e3       	ldi	r24, 0x32	; 50
     85e:	91 e0       	ldi	r25, 0x01	; 1
     860:	54 df       	rcall	.-344    	; 0x70a <BatchBuffer_clear>
     862:	8e e1       	ldi	r24, 0x1E	; 30
     864:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <uartTimeout>
     868:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     86c:	8f 77       	andi	r24, 0x7F	; 127
     86e:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     872:	ff 91       	pop	r31
     874:	ef 91       	pop	r30
     876:	bf 91       	pop	r27
     878:	af 91       	pop	r26
     87a:	9f 91       	pop	r25
     87c:	8f 91       	pop	r24
     87e:	7f 91       	pop	r23
     880:	6f 91       	pop	r22
     882:	5f 91       	pop	r21
     884:	4f 91       	pop	r20
     886:	3f 91       	pop	r19
     888:	2f 91       	pop	r18
     88a:	0f 90       	pop	r0
     88c:	0b be       	out	0x3b, r0	; 59
     88e:	0f 90       	pop	r0
     890:	0f be       	out	0x3f, r0	; 63
     892:	0f 90       	pop	r0
     894:	1f 90       	pop	r1
     896:	18 95       	reti

00000898 <__vector_12>:
     898:	1f 92       	push	r1
     89a:	0f 92       	push	r0
     89c:	0f b6       	in	r0, 0x3f	; 63
     89e:	0f 92       	push	r0
     8a0:	0b b6       	in	r0, 0x3b	; 59
     8a2:	0f 92       	push	r0
     8a4:	11 24       	eor	r1, r1
     8a6:	2f 93       	push	r18
     8a8:	3f 93       	push	r19
     8aa:	4f 93       	push	r20
     8ac:	5f 93       	push	r21
     8ae:	6f 93       	push	r22
     8b0:	7f 93       	push	r23
     8b2:	8f 93       	push	r24
     8b4:	9f 93       	push	r25
     8b6:	af 93       	push	r26
     8b8:	bf 93       	push	r27
     8ba:	ef 93       	push	r30
     8bc:	ff 93       	push	r31
     8be:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <StateMachObj+0x1>
     8c2:	81 30       	cpi	r24, 0x01	; 1
     8c4:	79 f0       	breq	.+30     	; 0x8e4 <__vector_12+0x4c>
     8c6:	81 30       	cpi	r24, 0x01	; 1
     8c8:	18 f0       	brcs	.+6      	; 0x8d0 <__vector_12+0x38>
     8ca:	82 30       	cpi	r24, 0x02	; 2
     8cc:	59 f5       	brne	.+86     	; 0x924 <__vector_12+0x8c>
     8ce:	24 c0       	rjmp	.+72     	; 0x918 <__vector_12+0x80>
     8d0:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <StateMachObj+0x4>
     8d4:	91 30       	cpi	r25, 0x01	; 1
     8d6:	31 f5       	brne	.+76     	; 0x924 <__vector_12+0x8c>
     8d8:	8e e1       	ldi	r24, 0x1E	; 30
     8da:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <uartTimeout>
     8de:	90 93 88 01 	sts	0x0188, r25	; 0x800188 <StateMachObj+0x1>
     8e2:	20 c0       	rjmp	.+64     	; 0x924 <__vector_12+0x8c>
     8e4:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <uartTimeout>
     8e8:	81 50       	subi	r24, 0x01	; 1
     8ea:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <uartTimeout>
     8ee:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <uartTimeout>
     8f2:	88 23       	and	r24, r24
     8f4:	61 f4       	brne	.+24     	; 0x90e <__vector_12+0x76>
     8f6:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     8fa:	8f 77       	andi	r24, 0x7F	; 127
     8fc:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     900:	82 e3       	ldi	r24, 0x32	; 50
     902:	91 e0       	ldi	r25, 0x01	; 1
     904:	02 df       	rcall	.-508    	; 0x70a <BatchBuffer_clear>
     906:	82 e0       	ldi	r24, 0x02	; 2
     908:	80 93 88 01 	sts	0x0188, r24	; 0x800188 <StateMachObj+0x1>
     90c:	0b c0       	rjmp	.+22     	; 0x924 <__vector_12+0x8c>
     90e:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     912:	87 fd       	sbrc	r24, 7
     914:	07 c0       	rjmp	.+14     	; 0x924 <__vector_12+0x8c>
     916:	04 c0       	rjmp	.+8      	; 0x920 <__vector_12+0x88>
     918:	80 91 8b 01 	lds	r24, 0x018B	; 0x80018b <StateMachObj+0x4>
     91c:	88 23       	and	r24, r24
     91e:	11 f4       	brne	.+4      	; 0x924 <__vector_12+0x8c>
     920:	10 92 88 01 	sts	0x0188, r1	; 0x800188 <StateMachObj+0x1>
     924:	ff 91       	pop	r31
     926:	ef 91       	pop	r30
     928:	bf 91       	pop	r27
     92a:	af 91       	pop	r26
     92c:	9f 91       	pop	r25
     92e:	8f 91       	pop	r24
     930:	7f 91       	pop	r23
     932:	6f 91       	pop	r22
     934:	5f 91       	pop	r21
     936:	4f 91       	pop	r20
     938:	3f 91       	pop	r19
     93a:	2f 91       	pop	r18
     93c:	0f 90       	pop	r0
     93e:	0b be       	out	0x3b, r0	; 59
     940:	0f 90       	pop	r0
     942:	0f be       	out	0x3f, r0	; 63
     944:	0f 90       	pop	r0
     946:	1f 90       	pop	r1
     948:	18 95       	reti

0000094a <ASA_RS485_fgt>:
     94a:	ef 92       	push	r14
     94c:	ff 92       	push	r15
     94e:	0f 93       	push	r16
     950:	df 93       	push	r29
     952:	cf 93       	push	r28
     954:	cd b7       	in	r28, 0x3d	; 61
     956:	de b7       	in	r29, 0x3e	; 62
     958:	28 97       	sbiw	r28, 0x08	; 8
     95a:	0f b6       	in	r0, 0x3f	; 63
     95c:	f8 94       	cli
     95e:	de bf       	out	0x3e, r29	; 62
     960:	0f be       	out	0x3f, r0	; 63
     962:	cd bf       	out	0x3d, r28	; 61
     964:	6d 83       	std	Y+5, r22	; 0x05
     966:	4e 83       	std	Y+6, r20	; 0x06
     968:	2f 83       	std	Y+7, r18	; 0x07
     96a:	08 87       	std	Y+8, r16	; 0x08
     96c:	19 82       	std	Y+1, r1	; 0x01
     96e:	94 e0       	ldi	r25, 0x04	; 4
     970:	9a 83       	std	Y+2, r25	; 0x02
     972:	14 d6       	rcall	.+3112   	; 0x159c <ASA_ID_set>
     974:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
     978:	80 61       	ori	r24, 0x10	; 16
     97a:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
     97e:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     982:	80 61       	ori	r24, 0x10	; 16
     984:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     988:	8a 81       	ldd	r24, Y+2	; 0x02
     98a:	99 81       	ldd	r25, Y+1	; 0x01
     98c:	89 0f       	add	r24, r25
     98e:	9e 81       	ldd	r25, Y+6	; 0x06
     990:	89 0f       	add	r24, r25
     992:	9f 81       	ldd	r25, Y+7	; 0x07
     994:	89 0f       	add	r24, r25
     996:	98 85       	ldd	r25, Y+8	; 0x08
     998:	89 0f       	add	r24, r25
     99a:	89 83       	std	Y+1, r24	; 0x01
     99c:	8e e0       	ldi	r24, 0x0E	; 14
     99e:	91 e0       	ldi	r25, 0x01	; 1
     9a0:	61 e0       	ldi	r22, 0x01	; 1
     9a2:	ae 01       	movw	r20, r28
     9a4:	4b 5f       	subi	r20, 0xFB	; 251
     9a6:	5f 4f       	sbci	r21, 0xFF	; 255
     9a8:	db dd       	rcall	.-1098   	; 0x560 <BatchBuffer_put>
     9aa:	8e e0       	ldi	r24, 0x0E	; 14
     9ac:	91 e0       	ldi	r25, 0x01	; 1
     9ae:	61 e0       	ldi	r22, 0x01	; 1
     9b0:	ae 01       	movw	r20, r28
     9b2:	4e 5f       	subi	r20, 0xFE	; 254
     9b4:	5f 4f       	sbci	r21, 0xFF	; 255
     9b6:	d4 dd       	rcall	.-1112   	; 0x560 <BatchBuffer_put>
     9b8:	8e e0       	ldi	r24, 0x0E	; 14
     9ba:	91 e0       	ldi	r25, 0x01	; 1
     9bc:	61 e0       	ldi	r22, 0x01	; 1
     9be:	ae 01       	movw	r20, r28
     9c0:	4a 5f       	subi	r20, 0xFA	; 250
     9c2:	5f 4f       	sbci	r21, 0xFF	; 255
     9c4:	cd dd       	rcall	.-1126   	; 0x560 <BatchBuffer_put>
     9c6:	8e e0       	ldi	r24, 0x0E	; 14
     9c8:	91 e0       	ldi	r25, 0x01	; 1
     9ca:	61 e0       	ldi	r22, 0x01	; 1
     9cc:	ae 01       	movw	r20, r28
     9ce:	49 5f       	subi	r20, 0xF9	; 249
     9d0:	5f 4f       	sbci	r21, 0xFF	; 255
     9d2:	c6 dd       	rcall	.-1140   	; 0x560 <BatchBuffer_put>
     9d4:	8e e0       	ldi	r24, 0x0E	; 14
     9d6:	91 e0       	ldi	r25, 0x01	; 1
     9d8:	61 e0       	ldi	r22, 0x01	; 1
     9da:	ae 01       	movw	r20, r28
     9dc:	48 5f       	subi	r20, 0xF8	; 248
     9de:	5f 4f       	sbci	r21, 0xFF	; 255
     9e0:	bf dd       	rcall	.-1154   	; 0x560 <BatchBuffer_put>
     9e2:	8e e0       	ldi	r24, 0x0E	; 14
     9e4:	91 e0       	ldi	r25, 0x01	; 1
     9e6:	61 e0       	ldi	r22, 0x01	; 1
     9e8:	ae 01       	movw	r20, r28
     9ea:	4f 5f       	subi	r20, 0xFF	; 255
     9ec:	5f 4f       	sbci	r21, 0xFF	; 255
     9ee:	b8 dd       	rcall	.-1168   	; 0x560 <BatchBuffer_put>
     9f0:	8d 81       	ldd	r24, Y+5	; 0x05
     9f2:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <__data_end>
     9f6:	8a 81       	ldd	r24, Y+2	; 0x02
     9f8:	80 93 61 01 	sts	0x0161, r24	; 0x800161 <__data_end+0x1>
     9fc:	80 ef       	ldi	r24, 0xF0	; 240
     9fe:	dc d5       	rcall	.+3000   	; 0x15b8 <UART1_putchar>
     a00:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     a04:	80 64       	ori	r24, 0x40	; 64
     a06:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     a0a:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     a0e:	86 fd       	sbrc	r24, 6
     a10:	fc cf       	rjmp	.-8      	; 0xa0a <ASA_RS485_fgt+0xc0>
     a12:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     a16:	8f 7e       	andi	r24, 0xEF	; 239
     a18:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     a1c:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <StateMachObj>
     a20:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     a24:	80 68       	ori	r24, 0x80	; 128
     a26:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     a2a:	81 e0       	ldi	r24, 0x01	; 1
     a2c:	80 93 8b 01 	sts	0x018B, r24	; 0x80018b <StateMachObj+0x4>
     a30:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <ReBuf+0x3>
     a34:	81 30       	cpi	r24, 0x01	; 1
     a36:	21 f0       	breq	.+8      	; 0xa40 <ASA_RS485_fgt+0xf6>
     a38:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <StateMachObj+0x1>
     a3c:	82 30       	cpi	r24, 0x02	; 2
     a3e:	c1 f7       	brne	.-16     	; 0xa30 <ASA_RS485_fgt+0xe6>
     a40:	10 92 8b 01 	sts	0x018B, r1	; 0x80018b <StateMachObj+0x4>
     a44:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <ReBuf+0x3>
     a48:	81 30       	cpi	r24, 0x01	; 1
     a4a:	11 f0       	breq	.+4      	; 0xa50 <ASA_RS485_fgt+0x106>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	17 c0       	rjmp	.+46     	; 0xa7e <ASA_RS485_fgt+0x134>
     a50:	82 e3       	ldi	r24, 0x32	; 50
     a52:	91 e0       	ldi	r25, 0x01	; 1
     a54:	61 e0       	ldi	r22, 0x01	; 1
     a56:	ae 01       	movw	r20, r28
     a58:	4d 5f       	subi	r20, 0xFD	; 253
     a5a:	5f 4f       	sbci	r21, 0xFF	; 255
     a5c:	c6 dd       	rcall	.-1140   	; 0x5ea <BatchBuffer_get>
     a5e:	8b 81       	ldd	r24, Y+3	; 0x03
     a60:	88 23       	and	r24, r24
     a62:	51 f4       	brne	.+20     	; 0xa78 <ASA_RS485_fgt+0x12e>
     a64:	82 e3       	ldi	r24, 0x32	; 50
     a66:	91 e0       	ldi	r25, 0x01	; 1
     a68:	61 e0       	ldi	r22, 0x01	; 1
     a6a:	ae 01       	movw	r20, r28
     a6c:	4c 5f       	subi	r20, 0xFC	; 252
     a6e:	5f 4f       	sbci	r21, 0xFF	; 255
     a70:	bc dd       	rcall	.-1160   	; 0x5ea <BatchBuffer_get>
     a72:	8c 81       	ldd	r24, Y+4	; 0x04
     a74:	f7 01       	movw	r30, r14
     a76:	80 83       	st	Z, r24
     a78:	8b 81       	ldd	r24, Y+3	; 0x03
     a7a:	88 0f       	add	r24, r24
     a7c:	88 0f       	add	r24, r24
     a7e:	28 96       	adiw	r28, 0x08	; 8
     a80:	0f b6       	in	r0, 0x3f	; 63
     a82:	f8 94       	cli
     a84:	de bf       	out	0x3e, r29	; 62
     a86:	0f be       	out	0x3f, r0	; 63
     a88:	cd bf       	out	0x3d, r28	; 61
     a8a:	cf 91       	pop	r28
     a8c:	df 91       	pop	r29
     a8e:	0f 91       	pop	r16
     a90:	ff 90       	pop	r15
     a92:	ef 90       	pop	r14
     a94:	08 95       	ret

00000a96 <ASA_RS485_fpt>:
     a96:	ef 92       	push	r14
     a98:	0f 93       	push	r16
     a9a:	df 93       	push	r29
     a9c:	cf 93       	push	r28
     a9e:	cd b7       	in	r28, 0x3d	; 61
     aa0:	de b7       	in	r29, 0x3e	; 62
     aa2:	28 97       	sbiw	r28, 0x08	; 8
     aa4:	0f b6       	in	r0, 0x3f	; 63
     aa6:	f8 94       	cli
     aa8:	de bf       	out	0x3e, r29	; 62
     aaa:	0f be       	out	0x3f, r0	; 63
     aac:	cd bf       	out	0x3d, r28	; 61
     aae:	6c 83       	std	Y+4, r22	; 0x04
     ab0:	4d 83       	std	Y+5, r20	; 0x05
     ab2:	2e 83       	std	Y+6, r18	; 0x06
     ab4:	0f 83       	std	Y+7, r16	; 0x07
     ab6:	e8 86       	std	Y+8, r14	; 0x08
     ab8:	19 82       	std	Y+1, r1	; 0x01
     aba:	93 e0       	ldi	r25, 0x03	; 3
     abc:	9a 83       	std	Y+2, r25	; 0x02
     abe:	6e d5       	rcall	.+2780   	; 0x159c <ASA_ID_set>
     ac0:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
     ac4:	80 61       	ori	r24, 0x10	; 16
     ac6:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
     aca:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     ace:	80 61       	ori	r24, 0x10	; 16
     ad0:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     ad4:	8a 81       	ldd	r24, Y+2	; 0x02
     ad6:	99 81       	ldd	r25, Y+1	; 0x01
     ad8:	89 0f       	add	r24, r25
     ada:	9d 81       	ldd	r25, Y+5	; 0x05
     adc:	89 0f       	add	r24, r25
     ade:	9e 81       	ldd	r25, Y+6	; 0x06
     ae0:	89 0f       	add	r24, r25
     ae2:	9f 81       	ldd	r25, Y+7	; 0x07
     ae4:	89 0f       	add	r24, r25
     ae6:	98 85       	ldd	r25, Y+8	; 0x08
     ae8:	89 0f       	add	r24, r25
     aea:	89 83       	std	Y+1, r24	; 0x01
     aec:	8e e0       	ldi	r24, 0x0E	; 14
     aee:	91 e0       	ldi	r25, 0x01	; 1
     af0:	61 e0       	ldi	r22, 0x01	; 1
     af2:	ae 01       	movw	r20, r28
     af4:	4c 5f       	subi	r20, 0xFC	; 252
     af6:	5f 4f       	sbci	r21, 0xFF	; 255
     af8:	33 dd       	rcall	.-1434   	; 0x560 <BatchBuffer_put>
     afa:	8e e0       	ldi	r24, 0x0E	; 14
     afc:	91 e0       	ldi	r25, 0x01	; 1
     afe:	61 e0       	ldi	r22, 0x01	; 1
     b00:	ae 01       	movw	r20, r28
     b02:	4e 5f       	subi	r20, 0xFE	; 254
     b04:	5f 4f       	sbci	r21, 0xFF	; 255
     b06:	2c dd       	rcall	.-1448   	; 0x560 <BatchBuffer_put>
     b08:	8e e0       	ldi	r24, 0x0E	; 14
     b0a:	91 e0       	ldi	r25, 0x01	; 1
     b0c:	61 e0       	ldi	r22, 0x01	; 1
     b0e:	ae 01       	movw	r20, r28
     b10:	4b 5f       	subi	r20, 0xFB	; 251
     b12:	5f 4f       	sbci	r21, 0xFF	; 255
     b14:	25 dd       	rcall	.-1462   	; 0x560 <BatchBuffer_put>
     b16:	8e e0       	ldi	r24, 0x0E	; 14
     b18:	91 e0       	ldi	r25, 0x01	; 1
     b1a:	61 e0       	ldi	r22, 0x01	; 1
     b1c:	ae 01       	movw	r20, r28
     b1e:	4a 5f       	subi	r20, 0xFA	; 250
     b20:	5f 4f       	sbci	r21, 0xFF	; 255
     b22:	1e dd       	rcall	.-1476   	; 0x560 <BatchBuffer_put>
     b24:	8e e0       	ldi	r24, 0x0E	; 14
     b26:	91 e0       	ldi	r25, 0x01	; 1
     b28:	61 e0       	ldi	r22, 0x01	; 1
     b2a:	ae 01       	movw	r20, r28
     b2c:	49 5f       	subi	r20, 0xF9	; 249
     b2e:	5f 4f       	sbci	r21, 0xFF	; 255
     b30:	17 dd       	rcall	.-1490   	; 0x560 <BatchBuffer_put>
     b32:	8e e0       	ldi	r24, 0x0E	; 14
     b34:	91 e0       	ldi	r25, 0x01	; 1
     b36:	61 e0       	ldi	r22, 0x01	; 1
     b38:	ae 01       	movw	r20, r28
     b3a:	48 5f       	subi	r20, 0xF8	; 248
     b3c:	5f 4f       	sbci	r21, 0xFF	; 255
     b3e:	10 dd       	rcall	.-1504   	; 0x560 <BatchBuffer_put>
     b40:	8e e0       	ldi	r24, 0x0E	; 14
     b42:	91 e0       	ldi	r25, 0x01	; 1
     b44:	61 e0       	ldi	r22, 0x01	; 1
     b46:	ae 01       	movw	r20, r28
     b48:	4f 5f       	subi	r20, 0xFF	; 255
     b4a:	5f 4f       	sbci	r21, 0xFF	; 255
     b4c:	09 dd       	rcall	.-1518   	; 0x560 <BatchBuffer_put>
     b4e:	8c 81       	ldd	r24, Y+4	; 0x04
     b50:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <__data_end>
     b54:	8a 81       	ldd	r24, Y+2	; 0x02
     b56:	80 93 61 01 	sts	0x0161, r24	; 0x800161 <__data_end+0x1>
     b5a:	80 ef       	ldi	r24, 0xF0	; 240
     b5c:	2d d5       	rcall	.+2650   	; 0x15b8 <UART1_putchar>
     b5e:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     b62:	80 64       	ori	r24, 0x40	; 64
     b64:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     b68:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     b6c:	86 fd       	sbrc	r24, 6
     b6e:	fc cf       	rjmp	.-8      	; 0xb68 <ASA_RS485_fpt+0xd2>
     b70:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     b74:	8f 7e       	andi	r24, 0xEF	; 239
     b76:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     b7a:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <StateMachObj>
     b7e:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     b82:	80 68       	ori	r24, 0x80	; 128
     b84:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     b88:	81 e0       	ldi	r24, 0x01	; 1
     b8a:	80 93 8b 01 	sts	0x018B, r24	; 0x80018b <StateMachObj+0x4>
     b8e:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <ReBuf+0x3>
     b92:	81 30       	cpi	r24, 0x01	; 1
     b94:	21 f0       	breq	.+8      	; 0xb9e <ASA_RS485_fpt+0x108>
     b96:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <StateMachObj+0x1>
     b9a:	82 30       	cpi	r24, 0x02	; 2
     b9c:	c1 f7       	brne	.-16     	; 0xb8e <ASA_RS485_fpt+0xf8>
     b9e:	10 92 8b 01 	sts	0x018B, r1	; 0x80018b <StateMachObj+0x4>
     ba2:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <ReBuf+0x3>
     ba6:	81 30       	cpi	r24, 0x01	; 1
     ba8:	11 f0       	breq	.+4      	; 0xbae <ASA_RS485_fpt+0x118>
     baa:	81 e0       	ldi	r24, 0x01	; 1
     bac:	0a c0       	rjmp	.+20     	; 0xbc2 <ASA_RS485_fpt+0x12c>
     bae:	82 e3       	ldi	r24, 0x32	; 50
     bb0:	91 e0       	ldi	r25, 0x01	; 1
     bb2:	61 e0       	ldi	r22, 0x01	; 1
     bb4:	ae 01       	movw	r20, r28
     bb6:	4d 5f       	subi	r20, 0xFD	; 253
     bb8:	5f 4f       	sbci	r21, 0xFF	; 255
     bba:	17 dd       	rcall	.-1490   	; 0x5ea <BatchBuffer_get>
     bbc:	8b 81       	ldd	r24, Y+3	; 0x03
     bbe:	88 0f       	add	r24, r24
     bc0:	88 0f       	add	r24, r24
     bc2:	28 96       	adiw	r28, 0x08	; 8
     bc4:	0f b6       	in	r0, 0x3f	; 63
     bc6:	f8 94       	cli
     bc8:	de bf       	out	0x3e, r29	; 62
     bca:	0f be       	out	0x3f, r0	; 63
     bcc:	cd bf       	out	0x3d, r28	; 61
     bce:	cf 91       	pop	r28
     bd0:	df 91       	pop	r29
     bd2:	0f 91       	pop	r16
     bd4:	ef 90       	pop	r14
     bd6:	08 95       	ret

00000bd8 <ASA_RS485_get>:
     bd8:	cf 92       	push	r12
     bda:	df 92       	push	r13
     bdc:	ef 92       	push	r14
     bde:	ff 92       	push	r15
     be0:	0f 93       	push	r16
     be2:	1f 93       	push	r17
     be4:	df 93       	push	r29
     be6:	cf 93       	push	r28
     be8:	cd b7       	in	r28, 0x3d	; 61
     bea:	de b7       	in	r29, 0x3e	; 62
     bec:	27 97       	sbiw	r28, 0x07	; 7
     bee:	0f b6       	in	r0, 0x3f	; 63
     bf0:	f8 94       	cli
     bf2:	de bf       	out	0x3e, r29	; 62
     bf4:	0f be       	out	0x3f, r0	; 63
     bf6:	cd bf       	out	0x3d, r28	; 61
     bf8:	6d 83       	std	Y+5, r22	; 0x05
     bfa:	4e 83       	std	Y+6, r20	; 0x06
     bfc:	2f 83       	std	Y+7, r18	; 0x07
     bfe:	68 01       	movw	r12, r16
     c00:	19 82       	std	Y+1, r1	; 0x01
     c02:	92 e0       	ldi	r25, 0x02	; 2
     c04:	9a 83       	std	Y+2, r25	; 0x02
     c06:	ca d4       	rcall	.+2452   	; 0x159c <ASA_ID_set>
     c08:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
     c0c:	80 61       	ori	r24, 0x10	; 16
     c0e:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
     c12:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     c16:	80 61       	ori	r24, 0x10	; 16
     c18:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     c1c:	8a 81       	ldd	r24, Y+2	; 0x02
     c1e:	99 81       	ldd	r25, Y+1	; 0x01
     c20:	89 0f       	add	r24, r25
     c22:	9e 81       	ldd	r25, Y+6	; 0x06
     c24:	89 0f       	add	r24, r25
     c26:	9f 81       	ldd	r25, Y+7	; 0x07
     c28:	89 0f       	add	r24, r25
     c2a:	89 83       	std	Y+1, r24	; 0x01
     c2c:	8e e0       	ldi	r24, 0x0E	; 14
     c2e:	91 e0       	ldi	r25, 0x01	; 1
     c30:	61 e0       	ldi	r22, 0x01	; 1
     c32:	ae 01       	movw	r20, r28
     c34:	4b 5f       	subi	r20, 0xFB	; 251
     c36:	5f 4f       	sbci	r21, 0xFF	; 255
     c38:	93 dc       	rcall	.-1754   	; 0x560 <BatchBuffer_put>
     c3a:	8e e0       	ldi	r24, 0x0E	; 14
     c3c:	91 e0       	ldi	r25, 0x01	; 1
     c3e:	61 e0       	ldi	r22, 0x01	; 1
     c40:	ae 01       	movw	r20, r28
     c42:	4e 5f       	subi	r20, 0xFE	; 254
     c44:	5f 4f       	sbci	r21, 0xFF	; 255
     c46:	8c dc       	rcall	.-1768   	; 0x560 <BatchBuffer_put>
     c48:	8e e0       	ldi	r24, 0x0E	; 14
     c4a:	91 e0       	ldi	r25, 0x01	; 1
     c4c:	61 e0       	ldi	r22, 0x01	; 1
     c4e:	ae 01       	movw	r20, r28
     c50:	4a 5f       	subi	r20, 0xFA	; 250
     c52:	5f 4f       	sbci	r21, 0xFF	; 255
     c54:	85 dc       	rcall	.-1782   	; 0x560 <BatchBuffer_put>
     c56:	8e e0       	ldi	r24, 0x0E	; 14
     c58:	91 e0       	ldi	r25, 0x01	; 1
     c5a:	61 e0       	ldi	r22, 0x01	; 1
     c5c:	ae 01       	movw	r20, r28
     c5e:	49 5f       	subi	r20, 0xF9	; 249
     c60:	5f 4f       	sbci	r21, 0xFF	; 255
     c62:	7e dc       	rcall	.-1796   	; 0x560 <BatchBuffer_put>
     c64:	8e e0       	ldi	r24, 0x0E	; 14
     c66:	91 e0       	ldi	r25, 0x01	; 1
     c68:	61 e0       	ldi	r22, 0x01	; 1
     c6a:	ae 01       	movw	r20, r28
     c6c:	4f 5f       	subi	r20, 0xFF	; 255
     c6e:	5f 4f       	sbci	r21, 0xFF	; 255
     c70:	77 dc       	rcall	.-1810   	; 0x560 <BatchBuffer_put>
     c72:	8d 81       	ldd	r24, Y+5	; 0x05
     c74:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <__data_end>
     c78:	8a 81       	ldd	r24, Y+2	; 0x02
     c7a:	80 93 61 01 	sts	0x0161, r24	; 0x800161 <__data_end+0x1>
     c7e:	8f 81       	ldd	r24, Y+7	; 0x07
     c80:	80 93 63 01 	sts	0x0163, r24	; 0x800163 <__data_end+0x3>
     c84:	80 ef       	ldi	r24, 0xF0	; 240
     c86:	98 d4       	rcall	.+2352   	; 0x15b8 <UART1_putchar>
     c88:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     c8c:	80 64       	ori	r24, 0x40	; 64
     c8e:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     c92:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     c96:	86 fd       	sbrc	r24, 6
     c98:	fc cf       	rjmp	.-8      	; 0xc92 <ASA_RS485_get+0xba>
     c9a:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     c9e:	8f 7e       	andi	r24, 0xEF	; 239
     ca0:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     ca4:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <StateMachObj>
     ca8:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     cac:	80 68       	ori	r24, 0x80	; 128
     cae:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     cb2:	81 e0       	ldi	r24, 0x01	; 1
     cb4:	80 93 8b 01 	sts	0x018B, r24	; 0x80018b <StateMachObj+0x4>
     cb8:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <ReBuf+0x3>
     cbc:	81 30       	cpi	r24, 0x01	; 1
     cbe:	21 f0       	breq	.+8      	; 0xcc8 <ASA_RS485_get+0xf0>
     cc0:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <StateMachObj+0x1>
     cc4:	82 30       	cpi	r24, 0x02	; 2
     cc6:	c1 f7       	brne	.-16     	; 0xcb8 <ASA_RS485_get+0xe0>
     cc8:	10 92 8b 01 	sts	0x018B, r1	; 0x80018b <StateMachObj+0x4>
     ccc:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <ReBuf+0x3>
     cd0:	81 30       	cpi	r24, 0x01	; 1
     cd2:	11 f0       	breq	.+4      	; 0xcd8 <ASA_RS485_get+0x100>
     cd4:	81 e0       	ldi	r24, 0x01	; 1
     cd6:	26 c0       	rjmp	.+76     	; 0xd24 <ASA_RS485_get+0x14c>
     cd8:	82 e3       	ldi	r24, 0x32	; 50
     cda:	91 e0       	ldi	r25, 0x01	; 1
     cdc:	61 e0       	ldi	r22, 0x01	; 1
     cde:	ae 01       	movw	r20, r28
     ce0:	4d 5f       	subi	r20, 0xFD	; 253
     ce2:	5f 4f       	sbci	r21, 0xFF	; 255
     ce4:	82 dc       	rcall	.-1788   	; 0x5ea <BatchBuffer_get>
     ce6:	8b 81       	ldd	r24, Y+3	; 0x03
     ce8:	88 23       	and	r24, r24
     cea:	c9 f4       	brne	.+50     	; 0xd1e <ASA_RS485_get+0x146>
     cec:	00 e0       	ldi	r16, 0x00	; 0
     cee:	10 e0       	ldi	r17, 0x00	; 0
     cf0:	84 e0       	ldi	r24, 0x04	; 4
     cf2:	e8 2e       	mov	r14, r24
     cf4:	f1 2c       	mov	r15, r1
     cf6:	ec 0e       	add	r14, r28
     cf8:	fd 1e       	adc	r15, r29
     cfa:	0c c0       	rjmp	.+24     	; 0xd14 <ASA_RS485_get+0x13c>
     cfc:	82 e3       	ldi	r24, 0x32	; 50
     cfe:	91 e0       	ldi	r25, 0x01	; 1
     d00:	61 e0       	ldi	r22, 0x01	; 1
     d02:	a7 01       	movw	r20, r14
     d04:	72 dc       	rcall	.-1820   	; 0x5ea <BatchBuffer_get>
     d06:	f6 01       	movw	r30, r12
     d08:	e0 0f       	add	r30, r16
     d0a:	f1 1f       	adc	r31, r17
     d0c:	8c 81       	ldd	r24, Y+4	; 0x04
     d0e:	80 83       	st	Z, r24
     d10:	0f 5f       	subi	r16, 0xFF	; 255
     d12:	1f 4f       	sbci	r17, 0xFF	; 255
     d14:	8f 81       	ldd	r24, Y+7	; 0x07
     d16:	90 e0       	ldi	r25, 0x00	; 0
     d18:	08 17       	cp	r16, r24
     d1a:	19 07       	cpc	r17, r25
     d1c:	7c f3       	brlt	.-34     	; 0xcfc <ASA_RS485_get+0x124>
     d1e:	8b 81       	ldd	r24, Y+3	; 0x03
     d20:	88 0f       	add	r24, r24
     d22:	88 0f       	add	r24, r24
     d24:	27 96       	adiw	r28, 0x07	; 7
     d26:	0f b6       	in	r0, 0x3f	; 63
     d28:	f8 94       	cli
     d2a:	de bf       	out	0x3e, r29	; 62
     d2c:	0f be       	out	0x3f, r0	; 63
     d2e:	cd bf       	out	0x3d, r28	; 61
     d30:	cf 91       	pop	r28
     d32:	df 91       	pop	r29
     d34:	1f 91       	pop	r17
     d36:	0f 91       	pop	r16
     d38:	ff 90       	pop	r15
     d3a:	ef 90       	pop	r14
     d3c:	df 90       	pop	r13
     d3e:	cf 90       	pop	r12
     d40:	08 95       	ret

00000d42 <ASA_RS485_put>:
     d42:	0f 93       	push	r16
     d44:	1f 93       	push	r17
     d46:	df 93       	push	r29
     d48:	cf 93       	push	r28
     d4a:	00 d0       	rcall	.+0      	; 0xd4c <ASA_RS485_put+0xa>
     d4c:	00 d0       	rcall	.+0      	; 0xd4e <ASA_RS485_put+0xc>
     d4e:	00 d0       	rcall	.+0      	; 0xd50 <ASA_RS485_put+0xe>
     d50:	cd b7       	in	r28, 0x3d	; 61
     d52:	de b7       	in	r29, 0x3e	; 62
     d54:	6c 83       	std	Y+4, r22	; 0x04
     d56:	4d 83       	std	Y+5, r20	; 0x05
     d58:	2e 83       	std	Y+6, r18	; 0x06
     d5a:	19 82       	std	Y+1, r1	; 0x01
     d5c:	91 e0       	ldi	r25, 0x01	; 1
     d5e:	9a 83       	std	Y+2, r25	; 0x02
     d60:	1d d4       	rcall	.+2106   	; 0x159c <ASA_ID_set>
     d62:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
     d66:	80 61       	ori	r24, 0x10	; 16
     d68:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
     d6c:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     d70:	80 61       	ori	r24, 0x10	; 16
     d72:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     d76:	8a 81       	ldd	r24, Y+2	; 0x02
     d78:	99 81       	ldd	r25, Y+1	; 0x01
     d7a:	89 0f       	add	r24, r25
     d7c:	9d 81       	ldd	r25, Y+5	; 0x05
     d7e:	89 0f       	add	r24, r25
     d80:	9e 81       	ldd	r25, Y+6	; 0x06
     d82:	89 0f       	add	r24, r25
     d84:	89 83       	std	Y+1, r24	; 0x01
     d86:	f8 01       	movw	r30, r16
     d88:	98 01       	movw	r18, r16
     d8a:	29 0f       	add	r18, r25
     d8c:	31 1d       	adc	r19, r1
     d8e:	04 c0       	rjmp	.+8      	; 0xd98 <ASA_RS485_put+0x56>
     d90:	89 81       	ldd	r24, Y+1	; 0x01
     d92:	91 91       	ld	r25, Z+
     d94:	89 0f       	add	r24, r25
     d96:	89 83       	std	Y+1, r24	; 0x01
     d98:	e2 17       	cp	r30, r18
     d9a:	f3 07       	cpc	r31, r19
     d9c:	c9 f7       	brne	.-14     	; 0xd90 <ASA_RS485_put+0x4e>
     d9e:	8e e0       	ldi	r24, 0x0E	; 14
     da0:	91 e0       	ldi	r25, 0x01	; 1
     da2:	61 e0       	ldi	r22, 0x01	; 1
     da4:	ae 01       	movw	r20, r28
     da6:	4c 5f       	subi	r20, 0xFC	; 252
     da8:	5f 4f       	sbci	r21, 0xFF	; 255
     daa:	da db       	rcall	.-2124   	; 0x560 <BatchBuffer_put>
     dac:	8e e0       	ldi	r24, 0x0E	; 14
     dae:	91 e0       	ldi	r25, 0x01	; 1
     db0:	61 e0       	ldi	r22, 0x01	; 1
     db2:	ae 01       	movw	r20, r28
     db4:	4e 5f       	subi	r20, 0xFE	; 254
     db6:	5f 4f       	sbci	r21, 0xFF	; 255
     db8:	d3 db       	rcall	.-2138   	; 0x560 <BatchBuffer_put>
     dba:	8e e0       	ldi	r24, 0x0E	; 14
     dbc:	91 e0       	ldi	r25, 0x01	; 1
     dbe:	61 e0       	ldi	r22, 0x01	; 1
     dc0:	ae 01       	movw	r20, r28
     dc2:	4b 5f       	subi	r20, 0xFB	; 251
     dc4:	5f 4f       	sbci	r21, 0xFF	; 255
     dc6:	cc db       	rcall	.-2152   	; 0x560 <BatchBuffer_put>
     dc8:	8e e0       	ldi	r24, 0x0E	; 14
     dca:	91 e0       	ldi	r25, 0x01	; 1
     dcc:	61 e0       	ldi	r22, 0x01	; 1
     dce:	ae 01       	movw	r20, r28
     dd0:	4a 5f       	subi	r20, 0xFA	; 250
     dd2:	5f 4f       	sbci	r21, 0xFF	; 255
     dd4:	c5 db       	rcall	.-2166   	; 0x560 <BatchBuffer_put>
     dd6:	8e e0       	ldi	r24, 0x0E	; 14
     dd8:	91 e0       	ldi	r25, 0x01	; 1
     dda:	6e 81       	ldd	r22, Y+6	; 0x06
     ddc:	a8 01       	movw	r20, r16
     dde:	c0 db       	rcall	.-2176   	; 0x560 <BatchBuffer_put>
     de0:	8e e0       	ldi	r24, 0x0E	; 14
     de2:	91 e0       	ldi	r25, 0x01	; 1
     de4:	61 e0       	ldi	r22, 0x01	; 1
     de6:	ae 01       	movw	r20, r28
     de8:	4f 5f       	subi	r20, 0xFF	; 255
     dea:	5f 4f       	sbci	r21, 0xFF	; 255
     dec:	b9 db       	rcall	.-2190   	; 0x560 <BatchBuffer_put>
     dee:	8c 81       	ldd	r24, Y+4	; 0x04
     df0:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <__data_end>
     df4:	8a 81       	ldd	r24, Y+2	; 0x02
     df6:	80 93 61 01 	sts	0x0161, r24	; 0x800161 <__data_end+0x1>
     dfa:	80 ef       	ldi	r24, 0xF0	; 240
     dfc:	dd d3       	rcall	.+1978   	; 0x15b8 <UART1_putchar>
     dfe:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     e02:	80 64       	ori	r24, 0x40	; 64
     e04:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     e08:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     e0c:	86 fd       	sbrc	r24, 6
     e0e:	fc cf       	rjmp	.-8      	; 0xe08 <ASA_RS485_put+0xc6>
     e10:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     e14:	8f 7e       	andi	r24, 0xEF	; 239
     e16:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     e1a:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <StateMachObj>
     e1e:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     e22:	80 68       	ori	r24, 0x80	; 128
     e24:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     e28:	81 e0       	ldi	r24, 0x01	; 1
     e2a:	80 93 8b 01 	sts	0x018B, r24	; 0x80018b <StateMachObj+0x4>
     e2e:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <ReBuf+0x3>
     e32:	81 30       	cpi	r24, 0x01	; 1
     e34:	21 f0       	breq	.+8      	; 0xe3e <ASA_RS485_put+0xfc>
     e36:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <StateMachObj+0x1>
     e3a:	82 30       	cpi	r24, 0x02	; 2
     e3c:	c1 f7       	brne	.-16     	; 0xe2e <ASA_RS485_put+0xec>
     e3e:	10 92 8b 01 	sts	0x018B, r1	; 0x80018b <StateMachObj+0x4>
     e42:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <ReBuf+0x3>
     e46:	81 30       	cpi	r24, 0x01	; 1
     e48:	11 f0       	breq	.+4      	; 0xe4e <ASA_RS485_put+0x10c>
     e4a:	81 e0       	ldi	r24, 0x01	; 1
     e4c:	0a c0       	rjmp	.+20     	; 0xe62 <ASA_RS485_put+0x120>
     e4e:	82 e3       	ldi	r24, 0x32	; 50
     e50:	91 e0       	ldi	r25, 0x01	; 1
     e52:	61 e0       	ldi	r22, 0x01	; 1
     e54:	ae 01       	movw	r20, r28
     e56:	4d 5f       	subi	r20, 0xFD	; 253
     e58:	5f 4f       	sbci	r21, 0xFF	; 255
     e5a:	c7 db       	rcall	.-2162   	; 0x5ea <BatchBuffer_get>
     e5c:	8b 81       	ldd	r24, Y+3	; 0x03
     e5e:	88 0f       	add	r24, r24
     e60:	88 0f       	add	r24, r24
     e62:	26 96       	adiw	r28, 0x06	; 6
     e64:	0f b6       	in	r0, 0x3f	; 63
     e66:	f8 94       	cli
     e68:	de bf       	out	0x3e, r29	; 62
     e6a:	0f be       	out	0x3f, r0	; 63
     e6c:	cd bf       	out	0x3d, r28	; 61
     e6e:	cf 91       	pop	r28
     e70:	df 91       	pop	r29
     e72:	1f 91       	pop	r17
     e74:	0f 91       	pop	r16
     e76:	08 95       	ret

00000e78 <ASA_RS485_set>:
     e78:	ef 92       	push	r14
     e7a:	0f 93       	push	r16
     e7c:	df 93       	push	r29
     e7e:	cf 93       	push	r28
     e80:	cd b7       	in	r28, 0x3d	; 61
     e82:	de b7       	in	r29, 0x3e	; 62
     e84:	28 97       	sbiw	r28, 0x08	; 8
     e86:	0f b6       	in	r0, 0x3f	; 63
     e88:	f8 94       	cli
     e8a:	de bf       	out	0x3e, r29	; 62
     e8c:	0f be       	out	0x3f, r0	; 63
     e8e:	cd bf       	out	0x3d, r28	; 61
     e90:	6c 83       	std	Y+4, r22	; 0x04
     e92:	4d 83       	std	Y+5, r20	; 0x05
     e94:	2e 83       	std	Y+6, r18	; 0x06
     e96:	0f 83       	std	Y+7, r16	; 0x07
     e98:	e8 86       	std	Y+8, r14	; 0x08
     e9a:	19 82       	std	Y+1, r1	; 0x01
     e9c:	1a 82       	std	Y+2, r1	; 0x02
     e9e:	7e d3       	rcall	.+1788   	; 0x159c <ASA_ID_set>
     ea0:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
     ea4:	80 61       	ori	r24, 0x10	; 16
     ea6:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
     eaa:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     eae:	80 61       	ori	r24, 0x10	; 16
     eb0:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     eb4:	8a 81       	ldd	r24, Y+2	; 0x02
     eb6:	99 81       	ldd	r25, Y+1	; 0x01
     eb8:	89 0f       	add	r24, r25
     eba:	9d 81       	ldd	r25, Y+5	; 0x05
     ebc:	89 0f       	add	r24, r25
     ebe:	9e 81       	ldd	r25, Y+6	; 0x06
     ec0:	89 0f       	add	r24, r25
     ec2:	9f 81       	ldd	r25, Y+7	; 0x07
     ec4:	89 0f       	add	r24, r25
     ec6:	98 85       	ldd	r25, Y+8	; 0x08
     ec8:	89 0f       	add	r24, r25
     eca:	89 83       	std	Y+1, r24	; 0x01
     ecc:	8e e0       	ldi	r24, 0x0E	; 14
     ece:	91 e0       	ldi	r25, 0x01	; 1
     ed0:	61 e0       	ldi	r22, 0x01	; 1
     ed2:	ae 01       	movw	r20, r28
     ed4:	4c 5f       	subi	r20, 0xFC	; 252
     ed6:	5f 4f       	sbci	r21, 0xFF	; 255
     ed8:	43 db       	rcall	.-2426   	; 0x560 <BatchBuffer_put>
     eda:	8e e0       	ldi	r24, 0x0E	; 14
     edc:	91 e0       	ldi	r25, 0x01	; 1
     ede:	61 e0       	ldi	r22, 0x01	; 1
     ee0:	ae 01       	movw	r20, r28
     ee2:	4e 5f       	subi	r20, 0xFE	; 254
     ee4:	5f 4f       	sbci	r21, 0xFF	; 255
     ee6:	3c db       	rcall	.-2440   	; 0x560 <BatchBuffer_put>
     ee8:	8e e0       	ldi	r24, 0x0E	; 14
     eea:	91 e0       	ldi	r25, 0x01	; 1
     eec:	61 e0       	ldi	r22, 0x01	; 1
     eee:	ae 01       	movw	r20, r28
     ef0:	4b 5f       	subi	r20, 0xFB	; 251
     ef2:	5f 4f       	sbci	r21, 0xFF	; 255
     ef4:	35 db       	rcall	.-2454   	; 0x560 <BatchBuffer_put>
     ef6:	8e e0       	ldi	r24, 0x0E	; 14
     ef8:	91 e0       	ldi	r25, 0x01	; 1
     efa:	61 e0       	ldi	r22, 0x01	; 1
     efc:	ae 01       	movw	r20, r28
     efe:	4a 5f       	subi	r20, 0xFA	; 250
     f00:	5f 4f       	sbci	r21, 0xFF	; 255
     f02:	2e db       	rcall	.-2468   	; 0x560 <BatchBuffer_put>
     f04:	8e e0       	ldi	r24, 0x0E	; 14
     f06:	91 e0       	ldi	r25, 0x01	; 1
     f08:	61 e0       	ldi	r22, 0x01	; 1
     f0a:	ae 01       	movw	r20, r28
     f0c:	49 5f       	subi	r20, 0xF9	; 249
     f0e:	5f 4f       	sbci	r21, 0xFF	; 255
     f10:	27 db       	rcall	.-2482   	; 0x560 <BatchBuffer_put>
     f12:	8e e0       	ldi	r24, 0x0E	; 14
     f14:	91 e0       	ldi	r25, 0x01	; 1
     f16:	61 e0       	ldi	r22, 0x01	; 1
     f18:	ae 01       	movw	r20, r28
     f1a:	48 5f       	subi	r20, 0xF8	; 248
     f1c:	5f 4f       	sbci	r21, 0xFF	; 255
     f1e:	20 db       	rcall	.-2496   	; 0x560 <BatchBuffer_put>
     f20:	8e e0       	ldi	r24, 0x0E	; 14
     f22:	91 e0       	ldi	r25, 0x01	; 1
     f24:	61 e0       	ldi	r22, 0x01	; 1
     f26:	ae 01       	movw	r20, r28
     f28:	4f 5f       	subi	r20, 0xFF	; 255
     f2a:	5f 4f       	sbci	r21, 0xFF	; 255
     f2c:	19 db       	rcall	.-2510   	; 0x560 <BatchBuffer_put>
     f2e:	8c 81       	ldd	r24, Y+4	; 0x04
     f30:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <__data_end>
     f34:	8a 81       	ldd	r24, Y+2	; 0x02
     f36:	80 93 61 01 	sts	0x0161, r24	; 0x800161 <__data_end+0x1>
     f3a:	80 ef       	ldi	r24, 0xF0	; 240
     f3c:	3d d3       	rcall	.+1658   	; 0x15b8 <UART1_putchar>
     f3e:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     f42:	80 64       	ori	r24, 0x40	; 64
     f44:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     f48:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     f4c:	86 fd       	sbrc	r24, 6
     f4e:	fc cf       	rjmp	.-8      	; 0xf48 <ASA_RS485_set+0xd0>
     f50:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     f54:	8f 7e       	andi	r24, 0xEF	; 239
     f56:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     f5a:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <StateMachObj>
     f5e:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     f62:	80 68       	ori	r24, 0x80	; 128
     f64:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     f68:	81 e0       	ldi	r24, 0x01	; 1
     f6a:	80 93 8b 01 	sts	0x018B, r24	; 0x80018b <StateMachObj+0x4>
     f6e:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <ReBuf+0x3>
     f72:	81 30       	cpi	r24, 0x01	; 1
     f74:	21 f0       	breq	.+8      	; 0xf7e <ASA_RS485_set+0x106>
     f76:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <StateMachObj+0x1>
     f7a:	82 30       	cpi	r24, 0x02	; 2
     f7c:	c1 f7       	brne	.-16     	; 0xf6e <ASA_RS485_set+0xf6>
     f7e:	10 92 8b 01 	sts	0x018B, r1	; 0x80018b <StateMachObj+0x4>
     f82:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <ReBuf+0x3>
     f86:	81 30       	cpi	r24, 0x01	; 1
     f88:	11 f0       	breq	.+4      	; 0xf8e <ASA_RS485_set+0x116>
     f8a:	81 e0       	ldi	r24, 0x01	; 1
     f8c:	0a c0       	rjmp	.+20     	; 0xfa2 <ASA_RS485_set+0x12a>
     f8e:	82 e3       	ldi	r24, 0x32	; 50
     f90:	91 e0       	ldi	r25, 0x01	; 1
     f92:	61 e0       	ldi	r22, 0x01	; 1
     f94:	ae 01       	movw	r20, r28
     f96:	4d 5f       	subi	r20, 0xFD	; 253
     f98:	5f 4f       	sbci	r21, 0xFF	; 255
     f9a:	27 db       	rcall	.-2482   	; 0x5ea <BatchBuffer_get>
     f9c:	8b 81       	ldd	r24, Y+3	; 0x03
     f9e:	88 0f       	add	r24, r24
     fa0:	88 0f       	add	r24, r24
     fa2:	28 96       	adiw	r28, 0x08	; 8
     fa4:	0f b6       	in	r0, 0x3f	; 63
     fa6:	f8 94       	cli
     fa8:	de bf       	out	0x3e, r29	; 62
     faa:	0f be       	out	0x3f, r0	; 63
     fac:	cd bf       	out	0x3d, r28	; 61
     fae:	cf 91       	pop	r28
     fb0:	df 91       	pop	r29
     fb2:	0f 91       	pop	r16
     fb4:	ef 90       	pop	r14
     fb6:	08 95       	ret

00000fb8 <ASA_UART_fgt>:
     fb8:	ef 92       	push	r14
     fba:	ff 92       	push	r15
     fbc:	0f 93       	push	r16
     fbe:	df 93       	push	r29
     fc0:	cf 93       	push	r28
     fc2:	cd b7       	in	r28, 0x3d	; 61
     fc4:	de b7       	in	r29, 0x3e	; 62
     fc6:	28 97       	sbiw	r28, 0x08	; 8
     fc8:	0f b6       	in	r0, 0x3f	; 63
     fca:	f8 94       	cli
     fcc:	de bf       	out	0x3e, r29	; 62
     fce:	0f be       	out	0x3f, r0	; 63
     fd0:	cd bf       	out	0x3d, r28	; 61
     fd2:	6d 83       	std	Y+5, r22	; 0x05
     fd4:	4e 83       	std	Y+6, r20	; 0x06
     fd6:	2f 83       	std	Y+7, r18	; 0x07
     fd8:	08 87       	std	Y+8, r16	; 0x08
     fda:	19 82       	std	Y+1, r1	; 0x01
     fdc:	94 e0       	ldi	r25, 0x04	; 4
     fde:	9a 83       	std	Y+2, r25	; 0x02
     fe0:	dd d2       	rcall	.+1466   	; 0x159c <ASA_ID_set>
     fe2:	8a 81       	ldd	r24, Y+2	; 0x02
     fe4:	99 81       	ldd	r25, Y+1	; 0x01
     fe6:	89 0f       	add	r24, r25
     fe8:	9e 81       	ldd	r25, Y+6	; 0x06
     fea:	89 0f       	add	r24, r25
     fec:	9f 81       	ldd	r25, Y+7	; 0x07
     fee:	89 0f       	add	r24, r25
     ff0:	98 85       	ldd	r25, Y+8	; 0x08
     ff2:	89 0f       	add	r24, r25
     ff4:	89 83       	std	Y+1, r24	; 0x01
     ff6:	8e e0       	ldi	r24, 0x0E	; 14
     ff8:	91 e0       	ldi	r25, 0x01	; 1
     ffa:	61 e0       	ldi	r22, 0x01	; 1
     ffc:	ae 01       	movw	r20, r28
     ffe:	4b 5f       	subi	r20, 0xFB	; 251
    1000:	5f 4f       	sbci	r21, 0xFF	; 255
    1002:	ae da       	rcall	.-2724   	; 0x560 <BatchBuffer_put>
    1004:	8e e0       	ldi	r24, 0x0E	; 14
    1006:	91 e0       	ldi	r25, 0x01	; 1
    1008:	61 e0       	ldi	r22, 0x01	; 1
    100a:	ae 01       	movw	r20, r28
    100c:	4e 5f       	subi	r20, 0xFE	; 254
    100e:	5f 4f       	sbci	r21, 0xFF	; 255
    1010:	a7 da       	rcall	.-2738   	; 0x560 <BatchBuffer_put>
    1012:	8e e0       	ldi	r24, 0x0E	; 14
    1014:	91 e0       	ldi	r25, 0x01	; 1
    1016:	61 e0       	ldi	r22, 0x01	; 1
    1018:	ae 01       	movw	r20, r28
    101a:	4a 5f       	subi	r20, 0xFA	; 250
    101c:	5f 4f       	sbci	r21, 0xFF	; 255
    101e:	a0 da       	rcall	.-2752   	; 0x560 <BatchBuffer_put>
    1020:	8e e0       	ldi	r24, 0x0E	; 14
    1022:	91 e0       	ldi	r25, 0x01	; 1
    1024:	61 e0       	ldi	r22, 0x01	; 1
    1026:	ae 01       	movw	r20, r28
    1028:	49 5f       	subi	r20, 0xF9	; 249
    102a:	5f 4f       	sbci	r21, 0xFF	; 255
    102c:	99 da       	rcall	.-2766   	; 0x560 <BatchBuffer_put>
    102e:	8e e0       	ldi	r24, 0x0E	; 14
    1030:	91 e0       	ldi	r25, 0x01	; 1
    1032:	61 e0       	ldi	r22, 0x01	; 1
    1034:	ae 01       	movw	r20, r28
    1036:	48 5f       	subi	r20, 0xF8	; 248
    1038:	5f 4f       	sbci	r21, 0xFF	; 255
    103a:	92 da       	rcall	.-2780   	; 0x560 <BatchBuffer_put>
    103c:	8e e0       	ldi	r24, 0x0E	; 14
    103e:	91 e0       	ldi	r25, 0x01	; 1
    1040:	61 e0       	ldi	r22, 0x01	; 1
    1042:	ae 01       	movw	r20, r28
    1044:	4f 5f       	subi	r20, 0xFF	; 255
    1046:	5f 4f       	sbci	r21, 0xFF	; 255
    1048:	8b da       	rcall	.-2794   	; 0x560 <BatchBuffer_put>
    104a:	8d 81       	ldd	r24, Y+5	; 0x05
    104c:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <__data_end>
    1050:	8a 81       	ldd	r24, Y+2	; 0x02
    1052:	80 93 61 01 	sts	0x0161, r24	; 0x800161 <__data_end+0x1>
    1056:	80 ef       	ldi	r24, 0xF0	; 240
    1058:	af d2       	rcall	.+1374   	; 0x15b8 <UART1_putchar>
    105a:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    105e:	80 64       	ori	r24, 0x40	; 64
    1060:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1064:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1068:	86 fd       	sbrc	r24, 6
    106a:	fc cf       	rjmp	.-8      	; 0x1064 <ASA_UART_fgt+0xac>
    106c:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <StateMachObj>
    1070:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1074:	80 68       	ori	r24, 0x80	; 128
    1076:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    107a:	81 e0       	ldi	r24, 0x01	; 1
    107c:	80 93 8b 01 	sts	0x018B, r24	; 0x80018b <StateMachObj+0x4>
    1080:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <ReBuf+0x3>
    1084:	81 30       	cpi	r24, 0x01	; 1
    1086:	21 f0       	breq	.+8      	; 0x1090 <ASA_UART_fgt+0xd8>
    1088:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <StateMachObj+0x1>
    108c:	82 30       	cpi	r24, 0x02	; 2
    108e:	c1 f7       	brne	.-16     	; 0x1080 <ASA_UART_fgt+0xc8>
    1090:	10 92 8b 01 	sts	0x018B, r1	; 0x80018b <StateMachObj+0x4>
    1094:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <ReBuf+0x3>
    1098:	81 30       	cpi	r24, 0x01	; 1
    109a:	11 f0       	breq	.+4      	; 0x10a0 <ASA_UART_fgt+0xe8>
    109c:	81 e0       	ldi	r24, 0x01	; 1
    109e:	17 c0       	rjmp	.+46     	; 0x10ce <ASA_UART_fgt+0x116>
    10a0:	82 e3       	ldi	r24, 0x32	; 50
    10a2:	91 e0       	ldi	r25, 0x01	; 1
    10a4:	61 e0       	ldi	r22, 0x01	; 1
    10a6:	ae 01       	movw	r20, r28
    10a8:	4d 5f       	subi	r20, 0xFD	; 253
    10aa:	5f 4f       	sbci	r21, 0xFF	; 255
    10ac:	9e da       	rcall	.-2756   	; 0x5ea <BatchBuffer_get>
    10ae:	8b 81       	ldd	r24, Y+3	; 0x03
    10b0:	88 23       	and	r24, r24
    10b2:	51 f4       	brne	.+20     	; 0x10c8 <ASA_UART_fgt+0x110>
    10b4:	82 e3       	ldi	r24, 0x32	; 50
    10b6:	91 e0       	ldi	r25, 0x01	; 1
    10b8:	61 e0       	ldi	r22, 0x01	; 1
    10ba:	ae 01       	movw	r20, r28
    10bc:	4c 5f       	subi	r20, 0xFC	; 252
    10be:	5f 4f       	sbci	r21, 0xFF	; 255
    10c0:	94 da       	rcall	.-2776   	; 0x5ea <BatchBuffer_get>
    10c2:	8c 81       	ldd	r24, Y+4	; 0x04
    10c4:	f7 01       	movw	r30, r14
    10c6:	80 83       	st	Z, r24
    10c8:	8b 81       	ldd	r24, Y+3	; 0x03
    10ca:	88 0f       	add	r24, r24
    10cc:	88 0f       	add	r24, r24
    10ce:	28 96       	adiw	r28, 0x08	; 8
    10d0:	0f b6       	in	r0, 0x3f	; 63
    10d2:	f8 94       	cli
    10d4:	de bf       	out	0x3e, r29	; 62
    10d6:	0f be       	out	0x3f, r0	; 63
    10d8:	cd bf       	out	0x3d, r28	; 61
    10da:	cf 91       	pop	r28
    10dc:	df 91       	pop	r29
    10de:	0f 91       	pop	r16
    10e0:	ff 90       	pop	r15
    10e2:	ef 90       	pop	r14
    10e4:	08 95       	ret

000010e6 <ASA_UART_fpt>:
    10e6:	ef 92       	push	r14
    10e8:	0f 93       	push	r16
    10ea:	df 93       	push	r29
    10ec:	cf 93       	push	r28
    10ee:	cd b7       	in	r28, 0x3d	; 61
    10f0:	de b7       	in	r29, 0x3e	; 62
    10f2:	28 97       	sbiw	r28, 0x08	; 8
    10f4:	0f b6       	in	r0, 0x3f	; 63
    10f6:	f8 94       	cli
    10f8:	de bf       	out	0x3e, r29	; 62
    10fa:	0f be       	out	0x3f, r0	; 63
    10fc:	cd bf       	out	0x3d, r28	; 61
    10fe:	6c 83       	std	Y+4, r22	; 0x04
    1100:	4d 83       	std	Y+5, r20	; 0x05
    1102:	2e 83       	std	Y+6, r18	; 0x06
    1104:	0f 83       	std	Y+7, r16	; 0x07
    1106:	e8 86       	std	Y+8, r14	; 0x08
    1108:	19 82       	std	Y+1, r1	; 0x01
    110a:	93 e0       	ldi	r25, 0x03	; 3
    110c:	9a 83       	std	Y+2, r25	; 0x02
    110e:	46 d2       	rcall	.+1164   	; 0x159c <ASA_ID_set>
    1110:	8a 81       	ldd	r24, Y+2	; 0x02
    1112:	99 81       	ldd	r25, Y+1	; 0x01
    1114:	89 0f       	add	r24, r25
    1116:	9d 81       	ldd	r25, Y+5	; 0x05
    1118:	89 0f       	add	r24, r25
    111a:	9e 81       	ldd	r25, Y+6	; 0x06
    111c:	89 0f       	add	r24, r25
    111e:	9f 81       	ldd	r25, Y+7	; 0x07
    1120:	89 0f       	add	r24, r25
    1122:	98 85       	ldd	r25, Y+8	; 0x08
    1124:	89 0f       	add	r24, r25
    1126:	89 83       	std	Y+1, r24	; 0x01
    1128:	8e e0       	ldi	r24, 0x0E	; 14
    112a:	91 e0       	ldi	r25, 0x01	; 1
    112c:	61 e0       	ldi	r22, 0x01	; 1
    112e:	ae 01       	movw	r20, r28
    1130:	4c 5f       	subi	r20, 0xFC	; 252
    1132:	5f 4f       	sbci	r21, 0xFF	; 255
    1134:	15 da       	rcall	.-3030   	; 0x560 <BatchBuffer_put>
    1136:	8e e0       	ldi	r24, 0x0E	; 14
    1138:	91 e0       	ldi	r25, 0x01	; 1
    113a:	61 e0       	ldi	r22, 0x01	; 1
    113c:	ae 01       	movw	r20, r28
    113e:	4e 5f       	subi	r20, 0xFE	; 254
    1140:	5f 4f       	sbci	r21, 0xFF	; 255
    1142:	0e da       	rcall	.-3044   	; 0x560 <BatchBuffer_put>
    1144:	8e e0       	ldi	r24, 0x0E	; 14
    1146:	91 e0       	ldi	r25, 0x01	; 1
    1148:	61 e0       	ldi	r22, 0x01	; 1
    114a:	ae 01       	movw	r20, r28
    114c:	4b 5f       	subi	r20, 0xFB	; 251
    114e:	5f 4f       	sbci	r21, 0xFF	; 255
    1150:	07 da       	rcall	.-3058   	; 0x560 <BatchBuffer_put>
    1152:	8e e0       	ldi	r24, 0x0E	; 14
    1154:	91 e0       	ldi	r25, 0x01	; 1
    1156:	61 e0       	ldi	r22, 0x01	; 1
    1158:	ae 01       	movw	r20, r28
    115a:	4a 5f       	subi	r20, 0xFA	; 250
    115c:	5f 4f       	sbci	r21, 0xFF	; 255
    115e:	00 da       	rcall	.-3072   	; 0x560 <BatchBuffer_put>
    1160:	8e e0       	ldi	r24, 0x0E	; 14
    1162:	91 e0       	ldi	r25, 0x01	; 1
    1164:	61 e0       	ldi	r22, 0x01	; 1
    1166:	ae 01       	movw	r20, r28
    1168:	49 5f       	subi	r20, 0xF9	; 249
    116a:	5f 4f       	sbci	r21, 0xFF	; 255
    116c:	f9 d9       	rcall	.-3086   	; 0x560 <BatchBuffer_put>
    116e:	8e e0       	ldi	r24, 0x0E	; 14
    1170:	91 e0       	ldi	r25, 0x01	; 1
    1172:	61 e0       	ldi	r22, 0x01	; 1
    1174:	ae 01       	movw	r20, r28
    1176:	48 5f       	subi	r20, 0xF8	; 248
    1178:	5f 4f       	sbci	r21, 0xFF	; 255
    117a:	f2 d9       	rcall	.-3100   	; 0x560 <BatchBuffer_put>
    117c:	8e e0       	ldi	r24, 0x0E	; 14
    117e:	91 e0       	ldi	r25, 0x01	; 1
    1180:	61 e0       	ldi	r22, 0x01	; 1
    1182:	ae 01       	movw	r20, r28
    1184:	4f 5f       	subi	r20, 0xFF	; 255
    1186:	5f 4f       	sbci	r21, 0xFF	; 255
    1188:	eb d9       	rcall	.-3114   	; 0x560 <BatchBuffer_put>
    118a:	8c 81       	ldd	r24, Y+4	; 0x04
    118c:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <__data_end>
    1190:	8a 81       	ldd	r24, Y+2	; 0x02
    1192:	80 93 61 01 	sts	0x0161, r24	; 0x800161 <__data_end+0x1>
    1196:	80 ef       	ldi	r24, 0xF0	; 240
    1198:	0f d2       	rcall	.+1054   	; 0x15b8 <UART1_putchar>
    119a:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    119e:	80 64       	ori	r24, 0x40	; 64
    11a0:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    11a4:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    11a8:	86 fd       	sbrc	r24, 6
    11aa:	fc cf       	rjmp	.-8      	; 0x11a4 <__stack+0xa5>
    11ac:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <StateMachObj>
    11b0:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    11b4:	80 68       	ori	r24, 0x80	; 128
    11b6:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    11ba:	81 e0       	ldi	r24, 0x01	; 1
    11bc:	80 93 8b 01 	sts	0x018B, r24	; 0x80018b <StateMachObj+0x4>
    11c0:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <ReBuf+0x3>
    11c4:	81 30       	cpi	r24, 0x01	; 1
    11c6:	21 f0       	breq	.+8      	; 0x11d0 <__stack+0xd1>
    11c8:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <StateMachObj+0x1>
    11cc:	82 30       	cpi	r24, 0x02	; 2
    11ce:	c1 f7       	brne	.-16     	; 0x11c0 <__stack+0xc1>
    11d0:	10 92 8b 01 	sts	0x018B, r1	; 0x80018b <StateMachObj+0x4>
    11d4:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <ReBuf+0x3>
    11d8:	81 30       	cpi	r24, 0x01	; 1
    11da:	11 f0       	breq	.+4      	; 0x11e0 <__stack+0xe1>
    11dc:	81 e0       	ldi	r24, 0x01	; 1
    11de:	0a c0       	rjmp	.+20     	; 0x11f4 <__stack+0xf5>
    11e0:	82 e3       	ldi	r24, 0x32	; 50
    11e2:	91 e0       	ldi	r25, 0x01	; 1
    11e4:	61 e0       	ldi	r22, 0x01	; 1
    11e6:	ae 01       	movw	r20, r28
    11e8:	4d 5f       	subi	r20, 0xFD	; 253
    11ea:	5f 4f       	sbci	r21, 0xFF	; 255
    11ec:	fe d9       	rcall	.-3076   	; 0x5ea <BatchBuffer_get>
    11ee:	8b 81       	ldd	r24, Y+3	; 0x03
    11f0:	88 0f       	add	r24, r24
    11f2:	88 0f       	add	r24, r24
    11f4:	28 96       	adiw	r28, 0x08	; 8
    11f6:	0f b6       	in	r0, 0x3f	; 63
    11f8:	f8 94       	cli
    11fa:	de bf       	out	0x3e, r29	; 62
    11fc:	0f be       	out	0x3f, r0	; 63
    11fe:	cd bf       	out	0x3d, r28	; 61
    1200:	cf 91       	pop	r28
    1202:	df 91       	pop	r29
    1204:	0f 91       	pop	r16
    1206:	ef 90       	pop	r14
    1208:	08 95       	ret

0000120a <ASA_UART_get>:
    120a:	cf 92       	push	r12
    120c:	df 92       	push	r13
    120e:	ef 92       	push	r14
    1210:	ff 92       	push	r15
    1212:	0f 93       	push	r16
    1214:	1f 93       	push	r17
    1216:	df 93       	push	r29
    1218:	cf 93       	push	r28
    121a:	cd b7       	in	r28, 0x3d	; 61
    121c:	de b7       	in	r29, 0x3e	; 62
    121e:	27 97       	sbiw	r28, 0x07	; 7
    1220:	0f b6       	in	r0, 0x3f	; 63
    1222:	f8 94       	cli
    1224:	de bf       	out	0x3e, r29	; 62
    1226:	0f be       	out	0x3f, r0	; 63
    1228:	cd bf       	out	0x3d, r28	; 61
    122a:	6d 83       	std	Y+5, r22	; 0x05
    122c:	4e 83       	std	Y+6, r20	; 0x06
    122e:	2f 83       	std	Y+7, r18	; 0x07
    1230:	68 01       	movw	r12, r16
    1232:	19 82       	std	Y+1, r1	; 0x01
    1234:	92 e0       	ldi	r25, 0x02	; 2
    1236:	9a 83       	std	Y+2, r25	; 0x02
    1238:	b1 d1       	rcall	.+866    	; 0x159c <ASA_ID_set>
    123a:	8a 81       	ldd	r24, Y+2	; 0x02
    123c:	99 81       	ldd	r25, Y+1	; 0x01
    123e:	89 0f       	add	r24, r25
    1240:	9e 81       	ldd	r25, Y+6	; 0x06
    1242:	89 0f       	add	r24, r25
    1244:	9f 81       	ldd	r25, Y+7	; 0x07
    1246:	89 0f       	add	r24, r25
    1248:	89 83       	std	Y+1, r24	; 0x01
    124a:	8e e0       	ldi	r24, 0x0E	; 14
    124c:	91 e0       	ldi	r25, 0x01	; 1
    124e:	61 e0       	ldi	r22, 0x01	; 1
    1250:	ae 01       	movw	r20, r28
    1252:	4b 5f       	subi	r20, 0xFB	; 251
    1254:	5f 4f       	sbci	r21, 0xFF	; 255
    1256:	84 d9       	rcall	.-3320   	; 0x560 <BatchBuffer_put>
    1258:	8e e0       	ldi	r24, 0x0E	; 14
    125a:	91 e0       	ldi	r25, 0x01	; 1
    125c:	61 e0       	ldi	r22, 0x01	; 1
    125e:	ae 01       	movw	r20, r28
    1260:	4e 5f       	subi	r20, 0xFE	; 254
    1262:	5f 4f       	sbci	r21, 0xFF	; 255
    1264:	7d d9       	rcall	.-3334   	; 0x560 <BatchBuffer_put>
    1266:	8e e0       	ldi	r24, 0x0E	; 14
    1268:	91 e0       	ldi	r25, 0x01	; 1
    126a:	61 e0       	ldi	r22, 0x01	; 1
    126c:	ae 01       	movw	r20, r28
    126e:	4a 5f       	subi	r20, 0xFA	; 250
    1270:	5f 4f       	sbci	r21, 0xFF	; 255
    1272:	76 d9       	rcall	.-3348   	; 0x560 <BatchBuffer_put>
    1274:	8e e0       	ldi	r24, 0x0E	; 14
    1276:	91 e0       	ldi	r25, 0x01	; 1
    1278:	61 e0       	ldi	r22, 0x01	; 1
    127a:	ae 01       	movw	r20, r28
    127c:	49 5f       	subi	r20, 0xF9	; 249
    127e:	5f 4f       	sbci	r21, 0xFF	; 255
    1280:	6f d9       	rcall	.-3362   	; 0x560 <BatchBuffer_put>
    1282:	8e e0       	ldi	r24, 0x0E	; 14
    1284:	91 e0       	ldi	r25, 0x01	; 1
    1286:	61 e0       	ldi	r22, 0x01	; 1
    1288:	ae 01       	movw	r20, r28
    128a:	4f 5f       	subi	r20, 0xFF	; 255
    128c:	5f 4f       	sbci	r21, 0xFF	; 255
    128e:	68 d9       	rcall	.-3376   	; 0x560 <BatchBuffer_put>
    1290:	8d 81       	ldd	r24, Y+5	; 0x05
    1292:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <__data_end>
    1296:	8a 81       	ldd	r24, Y+2	; 0x02
    1298:	80 93 61 01 	sts	0x0161, r24	; 0x800161 <__data_end+0x1>
    129c:	8f 81       	ldd	r24, Y+7	; 0x07
    129e:	80 93 63 01 	sts	0x0163, r24	; 0x800163 <__data_end+0x3>
    12a2:	80 ef       	ldi	r24, 0xF0	; 240
    12a4:	89 d1       	rcall	.+786    	; 0x15b8 <UART1_putchar>
    12a6:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    12aa:	80 64       	ori	r24, 0x40	; 64
    12ac:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    12b0:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    12b4:	86 fd       	sbrc	r24, 6
    12b6:	fc cf       	rjmp	.-8      	; 0x12b0 <ASA_UART_get+0xa6>
    12b8:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <StateMachObj>
    12bc:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    12c0:	80 68       	ori	r24, 0x80	; 128
    12c2:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    12c6:	81 e0       	ldi	r24, 0x01	; 1
    12c8:	80 93 8b 01 	sts	0x018B, r24	; 0x80018b <StateMachObj+0x4>
    12cc:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <ReBuf+0x3>
    12d0:	81 30       	cpi	r24, 0x01	; 1
    12d2:	21 f0       	breq	.+8      	; 0x12dc <ASA_UART_get+0xd2>
    12d4:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <StateMachObj+0x1>
    12d8:	82 30       	cpi	r24, 0x02	; 2
    12da:	c1 f7       	brne	.-16     	; 0x12cc <ASA_UART_get+0xc2>
    12dc:	10 92 8b 01 	sts	0x018B, r1	; 0x80018b <StateMachObj+0x4>
    12e0:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <ReBuf+0x3>
    12e4:	81 30       	cpi	r24, 0x01	; 1
    12e6:	11 f0       	breq	.+4      	; 0x12ec <ASA_UART_get+0xe2>
    12e8:	81 e0       	ldi	r24, 0x01	; 1
    12ea:	26 c0       	rjmp	.+76     	; 0x1338 <ASA_UART_get+0x12e>
    12ec:	82 e3       	ldi	r24, 0x32	; 50
    12ee:	91 e0       	ldi	r25, 0x01	; 1
    12f0:	61 e0       	ldi	r22, 0x01	; 1
    12f2:	ae 01       	movw	r20, r28
    12f4:	4d 5f       	subi	r20, 0xFD	; 253
    12f6:	5f 4f       	sbci	r21, 0xFF	; 255
    12f8:	78 d9       	rcall	.-3344   	; 0x5ea <BatchBuffer_get>
    12fa:	8b 81       	ldd	r24, Y+3	; 0x03
    12fc:	88 23       	and	r24, r24
    12fe:	c9 f4       	brne	.+50     	; 0x1332 <ASA_UART_get+0x128>
    1300:	00 e0       	ldi	r16, 0x00	; 0
    1302:	10 e0       	ldi	r17, 0x00	; 0
    1304:	94 e0       	ldi	r25, 0x04	; 4
    1306:	e9 2e       	mov	r14, r25
    1308:	f1 2c       	mov	r15, r1
    130a:	ec 0e       	add	r14, r28
    130c:	fd 1e       	adc	r15, r29
    130e:	0c c0       	rjmp	.+24     	; 0x1328 <ASA_UART_get+0x11e>
    1310:	82 e3       	ldi	r24, 0x32	; 50
    1312:	91 e0       	ldi	r25, 0x01	; 1
    1314:	61 e0       	ldi	r22, 0x01	; 1
    1316:	a7 01       	movw	r20, r14
    1318:	68 d9       	rcall	.-3376   	; 0x5ea <BatchBuffer_get>
    131a:	f6 01       	movw	r30, r12
    131c:	e0 0f       	add	r30, r16
    131e:	f1 1f       	adc	r31, r17
    1320:	8c 81       	ldd	r24, Y+4	; 0x04
    1322:	80 83       	st	Z, r24
    1324:	0f 5f       	subi	r16, 0xFF	; 255
    1326:	1f 4f       	sbci	r17, 0xFF	; 255
    1328:	8f 81       	ldd	r24, Y+7	; 0x07
    132a:	90 e0       	ldi	r25, 0x00	; 0
    132c:	08 17       	cp	r16, r24
    132e:	19 07       	cpc	r17, r25
    1330:	7c f3       	brlt	.-34     	; 0x1310 <ASA_UART_get+0x106>
    1332:	8b 81       	ldd	r24, Y+3	; 0x03
    1334:	88 0f       	add	r24, r24
    1336:	88 0f       	add	r24, r24
    1338:	27 96       	adiw	r28, 0x07	; 7
    133a:	0f b6       	in	r0, 0x3f	; 63
    133c:	f8 94       	cli
    133e:	de bf       	out	0x3e, r29	; 62
    1340:	0f be       	out	0x3f, r0	; 63
    1342:	cd bf       	out	0x3d, r28	; 61
    1344:	cf 91       	pop	r28
    1346:	df 91       	pop	r29
    1348:	1f 91       	pop	r17
    134a:	0f 91       	pop	r16
    134c:	ff 90       	pop	r15
    134e:	ef 90       	pop	r14
    1350:	df 90       	pop	r13
    1352:	cf 90       	pop	r12
    1354:	08 95       	ret

00001356 <ASA_UART_put>:
    1356:	0f 93       	push	r16
    1358:	1f 93       	push	r17
    135a:	df 93       	push	r29
    135c:	cf 93       	push	r28
    135e:	00 d0       	rcall	.+0      	; 0x1360 <ASA_UART_put+0xa>
    1360:	00 d0       	rcall	.+0      	; 0x1362 <ASA_UART_put+0xc>
    1362:	00 d0       	rcall	.+0      	; 0x1364 <ASA_UART_put+0xe>
    1364:	cd b7       	in	r28, 0x3d	; 61
    1366:	de b7       	in	r29, 0x3e	; 62
    1368:	6c 83       	std	Y+4, r22	; 0x04
    136a:	4d 83       	std	Y+5, r20	; 0x05
    136c:	2e 83       	std	Y+6, r18	; 0x06
    136e:	19 82       	std	Y+1, r1	; 0x01
    1370:	91 e0       	ldi	r25, 0x01	; 1
    1372:	9a 83       	std	Y+2, r25	; 0x02
    1374:	13 d1       	rcall	.+550    	; 0x159c <ASA_ID_set>
    1376:	8a 81       	ldd	r24, Y+2	; 0x02
    1378:	99 81       	ldd	r25, Y+1	; 0x01
    137a:	89 0f       	add	r24, r25
    137c:	9d 81       	ldd	r25, Y+5	; 0x05
    137e:	89 0f       	add	r24, r25
    1380:	9e 81       	ldd	r25, Y+6	; 0x06
    1382:	89 0f       	add	r24, r25
    1384:	89 83       	std	Y+1, r24	; 0x01
    1386:	f8 01       	movw	r30, r16
    1388:	98 01       	movw	r18, r16
    138a:	29 0f       	add	r18, r25
    138c:	31 1d       	adc	r19, r1
    138e:	04 c0       	rjmp	.+8      	; 0x1398 <ASA_UART_put+0x42>
    1390:	89 81       	ldd	r24, Y+1	; 0x01
    1392:	91 91       	ld	r25, Z+
    1394:	89 0f       	add	r24, r25
    1396:	89 83       	std	Y+1, r24	; 0x01
    1398:	e2 17       	cp	r30, r18
    139a:	f3 07       	cpc	r31, r19
    139c:	c9 f7       	brne	.-14     	; 0x1390 <ASA_UART_put+0x3a>
    139e:	8e e0       	ldi	r24, 0x0E	; 14
    13a0:	91 e0       	ldi	r25, 0x01	; 1
    13a2:	61 e0       	ldi	r22, 0x01	; 1
    13a4:	ae 01       	movw	r20, r28
    13a6:	4c 5f       	subi	r20, 0xFC	; 252
    13a8:	5f 4f       	sbci	r21, 0xFF	; 255
    13aa:	da d8       	rcall	.-3660   	; 0x560 <BatchBuffer_put>
    13ac:	8e e0       	ldi	r24, 0x0E	; 14
    13ae:	91 e0       	ldi	r25, 0x01	; 1
    13b0:	61 e0       	ldi	r22, 0x01	; 1
    13b2:	ae 01       	movw	r20, r28
    13b4:	4e 5f       	subi	r20, 0xFE	; 254
    13b6:	5f 4f       	sbci	r21, 0xFF	; 255
    13b8:	d3 d8       	rcall	.-3674   	; 0x560 <BatchBuffer_put>
    13ba:	8e e0       	ldi	r24, 0x0E	; 14
    13bc:	91 e0       	ldi	r25, 0x01	; 1
    13be:	61 e0       	ldi	r22, 0x01	; 1
    13c0:	ae 01       	movw	r20, r28
    13c2:	4b 5f       	subi	r20, 0xFB	; 251
    13c4:	5f 4f       	sbci	r21, 0xFF	; 255
    13c6:	cc d8       	rcall	.-3688   	; 0x560 <BatchBuffer_put>
    13c8:	8e e0       	ldi	r24, 0x0E	; 14
    13ca:	91 e0       	ldi	r25, 0x01	; 1
    13cc:	61 e0       	ldi	r22, 0x01	; 1
    13ce:	ae 01       	movw	r20, r28
    13d0:	4a 5f       	subi	r20, 0xFA	; 250
    13d2:	5f 4f       	sbci	r21, 0xFF	; 255
    13d4:	c5 d8       	rcall	.-3702   	; 0x560 <BatchBuffer_put>
    13d6:	8e e0       	ldi	r24, 0x0E	; 14
    13d8:	91 e0       	ldi	r25, 0x01	; 1
    13da:	6e 81       	ldd	r22, Y+6	; 0x06
    13dc:	a8 01       	movw	r20, r16
    13de:	c0 d8       	rcall	.-3712   	; 0x560 <BatchBuffer_put>
    13e0:	8e e0       	ldi	r24, 0x0E	; 14
    13e2:	91 e0       	ldi	r25, 0x01	; 1
    13e4:	61 e0       	ldi	r22, 0x01	; 1
    13e6:	ae 01       	movw	r20, r28
    13e8:	4f 5f       	subi	r20, 0xFF	; 255
    13ea:	5f 4f       	sbci	r21, 0xFF	; 255
    13ec:	b9 d8       	rcall	.-3726   	; 0x560 <BatchBuffer_put>
    13ee:	8c 81       	ldd	r24, Y+4	; 0x04
    13f0:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <__data_end>
    13f4:	8a 81       	ldd	r24, Y+2	; 0x02
    13f6:	80 93 61 01 	sts	0x0161, r24	; 0x800161 <__data_end+0x1>
    13fa:	80 ef       	ldi	r24, 0xF0	; 240
    13fc:	dd d0       	rcall	.+442    	; 0x15b8 <UART1_putchar>
    13fe:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1402:	80 64       	ori	r24, 0x40	; 64
    1404:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1408:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    140c:	86 fd       	sbrc	r24, 6
    140e:	fc cf       	rjmp	.-8      	; 0x1408 <ASA_UART_put+0xb2>
    1410:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <StateMachObj>
    1414:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1418:	80 68       	ori	r24, 0x80	; 128
    141a:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    141e:	81 e0       	ldi	r24, 0x01	; 1
    1420:	80 93 8b 01 	sts	0x018B, r24	; 0x80018b <StateMachObj+0x4>
    1424:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <ReBuf+0x3>
    1428:	81 30       	cpi	r24, 0x01	; 1
    142a:	21 f0       	breq	.+8      	; 0x1434 <ASA_UART_put+0xde>
    142c:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <StateMachObj+0x1>
    1430:	82 30       	cpi	r24, 0x02	; 2
    1432:	c1 f7       	brne	.-16     	; 0x1424 <ASA_UART_put+0xce>
    1434:	10 92 8b 01 	sts	0x018B, r1	; 0x80018b <StateMachObj+0x4>
    1438:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <ReBuf+0x3>
    143c:	81 30       	cpi	r24, 0x01	; 1
    143e:	11 f0       	breq	.+4      	; 0x1444 <ASA_UART_put+0xee>
    1440:	81 e0       	ldi	r24, 0x01	; 1
    1442:	0a c0       	rjmp	.+20     	; 0x1458 <ASA_UART_put+0x102>
    1444:	82 e3       	ldi	r24, 0x32	; 50
    1446:	91 e0       	ldi	r25, 0x01	; 1
    1448:	61 e0       	ldi	r22, 0x01	; 1
    144a:	ae 01       	movw	r20, r28
    144c:	4d 5f       	subi	r20, 0xFD	; 253
    144e:	5f 4f       	sbci	r21, 0xFF	; 255
    1450:	cc d8       	rcall	.-3688   	; 0x5ea <BatchBuffer_get>
    1452:	8b 81       	ldd	r24, Y+3	; 0x03
    1454:	88 0f       	add	r24, r24
    1456:	88 0f       	add	r24, r24
    1458:	26 96       	adiw	r28, 0x06	; 6
    145a:	0f b6       	in	r0, 0x3f	; 63
    145c:	f8 94       	cli
    145e:	de bf       	out	0x3e, r29	; 62
    1460:	0f be       	out	0x3f, r0	; 63
    1462:	cd bf       	out	0x3d, r28	; 61
    1464:	cf 91       	pop	r28
    1466:	df 91       	pop	r29
    1468:	1f 91       	pop	r17
    146a:	0f 91       	pop	r16
    146c:	08 95       	ret

0000146e <ASA_UART_set>:
    146e:	ef 92       	push	r14
    1470:	0f 93       	push	r16
    1472:	df 93       	push	r29
    1474:	cf 93       	push	r28
    1476:	cd b7       	in	r28, 0x3d	; 61
    1478:	de b7       	in	r29, 0x3e	; 62
    147a:	28 97       	sbiw	r28, 0x08	; 8
    147c:	0f b6       	in	r0, 0x3f	; 63
    147e:	f8 94       	cli
    1480:	de bf       	out	0x3e, r29	; 62
    1482:	0f be       	out	0x3f, r0	; 63
    1484:	cd bf       	out	0x3d, r28	; 61
    1486:	6c 83       	std	Y+4, r22	; 0x04
    1488:	4d 83       	std	Y+5, r20	; 0x05
    148a:	2e 83       	std	Y+6, r18	; 0x06
    148c:	0f 83       	std	Y+7, r16	; 0x07
    148e:	e8 86       	std	Y+8, r14	; 0x08
    1490:	19 82       	std	Y+1, r1	; 0x01
    1492:	1a 82       	std	Y+2, r1	; 0x02
    1494:	83 d0       	rcall	.+262    	; 0x159c <ASA_ID_set>
    1496:	8a 81       	ldd	r24, Y+2	; 0x02
    1498:	99 81       	ldd	r25, Y+1	; 0x01
    149a:	89 0f       	add	r24, r25
    149c:	9d 81       	ldd	r25, Y+5	; 0x05
    149e:	89 0f       	add	r24, r25
    14a0:	9e 81       	ldd	r25, Y+6	; 0x06
    14a2:	89 0f       	add	r24, r25
    14a4:	9f 81       	ldd	r25, Y+7	; 0x07
    14a6:	89 0f       	add	r24, r25
    14a8:	98 85       	ldd	r25, Y+8	; 0x08
    14aa:	89 0f       	add	r24, r25
    14ac:	89 83       	std	Y+1, r24	; 0x01
    14ae:	8e e0       	ldi	r24, 0x0E	; 14
    14b0:	91 e0       	ldi	r25, 0x01	; 1
    14b2:	61 e0       	ldi	r22, 0x01	; 1
    14b4:	ae 01       	movw	r20, r28
    14b6:	4c 5f       	subi	r20, 0xFC	; 252
    14b8:	5f 4f       	sbci	r21, 0xFF	; 255
    14ba:	52 d8       	rcall	.-3932   	; 0x560 <BatchBuffer_put>
    14bc:	8e e0       	ldi	r24, 0x0E	; 14
    14be:	91 e0       	ldi	r25, 0x01	; 1
    14c0:	61 e0       	ldi	r22, 0x01	; 1
    14c2:	ae 01       	movw	r20, r28
    14c4:	4e 5f       	subi	r20, 0xFE	; 254
    14c6:	5f 4f       	sbci	r21, 0xFF	; 255
    14c8:	4b d8       	rcall	.-3946   	; 0x560 <BatchBuffer_put>
    14ca:	8e e0       	ldi	r24, 0x0E	; 14
    14cc:	91 e0       	ldi	r25, 0x01	; 1
    14ce:	61 e0       	ldi	r22, 0x01	; 1
    14d0:	ae 01       	movw	r20, r28
    14d2:	4b 5f       	subi	r20, 0xFB	; 251
    14d4:	5f 4f       	sbci	r21, 0xFF	; 255
    14d6:	44 d8       	rcall	.-3960   	; 0x560 <BatchBuffer_put>
    14d8:	8e e0       	ldi	r24, 0x0E	; 14
    14da:	91 e0       	ldi	r25, 0x01	; 1
    14dc:	61 e0       	ldi	r22, 0x01	; 1
    14de:	ae 01       	movw	r20, r28
    14e0:	4a 5f       	subi	r20, 0xFA	; 250
    14e2:	5f 4f       	sbci	r21, 0xFF	; 255
    14e4:	3d d8       	rcall	.-3974   	; 0x560 <BatchBuffer_put>
    14e6:	8e e0       	ldi	r24, 0x0E	; 14
    14e8:	91 e0       	ldi	r25, 0x01	; 1
    14ea:	61 e0       	ldi	r22, 0x01	; 1
    14ec:	ae 01       	movw	r20, r28
    14ee:	49 5f       	subi	r20, 0xF9	; 249
    14f0:	5f 4f       	sbci	r21, 0xFF	; 255
    14f2:	36 d8       	rcall	.-3988   	; 0x560 <BatchBuffer_put>
    14f4:	8e e0       	ldi	r24, 0x0E	; 14
    14f6:	91 e0       	ldi	r25, 0x01	; 1
    14f8:	61 e0       	ldi	r22, 0x01	; 1
    14fa:	ae 01       	movw	r20, r28
    14fc:	48 5f       	subi	r20, 0xF8	; 248
    14fe:	5f 4f       	sbci	r21, 0xFF	; 255
    1500:	2f d8       	rcall	.-4002   	; 0x560 <BatchBuffer_put>
    1502:	8e e0       	ldi	r24, 0x0E	; 14
    1504:	91 e0       	ldi	r25, 0x01	; 1
    1506:	61 e0       	ldi	r22, 0x01	; 1
    1508:	ae 01       	movw	r20, r28
    150a:	4f 5f       	subi	r20, 0xFF	; 255
    150c:	5f 4f       	sbci	r21, 0xFF	; 255
    150e:	28 d8       	rcall	.-4016   	; 0x560 <BatchBuffer_put>
    1510:	8c 81       	ldd	r24, Y+4	; 0x04
    1512:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <__data_end>
    1516:	8a 81       	ldd	r24, Y+2	; 0x02
    1518:	80 93 61 01 	sts	0x0161, r24	; 0x800161 <__data_end+0x1>
    151c:	80 ef       	ldi	r24, 0xF0	; 240
    151e:	4c d0       	rcall	.+152    	; 0x15b8 <UART1_putchar>
    1520:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1524:	80 64       	ori	r24, 0x40	; 64
    1526:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    152a:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    152e:	86 fd       	sbrc	r24, 6
    1530:	fc cf       	rjmp	.-8      	; 0x152a <ASA_UART_set+0xbc>
    1532:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <StateMachObj>
    1536:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    153a:	80 68       	ori	r24, 0x80	; 128
    153c:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1540:	81 e0       	ldi	r24, 0x01	; 1
    1542:	80 93 8b 01 	sts	0x018B, r24	; 0x80018b <StateMachObj+0x4>
    1546:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <ReBuf+0x3>
    154a:	81 30       	cpi	r24, 0x01	; 1
    154c:	21 f0       	breq	.+8      	; 0x1556 <ASA_UART_set+0xe8>
    154e:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <StateMachObj+0x1>
    1552:	82 30       	cpi	r24, 0x02	; 2
    1554:	c1 f7       	brne	.-16     	; 0x1546 <ASA_UART_set+0xd8>
    1556:	10 92 8b 01 	sts	0x018B, r1	; 0x80018b <StateMachObj+0x4>
    155a:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <ReBuf+0x3>
    155e:	81 30       	cpi	r24, 0x01	; 1
    1560:	11 f0       	breq	.+4      	; 0x1566 <ASA_UART_set+0xf8>
    1562:	81 e0       	ldi	r24, 0x01	; 1
    1564:	0a c0       	rjmp	.+20     	; 0x157a <ASA_UART_set+0x10c>
    1566:	82 e3       	ldi	r24, 0x32	; 50
    1568:	91 e0       	ldi	r25, 0x01	; 1
    156a:	61 e0       	ldi	r22, 0x01	; 1
    156c:	ae 01       	movw	r20, r28
    156e:	4d 5f       	subi	r20, 0xFD	; 253
    1570:	5f 4f       	sbci	r21, 0xFF	; 255
    1572:	3b d8       	rcall	.-3978   	; 0x5ea <BatchBuffer_get>
    1574:	8b 81       	ldd	r24, Y+3	; 0x03
    1576:	88 0f       	add	r24, r24
    1578:	88 0f       	add	r24, r24
    157a:	28 96       	adiw	r28, 0x08	; 8
    157c:	0f b6       	in	r0, 0x3f	; 63
    157e:	f8 94       	cli
    1580:	de bf       	out	0x3e, r29	; 62
    1582:	0f be       	out	0x3f, r0	; 63
    1584:	cd bf       	out	0x3d, r28	; 61
    1586:	cf 91       	pop	r28
    1588:	df 91       	pop	r29
    158a:	0f 91       	pop	r16
    158c:	ef 90       	pop	r14
    158e:	08 95       	ret

00001590 <ASA_ID_check>:
    1590:	90 e0       	ldi	r25, 0x00	; 0
    1592:	88 30       	cpi	r24, 0x08	; 8
    1594:	08 f0       	brcs	.+2      	; 0x1598 <ASA_ID_check+0x8>
    1596:	91 e0       	ldi	r25, 0x01	; 1
    1598:	89 2f       	mov	r24, r25
    159a:	08 95       	ret

0000159c <ASA_ID_set>:
    159c:	98 2f       	mov	r25, r24
    159e:	88 30       	cpi	r24, 0x08	; 8
    15a0:	10 f0       	brcs	.+4      	; 0x15a6 <ASA_ID_set+0xa>
    15a2:	81 e0       	ldi	r24, 0x01	; 1
    15a4:	08 95       	ret
    15a6:	88 b3       	in	r24, 0x18	; 24
    15a8:	92 95       	swap	r25
    15aa:	99 0f       	add	r25, r25
    15ac:	90 7e       	andi	r25, 0xE0	; 224
    15ae:	8f 71       	andi	r24, 0x1F	; 31
    15b0:	89 2b       	or	r24, r25
    15b2:	88 bb       	out	0x18, r24	; 24
    15b4:	80 e0       	ldi	r24, 0x00	; 0
    15b6:	08 95       	ret

000015b8 <UART1_putchar>:
    15b8:	98 2f       	mov	r25, r24
    15ba:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
    15be:	85 ff       	sbrs	r24, 5
    15c0:	fc cf       	rjmp	.-8      	; 0x15ba <UART1_putchar+0x2>
    15c2:	90 93 9c 00 	sts	0x009C, r25	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    15c6:	83 eb       	ldi	r24, 0xB3	; 179
    15c8:	92 e0       	ldi	r25, 0x02	; 2
    15ca:	01 97       	sbiw	r24, 0x01	; 1
    15cc:	f1 f7       	brne	.-4      	; 0x15ca <UART1_putchar+0x12>
    15ce:	08 95       	ret

000015d0 <UART1_getchar>:
    15d0:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
    15d4:	87 ff       	sbrs	r24, 7
    15d6:	fc cf       	rjmp	.-8      	; 0x15d0 <UART1_getchar>
    15d8:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
    15dc:	08 95       	ret

000015de <SPI_Transfer>:
    15de:	8f b9       	out	0x0f, r24	; 15
    15e0:	77 9b       	sbis	0x0e, 7	; 14
    15e2:	fe cf       	rjmp	.-4      	; 0x15e0 <SPI_Transfer+0x2>
    15e4:	8f b1       	in	r24, 0x0f	; 15
    15e6:	08 95       	ret

000015e8 <SPI_Receive>:
    15e8:	1f b8       	out	0x0f, r1	; 15
    15ea:	77 9b       	sbis	0x0e, 7	; 14
    15ec:	fe cf       	rjmp	.-4      	; 0x15ea <SPI_Receive+0x2>
    15ee:	8f b1       	in	r24, 0x0f	; 15
    15f0:	08 95       	ret

000015f2 <ASA_putchar>:
    15f2:	1f 93       	push	r17
    15f4:	16 2f       	mov	r17, r22
    15f6:	d2 df       	rcall	.-92     	; 0x159c <ASA_ID_set>
    15f8:	8d e3       	ldi	r24, 0x3D	; 61
    15fa:	93 e0       	ldi	r25, 0x03	; 3
    15fc:	01 97       	sbiw	r24, 0x01	; 1
    15fe:	f1 f7       	brne	.-4      	; 0x15fc <ASA_putchar+0xa>
    1600:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
    1604:	85 ff       	sbrs	r24, 5
    1606:	fc cf       	rjmp	.-8      	; 0x1600 <ASA_putchar+0xe>
    1608:	10 93 9c 00 	sts	0x009C, r17	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
    160c:	83 eb       	ldi	r24, 0xB3	; 179
    160e:	92 e0       	ldi	r25, 0x02	; 2
    1610:	01 97       	sbiw	r24, 0x01	; 1
    1612:	f1 f7       	brne	.-4      	; 0x1610 <ASA_putchar+0x1e>
    1614:	80 e0       	ldi	r24, 0x00	; 0
    1616:	1f 91       	pop	r17
    1618:	08 95       	ret

0000161a <ASA_getchar>:
    161a:	cf 93       	push	r28
    161c:	df 93       	push	r29
    161e:	eb 01       	movw	r28, r22
    1620:	bd df       	rcall	.-134    	; 0x159c <ASA_ID_set>
    1622:	8d e3       	ldi	r24, 0x3D	; 61
    1624:	93 e0       	ldi	r25, 0x03	; 3
    1626:	01 97       	sbiw	r24, 0x01	; 1
    1628:	f1 f7       	brne	.-4      	; 0x1626 <ASA_getchar+0xc>
    162a:	20 e0       	ldi	r18, 0x00	; 0
    162c:	30 e0       	ldi	r19, 0x00	; 0
    162e:	08 c0       	rjmp	.+16     	; 0x1640 <ASA_getchar+0x26>
    1630:	2f 5f       	subi	r18, 0xFF	; 255
    1632:	3f 4f       	sbci	r19, 0xFF	; 255
    1634:	8f ef       	ldi	r24, 0xFF	; 255
    1636:	2f 3f       	cpi	r18, 0xFF	; 255
    1638:	38 07       	cpc	r19, r24
    163a:	11 f4       	brne	.+4      	; 0x1640 <ASA_getchar+0x26>
    163c:	81 e0       	ldi	r24, 0x01	; 1
    163e:	08 c0       	rjmp	.+16     	; 0x1650 <ASA_getchar+0x36>
    1640:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
    1644:	87 ff       	sbrs	r24, 7
    1646:	f4 cf       	rjmp	.-24     	; 0x1630 <ASA_getchar+0x16>
    1648:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
    164c:	88 83       	st	Y, r24
    164e:	80 e0       	ldi	r24, 0x00	; 0
    1650:	df 91       	pop	r29
    1652:	cf 91       	pop	r28
    1654:	08 95       	ret

00001656 <PC_putchar>:
    1656:	5d 9b       	sbis	0x0b, 5	; 11
    1658:	fe cf       	rjmp	.-4      	; 0x1656 <PC_putchar>
    165a:	8c b9       	out	0x0c, r24	; 12
    165c:	08 95       	ret

0000165e <PC_getchar>:
    165e:	5f 9b       	sbis	0x0b, 7	; 11
    1660:	fe cf       	rjmp	.-4      	; 0x165e <PC_getchar>
    1662:	8c b1       	in	r24, 0x0c	; 12
    1664:	08 95       	ret

00001666 <TWI_ERROR>:
    1666:	84 e9       	ldi	r24, 0x94	; 148
    1668:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    166c:	08 95       	ret

0000166e <TWI_Start>:
    166e:	84 ea       	ldi	r24, 0xA4	; 164
    1670:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1674:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1678:	87 ff       	sbrs	r24, 7
    167a:	fc cf       	rjmp	.-8      	; 0x1674 <TWI_Start+0x6>
    167c:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    1680:	88 7f       	andi	r24, 0xF8	; 248
    1682:	88 30       	cpi	r24, 0x08	; 8
    1684:	11 f4       	brne	.+4      	; 0x168a <TWI_Start+0x1c>
    1686:	80 e0       	ldi	r24, 0x00	; 0
    1688:	08 95       	ret
    168a:	84 e9       	ldi	r24, 0x94	; 148
    168c:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1690:	81 e0       	ldi	r24, 0x01	; 1
    1692:	08 95       	ret

00001694 <TWI_Stop>:
    1694:	84 e9       	ldi	r24, 0x94	; 148
    1696:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    169a:	08 95       	ret

0000169c <TWI_ReStart>:
    169c:	84 ea       	ldi	r24, 0xA4	; 164
    169e:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    16a2:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    16a6:	87 ff       	sbrs	r24, 7
    16a8:	fc cf       	rjmp	.-8      	; 0x16a2 <TWI_ReStart+0x6>
    16aa:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    16ae:	88 7f       	andi	r24, 0xF8	; 248
    16b0:	80 31       	cpi	r24, 0x10	; 16
    16b2:	11 f4       	brne	.+4      	; 0x16b8 <TWI_ReStart+0x1c>
    16b4:	80 e0       	ldi	r24, 0x00	; 0
    16b6:	08 95       	ret
    16b8:	84 e9       	ldi	r24, 0x94	; 148
    16ba:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    16be:	82 e0       	ldi	r24, 0x02	; 2
    16c0:	08 95       	ret

000016c2 <TWI_SendSLAW>:
    16c2:	90 e0       	ldi	r25, 0x00	; 0
    16c4:	88 0f       	add	r24, r24
    16c6:	99 1f       	adc	r25, r25
    16c8:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    16cc:	84 e8       	ldi	r24, 0x84	; 132
    16ce:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    16d2:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    16d6:	87 ff       	sbrs	r24, 7
    16d8:	fc cf       	rjmp	.-8      	; 0x16d2 <TWI_SendSLAW+0x10>
    16da:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    16de:	88 7f       	andi	r24, 0xF8	; 248
    16e0:	88 31       	cpi	r24, 0x18	; 24
    16e2:	19 f0       	breq	.+6      	; 0x16ea <TWI_SendSLAW+0x28>
    16e4:	84 e9       	ldi	r24, 0x94	; 148
    16e6:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    16ea:	08 95       	ret

000016ec <TWI_SendSLAR>:
    16ec:	88 0f       	add	r24, r24
    16ee:	8f 5f       	subi	r24, 0xFF	; 255
    16f0:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    16f4:	84 e8       	ldi	r24, 0x84	; 132
    16f6:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    16fa:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    16fe:	87 ff       	sbrs	r24, 7
    1700:	fc cf       	rjmp	.-8      	; 0x16fa <TWI_SendSLAR+0xe>
    1702:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    1706:	88 7f       	andi	r24, 0xF8	; 248
    1708:	80 34       	cpi	r24, 0x40	; 64
    170a:	19 f0       	breq	.+6      	; 0x1712 <TWI_SendSLAR+0x26>
    170c:	84 e9       	ldi	r24, 0x94	; 148
    170e:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1712:	08 95       	ret

00001714 <TWI_TransmitData>:
    1714:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    1718:	84 e8       	ldi	r24, 0x84	; 132
    171a:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    171e:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1722:	87 ff       	sbrs	r24, 7
    1724:	fc cf       	rjmp	.-8      	; 0x171e <TWI_TransmitData+0xa>
    1726:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    172a:	88 7f       	andi	r24, 0xF8	; 248
    172c:	88 32       	cpi	r24, 0x28	; 40
    172e:	19 f0       	breq	.+6      	; 0x1736 <TWI_TransmitData+0x22>
    1730:	84 e9       	ldi	r24, 0x94	; 148
    1732:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1736:	08 95       	ret

00001738 <TWI_ReceiveData>:
    1738:	84 ec       	ldi	r24, 0xC4	; 196
    173a:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    173e:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1742:	87 ff       	sbrs	r24, 7
    1744:	fc cf       	rjmp	.-8      	; 0x173e <TWI_ReceiveData+0x6>
    1746:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    174a:	88 7f       	andi	r24, 0xF8	; 248
    174c:	80 35       	cpi	r24, 0x50	; 80
    174e:	19 f0       	breq	.+6      	; 0x1756 <TWI_ReceiveData+0x1e>
    1750:	84 e9       	ldi	r24, 0x94	; 148
    1752:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1756:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    175a:	08 95       	ret

0000175c <TWI_SendNoAck>:
    175c:	84 e8       	ldi	r24, 0x84	; 132
    175e:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1762:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1766:	87 ff       	sbrs	r24, 7
    1768:	fc cf       	rjmp	.-8      	; 0x1762 <TWI_SendNoAck+0x6>
    176a:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    176e:	88 7f       	andi	r24, 0xF8	; 248
    1770:	88 35       	cpi	r24, 0x58	; 88
    1772:	19 f0       	breq	.+6      	; 0x177a <TWI_SendNoAck+0x1e>
    1774:	84 e9       	ldi	r24, 0x94	; 148
    1776:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    177a:	08 95       	ret

0000177c <TWI_wr>:
    177c:	ff 92       	push	r15
    177e:	0f 93       	push	r16
    1780:	1f 93       	push	r17
    1782:	18 2f       	mov	r17, r24
    1784:	06 2f       	mov	r16, r22
    1786:	f4 2e       	mov	r15, r20
    1788:	72 df       	rcall	.-284    	; 0x166e <TWI_Start>
    178a:	81 2f       	mov	r24, r17
    178c:	9a df       	rcall	.-204    	; 0x16c2 <TWI_SendSLAW>
    178e:	80 2f       	mov	r24, r16
    1790:	c1 df       	rcall	.-126    	; 0x1714 <TWI_TransmitData>
    1792:	8f 2d       	mov	r24, r15
    1794:	bf df       	rcall	.-130    	; 0x1714 <TWI_TransmitData>
    1796:	84 e9       	ldi	r24, 0x94	; 148
    1798:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    179c:	1f 91       	pop	r17
    179e:	0f 91       	pop	r16
    17a0:	ff 90       	pop	r15
    17a2:	08 95       	ret

000017a4 <TWI_rd>:
    17a4:	0f 93       	push	r16
    17a6:	1f 93       	push	r17
    17a8:	08 2f       	mov	r16, r24
    17aa:	16 2f       	mov	r17, r22
    17ac:	60 df       	rcall	.-320    	; 0x166e <TWI_Start>
    17ae:	80 2f       	mov	r24, r16
    17b0:	88 df       	rcall	.-240    	; 0x16c2 <TWI_SendSLAW>
    17b2:	81 2f       	mov	r24, r17
    17b4:	af df       	rcall	.-162    	; 0x1714 <TWI_TransmitData>
    17b6:	72 df       	rcall	.-284    	; 0x169c <TWI_ReStart>
    17b8:	80 2f       	mov	r24, r16
    17ba:	98 df       	rcall	.-208    	; 0x16ec <TWI_SendSLAR>
    17bc:	bd df       	rcall	.-134    	; 0x1738 <TWI_ReceiveData>
    17be:	18 2f       	mov	r17, r24
    17c0:	cd df       	rcall	.-102    	; 0x175c <TWI_SendNoAck>
    17c2:	84 e9       	ldi	r24, 0x94	; 148
    17c4:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    17c8:	81 2f       	mov	r24, r17
    17ca:	1f 91       	pop	r17
    17cc:	0f 91       	pop	r16
    17ce:	08 95       	ret

000017d0 <TWI_initialize>:
    17d0:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
    17d4:	08 95       	ret

000017d6 <TWI_Write>:
    17d6:	ef 92       	push	r14
    17d8:	ff 92       	push	r15
    17da:	0f 93       	push	r16
    17dc:	1f 93       	push	r17
    17de:	18 2f       	mov	r17, r24
    17e0:	06 2f       	mov	r16, r22
    17e2:	f7 2e       	mov	r15, r23
    17e4:	e4 2e       	mov	r14, r20
    17e6:	43 df       	rcall	.-378    	; 0x166e <TWI_Start>
    17e8:	81 30       	cpi	r24, 0x01	; 1
    17ea:	09 f4       	brne	.+2      	; 0x17ee <TWI_Write+0x18>
    17ec:	41 c0       	rjmp	.+130    	; 0x1870 <TWI_Write+0x9a>
    17ee:	81 2f       	mov	r24, r17
    17f0:	90 e0       	ldi	r25, 0x00	; 0
    17f2:	88 0f       	add	r24, r24
    17f4:	99 1f       	adc	r25, r25
    17f6:	90 70       	andi	r25, 0x00	; 0
    17f8:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    17fc:	84 e8       	ldi	r24, 0x84	; 132
    17fe:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1802:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1806:	87 ff       	sbrs	r24, 7
    1808:	fc cf       	rjmp	.-8      	; 0x1802 <TWI_Write+0x2c>
    180a:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    180e:	88 7f       	andi	r24, 0xF8	; 248
    1810:	88 31       	cpi	r24, 0x18	; 24
    1812:	39 f4       	brne	.+14     	; 0x1822 <TWI_Write+0x4c>
    1814:	80 2f       	mov	r24, r16
    1816:	9f 2d       	mov	r25, r15
    1818:	9c 01       	movw	r18, r24
    181a:	f9 01       	movw	r30, r18
    181c:	90 e0       	ldi	r25, 0x00	; 0
    181e:	24 e8       	ldi	r18, 0x84	; 132
    1820:	1a c0       	rjmp	.+52     	; 0x1856 <TWI_Write+0x80>
    1822:	84 e9       	ldi	r24, 0x94	; 148
    1824:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1828:	83 e0       	ldi	r24, 0x03	; 3
    182a:	22 c0       	rjmp	.+68     	; 0x1870 <TWI_Write+0x9a>
    182c:	80 81       	ld	r24, Z
    182e:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    1832:	20 93 74 00 	sts	0x0074, r18	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1836:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    183a:	87 ff       	sbrs	r24, 7
    183c:	fc cf       	rjmp	.-8      	; 0x1836 <TWI_Write+0x60>
    183e:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    1842:	31 96       	adiw	r30, 0x01	; 1
    1844:	88 7f       	andi	r24, 0xF8	; 248
    1846:	88 32       	cpi	r24, 0x28	; 40
    1848:	29 f0       	breq	.+10     	; 0x1854 <TWI_Write+0x7e>
    184a:	84 e9       	ldi	r24, 0x94	; 148
    184c:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1850:	84 e0       	ldi	r24, 0x04	; 4
    1852:	0e c0       	rjmp	.+28     	; 0x1870 <TWI_Write+0x9a>
    1854:	9f 5f       	subi	r25, 0xFF	; 255
    1856:	9e 15       	cp	r25, r14
    1858:	48 f3       	brcs	.-46     	; 0x182c <TWI_Write+0x56>
    185a:	81 e0       	ldi	r24, 0x01	; 1
    185c:	8e 15       	cp	r24, r14
    185e:	20 f4       	brcc	.+8      	; 0x1868 <TWI_Write+0x92>
    1860:	84 e9       	ldi	r24, 0x94	; 148
    1862:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1866:	03 c0       	rjmp	.+6      	; 0x186e <TWI_Write+0x98>
    1868:	81 e0       	ldi	r24, 0x01	; 1
    186a:	80 93 b7 01 	sts	0x01B7, r24	; 0x8001b7 <write_to_read>
    186e:	80 e0       	ldi	r24, 0x00	; 0
    1870:	1f 91       	pop	r17
    1872:	0f 91       	pop	r16
    1874:	ff 90       	pop	r15
    1876:	ef 90       	pop	r14
    1878:	08 95       	ret

0000187a <TWI_Read>:
    187a:	0f 93       	push	r16
    187c:	1f 93       	push	r17
    187e:	cf 93       	push	r28
    1880:	df 93       	push	r29
    1882:	08 2f       	mov	r16, r24
    1884:	eb 01       	movw	r28, r22
    1886:	14 2f       	mov	r17, r20
    1888:	80 91 b7 01 	lds	r24, 0x01B7	; 0x8001b7 <write_to_read>
    188c:	81 30       	cpi	r24, 0x01	; 1
    188e:	39 f4       	brne	.+14     	; 0x189e <TWI_Read+0x24>
    1890:	05 df       	rcall	.-502    	; 0x169c <TWI_ReStart>
    1892:	82 30       	cpi	r24, 0x02	; 2
    1894:	09 f4       	brne	.+2      	; 0x1898 <TWI_Read+0x1e>
    1896:	73 c0       	rjmp	.+230    	; 0x197e <TWI_Read+0x104>
    1898:	10 92 b7 01 	sts	0x01B7, r1	; 0x8001b7 <write_to_read>
    189c:	01 c0       	rjmp	.+2      	; 0x18a0 <TWI_Read+0x26>
    189e:	e7 de       	rcall	.-562    	; 0x166e <TWI_Start>
    18a0:	81 30       	cpi	r24, 0x01	; 1
    18a2:	09 f4       	brne	.+2      	; 0x18a6 <TWI_Read+0x2c>
    18a4:	6c c0       	rjmp	.+216    	; 0x197e <TWI_Read+0x104>
    18a6:	80 2f       	mov	r24, r16
    18a8:	90 e0       	ldi	r25, 0x00	; 0
    18aa:	88 0f       	add	r24, r24
    18ac:	99 1f       	adc	r25, r25
    18ae:	81 60       	ori	r24, 0x01	; 1
    18b0:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    18b4:	84 e8       	ldi	r24, 0x84	; 132
    18b6:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    18ba:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    18be:	87 ff       	sbrs	r24, 7
    18c0:	fc cf       	rjmp	.-8      	; 0x18ba <TWI_Read+0x40>
    18c2:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    18c6:	88 7f       	andi	r24, 0xF8	; 248
    18c8:	80 34       	cpi	r24, 0x40	; 64
    18ca:	29 f0       	breq	.+10     	; 0x18d6 <TWI_Read+0x5c>
    18cc:	84 e9       	ldi	r24, 0x94	; 148
    18ce:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    18d2:	85 e0       	ldi	r24, 0x05	; 5
    18d4:	54 c0       	rjmp	.+168    	; 0x197e <TWI_Read+0x104>
    18d6:	12 30       	cpi	r17, 0x02	; 2
    18d8:	d0 f1       	brcs	.+116    	; 0x194e <TWI_Read+0xd4>
    18da:	40 e0       	ldi	r20, 0x00	; 0
    18dc:	21 2f       	mov	r18, r17
    18de:	30 e0       	ldi	r19, 0x00	; 0
    18e0:	21 50       	subi	r18, 0x01	; 1
    18e2:	30 40       	sbci	r19, 0x00	; 0
    18e4:	54 ec       	ldi	r21, 0xC4	; 196
    18e6:	17 c0       	rjmp	.+46     	; 0x1916 <TWI_Read+0x9c>
    18e8:	50 93 74 00 	sts	0x0074, r21	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    18ec:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    18f0:	87 ff       	sbrs	r24, 7
    18f2:	fc cf       	rjmp	.-8      	; 0x18ec <TWI_Read+0x72>
    18f4:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    18f8:	88 7f       	andi	r24, 0xF8	; 248
    18fa:	80 35       	cpi	r24, 0x50	; 80
    18fc:	29 f0       	breq	.+10     	; 0x1908 <TWI_Read+0x8e>
    18fe:	84 e9       	ldi	r24, 0x94	; 148
    1900:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1904:	86 e0       	ldi	r24, 0x06	; 6
    1906:	3b c0       	rjmp	.+118    	; 0x197e <TWI_Read+0x104>
    1908:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    190c:	fe 01       	movw	r30, r28
    190e:	e4 0f       	add	r30, r20
    1910:	f1 1d       	adc	r31, r1
    1912:	80 83       	st	Z, r24
    1914:	4f 5f       	subi	r20, 0xFF	; 255
    1916:	84 2f       	mov	r24, r20
    1918:	90 e0       	ldi	r25, 0x00	; 0
    191a:	82 17       	cp	r24, r18
    191c:	93 07       	cpc	r25, r19
    191e:	24 f3       	brlt	.-56     	; 0x18e8 <TWI_Read+0x6e>
    1920:	84 e8       	ldi	r24, 0x84	; 132
    1922:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1926:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    192a:	87 ff       	sbrs	r24, 7
    192c:	fc cf       	rjmp	.-8      	; 0x1926 <TWI_Read+0xac>
    192e:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    1932:	88 7f       	andi	r24, 0xF8	; 248
    1934:	88 35       	cpi	r24, 0x58	; 88
    1936:	29 f0       	breq	.+10     	; 0x1942 <TWI_Read+0xc8>
    1938:	84 e9       	ldi	r24, 0x94	; 148
    193a:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    193e:	87 e0       	ldi	r24, 0x07	; 7
    1940:	1e c0       	rjmp	.+60     	; 0x197e <TWI_Read+0x104>
    1942:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    1946:	c1 0f       	add	r28, r17
    1948:	d1 1d       	adc	r29, r1
    194a:	21 97       	sbiw	r28, 0x01	; 1
    194c:	13 c0       	rjmp	.+38     	; 0x1974 <TWI_Read+0xfa>
    194e:	84 e8       	ldi	r24, 0x84	; 132
    1950:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1954:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1958:	87 ff       	sbrs	r24, 7
    195a:	fc cf       	rjmp	.-8      	; 0x1954 <TWI_Read+0xda>
    195c:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    1960:	88 7f       	andi	r24, 0xF8	; 248
    1962:	88 35       	cpi	r24, 0x58	; 88
    1964:	29 f0       	breq	.+10     	; 0x1970 <TWI_Read+0xf6>
    1966:	84 e9       	ldi	r24, 0x94	; 148
    1968:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    196c:	88 e0       	ldi	r24, 0x08	; 8
    196e:	07 c0       	rjmp	.+14     	; 0x197e <TWI_Read+0x104>
    1970:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    1974:	88 83       	st	Y, r24
    1976:	84 e9       	ldi	r24, 0x94	; 148
    1978:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    197c:	80 e0       	ldi	r24, 0x00	; 0
    197e:	df 91       	pop	r29
    1980:	cf 91       	pop	r28
    1982:	1f 91       	pop	r17
    1984:	0f 91       	pop	r16
    1986:	08 95       	ret

00001988 <main>:
#define F_CPU 10520000
#include <avr/io.h>
#include "ASA_Lib.h"

int main(void)
{
    1988:	cf 93       	push	r28
    198a:	df 93       	push	r29
    198c:	cd b7       	in	r28, 0x3d	; 61
    198e:	de b7       	in	r29, 0x3e	; 62
    1990:	2a 97       	sbiw	r28, 0x0a	; 10
    1992:	0f b6       	in	r0, 0x3f	; 63
    1994:	f8 94       	cli
    1996:	de bf       	out	0x3e, r29	; 62
    1998:	0f be       	out	0x3f, r0	; 63
    199a:	cd bf       	out	0x3d, r28	; 61
	ASA_M128_set();
    199c:	0e 94 5d 02 	call	0x4ba	; 0x4ba <ASA_M128_set>
	DDRA =0xff;
    19a0:	8f ef       	ldi	r24, 0xFF	; 255
    19a2:	8a bb       	out	0x1a, r24	; 26
    19a4:	9e 01       	movw	r18, r28
    19a6:	25 5f       	subi	r18, 0xF5	; 245
    19a8:	3f 4f       	sbci	r19, 0xFF	; 255
    /* Replace with your application code */
    while (1) 
    {
		char encode[10]={0x40,0x79,0x24,0x30,0x19,0x12,0x03,0x78,0x00,0x18};
    19aa:	8a e0       	ldi	r24, 0x0A	; 10
    19ac:	e6 e5       	ldi	r30, 0x56	; 86
    19ae:	f1 e0       	ldi	r31, 0x01	; 1
    19b0:	de 01       	movw	r26, r28
    19b2:	11 96       	adiw	r26, 0x01	; 1
    19b4:	01 90       	ld	r0, Z+
    19b6:	0d 92       	st	X+, r0
    19b8:	8a 95       	dec	r24
    19ba:	e1 f7       	brne	.-8      	; 0x19b4 <main+0x2c>
    19bc:	fe 01       	movw	r30, r28
    19be:	31 96       	adiw	r30, 0x01	; 1
			for (int i=0;i<10;i++)
			{
				PORTA=encode[i];
    19c0:	81 91       	ld	r24, Z+
    19c2:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    19c4:	4f e5       	ldi	r20, 0x5F	; 95
    19c6:	8d e0       	ldi	r24, 0x0D	; 13
    19c8:	90 e1       	ldi	r25, 0x10	; 16
    19ca:	41 50       	subi	r20, 0x01	; 1
    19cc:	80 40       	sbci	r24, 0x00	; 0
    19ce:	90 40       	sbci	r25, 0x00	; 0
    19d0:	e1 f7       	brne	.-8      	; 0x19ca <main+0x42>
    19d2:	00 c0       	rjmp	.+0      	; 0x19d4 <main+0x4c>
    19d4:	00 00       	nop
	DDRA =0xff;
    /* Replace with your application code */
    while (1) 
    {
		char encode[10]={0x40,0x79,0x24,0x30,0x19,0x12,0x03,0x78,0x00,0x18};
			for (int i=0;i<10;i++)
    19d6:	e2 17       	cp	r30, r18
    19d8:	f3 07       	cpc	r31, r19
    19da:	91 f7       	brne	.-28     	; 0x19c0 <main+0x38>
    19dc:	e6 cf       	rjmp	.-52     	; 0x19aa <main+0x22>

000019de <_exit>:
    19de:	f8 94       	cli

000019e0 <__stop_program>:
    19e0:	ff cf       	rjmp	.-2      	; 0x19e0 <__stop_program>
