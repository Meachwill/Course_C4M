
test10_3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000082  00800100  00002d5e  00002df2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002d5e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000a0  00800182  00800182  00002e74  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002e74  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002ed0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  00002f0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000004c4  00000000  00000000  00002fd4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002dec  00000000  00000000  00003498  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001098  00000000  00000000  00006284  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000235b  00000000  00000000  0000731c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000524  00000000  00000000  00009678  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000b3a  00000000  00000000  00009b9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00002855  00000000  00000000  0000a6d6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000cf2b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	8b c0       	rjmp	.+278    	; 0x118 <__ctors_end>
       2:	00 00       	nop
       4:	a8 c0       	rjmp	.+336    	; 0x156 <__bad_interrupt>
       6:	00 00       	nop
       8:	a6 c0       	rjmp	.+332    	; 0x156 <__bad_interrupt>
       a:	00 00       	nop
       c:	a4 c0       	rjmp	.+328    	; 0x156 <__bad_interrupt>
       e:	00 00       	nop
      10:	a2 c0       	rjmp	.+324    	; 0x156 <__bad_interrupt>
      12:	00 00       	nop
      14:	a0 c0       	rjmp	.+320    	; 0x156 <__bad_interrupt>
      16:	00 00       	nop
      18:	9e c0       	rjmp	.+316    	; 0x156 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	9c c0       	rjmp	.+312    	; 0x156 <__bad_interrupt>
      1e:	00 00       	nop
      20:	9a c0       	rjmp	.+308    	; 0x156 <__bad_interrupt>
      22:	00 00       	nop
      24:	98 c0       	rjmp	.+304    	; 0x156 <__bad_interrupt>
      26:	00 00       	nop
      28:	96 c0       	rjmp	.+300    	; 0x156 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	94 c0       	rjmp	.+296    	; 0x156 <__bad_interrupt>
      2e:	00 00       	nop
      30:	54 c6       	rjmp	.+3240   	; 0xcda <__vector_12>
      32:	00 00       	nop
      34:	90 c0       	rjmp	.+288    	; 0x156 <__bad_interrupt>
      36:	00 00       	nop
      38:	8e c0       	rjmp	.+284    	; 0x156 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	8c c0       	rjmp	.+280    	; 0x156 <__bad_interrupt>
      3e:	00 00       	nop
      40:	8a c0       	rjmp	.+276    	; 0x156 <__bad_interrupt>
      42:	00 00       	nop
      44:	88 c0       	rjmp	.+272    	; 0x156 <__bad_interrupt>
      46:	00 00       	nop
      48:	86 c0       	rjmp	.+268    	; 0x156 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	84 c0       	rjmp	.+264    	; 0x156 <__bad_interrupt>
      4e:	00 00       	nop
      50:	82 c0       	rjmp	.+260    	; 0x156 <__bad_interrupt>
      52:	00 00       	nop
      54:	80 c0       	rjmp	.+256    	; 0x156 <__bad_interrupt>
      56:	00 00       	nop
      58:	7e c0       	rjmp	.+252    	; 0x156 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	7c c0       	rjmp	.+248    	; 0x156 <__bad_interrupt>
      5e:	00 00       	nop
      60:	7a c0       	rjmp	.+244    	; 0x156 <__bad_interrupt>
      62:	00 00       	nop
      64:	78 c0       	rjmp	.+240    	; 0x156 <__bad_interrupt>
      66:	00 00       	nop
      68:	76 c0       	rjmp	.+236    	; 0x156 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	74 c0       	rjmp	.+232    	; 0x156 <__bad_interrupt>
      6e:	00 00       	nop
      70:	72 c0       	rjmp	.+228    	; 0x156 <__bad_interrupt>
      72:	00 00       	nop
      74:	70 c0       	rjmp	.+224    	; 0x156 <__bad_interrupt>
      76:	00 00       	nop
      78:	76 c5       	rjmp	.+2796   	; 0xb66 <__vector_30>
      7a:	00 00       	nop
      7c:	6c c0       	rjmp	.+216    	; 0x156 <__bad_interrupt>
      7e:	00 00       	nop
      80:	27 c5       	rjmp	.+2638   	; 0xad0 <__vector_32>
      82:	00 00       	nop
      84:	68 c0       	rjmp	.+208    	; 0x156 <__bad_interrupt>
      86:	00 00       	nop
      88:	66 c0       	rjmp	.+204    	; 0x156 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	ee 0e       	add	r14, r30
      8e:	f1 0e       	add	r15, r17
      90:	f4 0e       	add	r15, r20
      92:	f7 0e       	add	r15, r23
      94:	fa 0e       	add	r15, r26
      96:	fd 0e       	add	r15, r29
      98:	00 0f       	add	r16, r16
      9a:	03 0f       	add	r16, r19
      9c:	06 0f       	add	r16, r22
      9e:	1b 0f       	add	r17, r27
      a0:	1b 0f       	add	r17, r27
      a2:	1b 0f       	add	r17, r27
      a4:	1b 0f       	add	r17, r27
      a6:	1b 0f       	add	r17, r27
      a8:	1b 0f       	add	r17, r27
      aa:	1b 0f       	add	r17, r27
      ac:	09 0f       	add	r16, r25
      ae:	0c 0f       	add	r16, r28
      b0:	0f 0f       	add	r16, r31
      b2:	12 0f       	add	r17, r18
      b4:	15 0f       	add	r17, r21
      b6:	18 0f       	add	r17, r24

000000b8 <__trampolines_end>:
      b8:	1e ff       	.word	0xff1e	; ????
      ba:	ff ff       	.word	0xffff	; ????
      bc:	ff ff       	.word	0xffff	; ????
      be:	ff ff       	.word	0xffff	; ????
      c0:	ff ff       	.word	0xffff	; ????
      c2:	ff ff       	.word	0xffff	; ????
      c4:	ff ff       	.word	0xffff	; ????
      c6:	ff ff       	.word	0xffff	; ????
      c8:	ff ff       	.word	0xffff	; ????
      ca:	ff ff       	.word	0xffff	; ????
      cc:	ff ff       	.word	0xffff	; ????
      ce:	ff ff       	.word	0xffff	; ????
      d0:	ff ff       	.word	0xffff	; ????
      d2:	ff ff       	.word	0xffff	; ????
      d4:	ff ff       	.word	0xffff	; ????
      d6:	ff ff       	.word	0xffff	; ????
      d8:	ff ff       	.word	0xffff	; ????
      da:	ff ff       	.word	0xffff	; ????
      dc:	ff ff       	.word	0xffff	; ????
      de:	ff ff       	.word	0xffff	; ????
      e0:	ff ff       	.word	0xffff	; ????
      e2:	ff ff       	.word	0xffff	; ????
      e4:	ff 1b       	sub	r31, r31
      e6:	ff ff       	.word	0xffff	; ????
      e8:	00 01       	movw	r0, r0
      ea:	02 03       	mulsu	r16, r18
      ec:	04 05       	cpc	r16, r4
      ee:	06 07       	cpc	r16, r22
      f0:	08 09       	sbc	r16, r8
      f2:	ff ff       	.word	0xffff	; ????
      f4:	ff ff       	.word	0xffff	; ????
      f6:	ff ff       	.word	0xffff	; ????
      f8:	ff 0a       	sbc	r15, r31
      fa:	0b 0c       	add	r0, r11
      fc:	0d 0e       	add	r0, r29
      fe:	0f 10       	cpse	r0, r15
     100:	11 12       	cpse	r1, r17
     102:	13 ff       	sbrs	r17, 3
     104:	14 ff       	sbrs	r17, 4
     106:	15 16       	cp	r1, r21
     108:	17 ff       	sbrs	r17, 7
     10a:	ff ff       	.word	0xffff	; ????
     10c:	ff 18       	sub	r15, r15
     10e:	ff ff       	.word	0xffff	; ????
     110:	ff 19       	sub	r31, r15
     112:	ff ff       	.word	0xffff	; ????
     114:	ff ff       	.word	0xffff	; ????
     116:	ff 1a       	sub	r15, r31

00000118 <__ctors_end>:
     118:	11 24       	eor	r1, r1
     11a:	1f be       	out	0x3f, r1	; 63
     11c:	cf ef       	ldi	r28, 0xFF	; 255
     11e:	d0 e1       	ldi	r29, 0x10	; 16
     120:	de bf       	out	0x3e, r29	; 62
     122:	cd bf       	out	0x3d, r28	; 61

00000124 <__do_copy_data>:
     124:	11 e0       	ldi	r17, 0x01	; 1
     126:	a0 e0       	ldi	r26, 0x00	; 0
     128:	b1 e0       	ldi	r27, 0x01	; 1
     12a:	ee e5       	ldi	r30, 0x5E	; 94
     12c:	fd e2       	ldi	r31, 0x2D	; 45
     12e:	00 e0       	ldi	r16, 0x00	; 0
     130:	0b bf       	out	0x3b, r16	; 59
     132:	02 c0       	rjmp	.+4      	; 0x138 <__do_copy_data+0x14>
     134:	07 90       	elpm	r0, Z+
     136:	0d 92       	st	X+, r0
     138:	a2 38       	cpi	r26, 0x82	; 130
     13a:	b1 07       	cpc	r27, r17
     13c:	d9 f7       	brne	.-10     	; 0x134 <__do_copy_data+0x10>

0000013e <__do_clear_bss>:
     13e:	22 e0       	ldi	r18, 0x02	; 2
     140:	a2 e8       	ldi	r26, 0x82	; 130
     142:	b1 e0       	ldi	r27, 0x01	; 1
     144:	01 c0       	rjmp	.+2      	; 0x148 <.do_clear_bss_start>

00000146 <.do_clear_bss_loop>:
     146:	1d 92       	st	X+, r1

00000148 <.do_clear_bss_start>:
     148:	a2 32       	cpi	r26, 0x22	; 34
     14a:	b2 07       	cpc	r27, r18
     14c:	e1 f7       	brne	.-8      	; 0x146 <.do_clear_bss_loop>
     14e:	0e 94 9d 12 	call	0x253a	; 0x253a <main>
     152:	0c 94 ad 16 	jmp	0x2d5a	; 0x2d5a <_exit>

00000156 <__bad_interrupt>:
     156:	54 cf       	rjmp	.-344    	; 0x0 <__vectors>

00000158 <stdio_putchar>:
     158:	1f 93       	push	r17
     15a:	18 2f       	mov	r17, r24
     15c:	8a 30       	cpi	r24, 0x0A	; 10
     15e:	11 f4       	brne	.+4      	; 0x164 <stdio_putchar+0xc>
     160:	8d e0       	ldi	r24, 0x0D	; 13
     162:	fa df       	rcall	.-12     	; 0x158 <stdio_putchar>
     164:	5d 9b       	sbis	0x0b, 5	; 11
     166:	fe cf       	rjmp	.-4      	; 0x164 <stdio_putchar+0xc>
     168:	1c b9       	out	0x0c, r17	; 12
     16a:	80 e0       	ldi	r24, 0x00	; 0
     16c:	90 e0       	ldi	r25, 0x00	; 0
     16e:	1f 91       	pop	r17
     170:	08 95       	ret

00000172 <stdio_getchar>:
     172:	1f 93       	push	r17
     174:	bc 01       	movw	r22, r24
     176:	5f 9b       	sbis	0x0b, 7	; 11
     178:	fe cf       	rjmp	.-4      	; 0x176 <stdio_getchar+0x4>
     17a:	1c b1       	in	r17, 0x0c	; 12
     17c:	81 2f       	mov	r24, r17
     17e:	ec df       	rcall	.-40     	; 0x158 <stdio_putchar>
     180:	81 2f       	mov	r24, r17
     182:	90 e0       	ldi	r25, 0x00	; 0
     184:	1f 91       	pop	r17
     186:	08 95       	ret

00000188 <DIO_fpt>:
     188:	38 2f       	mov	r19, r24
     18a:	84 30       	cpi	r24, 0x04	; 4
     18c:	10 f0       	brcs	.+4      	; 0x192 <DIO_fpt+0xa>
     18e:	81 e0       	ldi	r24, 0x01	; 1
     190:	08 95       	ret
     192:	48 30       	cpi	r20, 0x08	; 8
     194:	10 f0       	brcs	.+4      	; 0x19a <DIO_fpt+0x12>
     196:	82 e0       	ldi	r24, 0x02	; 2
     198:	08 95       	ret
     19a:	82 2f       	mov	r24, r18
     19c:	90 e0       	ldi	r25, 0x00	; 0
     19e:	02 c0       	rjmp	.+4      	; 0x1a4 <DIO_fpt+0x1c>
     1a0:	88 0f       	add	r24, r24
     1a2:	99 1f       	adc	r25, r25
     1a4:	4a 95       	dec	r20
     1a6:	e2 f7       	brpl	.-8      	; 0x1a0 <DIO_fpt+0x18>
     1a8:	28 2f       	mov	r18, r24
     1aa:	31 30       	cpi	r19, 0x01	; 1
     1ac:	89 f0       	breq	.+34     	; 0x1d0 <DIO_fpt+0x48>
     1ae:	31 30       	cpi	r19, 0x01	; 1
     1b0:	28 f0       	brcs	.+10     	; 0x1bc <DIO_fpt+0x34>
     1b2:	32 30       	cpi	r19, 0x02	; 2
     1b4:	b9 f0       	breq	.+46     	; 0x1e4 <DIO_fpt+0x5c>
     1b6:	33 30       	cpi	r19, 0x03	; 3
     1b8:	f1 f4       	brne	.+60     	; 0x1f6 <DIO_fpt+0x6e>
     1ba:	1f c0       	rjmp	.+62     	; 0x1fa <DIO_fpt+0x72>
     1bc:	8a b3       	in	r24, 0x1a	; 26
     1be:	86 2b       	or	r24, r22
     1c0:	8a bb       	out	0x1a, r24	; 26
     1c2:	8b b3       	in	r24, 0x1b	; 27
     1c4:	26 23       	and	r18, r22
     1c6:	60 95       	com	r22
     1c8:	86 23       	and	r24, r22
     1ca:	28 2b       	or	r18, r24
     1cc:	2b bb       	out	0x1b, r18	; 27
     1ce:	13 c0       	rjmp	.+38     	; 0x1f6 <DIO_fpt+0x6e>
     1d0:	87 b3       	in	r24, 0x17	; 23
     1d2:	86 2b       	or	r24, r22
     1d4:	87 bb       	out	0x17, r24	; 23
     1d6:	88 b3       	in	r24, 0x18	; 24
     1d8:	26 23       	and	r18, r22
     1da:	60 95       	com	r22
     1dc:	86 23       	and	r24, r22
     1de:	28 2b       	or	r18, r24
     1e0:	28 bb       	out	0x18, r18	; 24
     1e2:	09 c0       	rjmp	.+18     	; 0x1f6 <DIO_fpt+0x6e>
     1e4:	84 b3       	in	r24, 0x14	; 20
     1e6:	86 2b       	or	r24, r22
     1e8:	84 bb       	out	0x14, r24	; 20
     1ea:	85 b3       	in	r24, 0x15	; 21
     1ec:	26 23       	and	r18, r22
     1ee:	60 95       	com	r22
     1f0:	86 23       	and	r24, r22
     1f2:	28 2b       	or	r18, r24
     1f4:	25 bb       	out	0x15, r18	; 21
     1f6:	80 e0       	ldi	r24, 0x00	; 0
     1f8:	08 95       	ret
     1fa:	82 b1       	in	r24, 0x02	; 2
     1fc:	86 2b       	or	r24, r22
     1fe:	82 b9       	out	0x02, r24	; 2
     200:	83 b1       	in	r24, 0x03	; 3
     202:	26 23       	and	r18, r22
     204:	60 95       	com	r22
     206:	86 23       	and	r24, r22
     208:	28 2b       	or	r18, r24
     20a:	23 b9       	out	0x03, r18	; 3
     20c:	80 e0       	ldi	r24, 0x00	; 0
     20e:	08 95       	ret

00000210 <DIO_fgt>:
     210:	f9 01       	movw	r30, r18
     212:	84 30       	cpi	r24, 0x04	; 4
     214:	10 f0       	brcs	.+4      	; 0x21a <DIO_fgt+0xa>
     216:	81 e0       	ldi	r24, 0x01	; 1
     218:	08 95       	ret
     21a:	48 30       	cpi	r20, 0x08	; 8
     21c:	10 f0       	brcs	.+4      	; 0x222 <DIO_fgt+0x12>
     21e:	82 e0       	ldi	r24, 0x02	; 2
     220:	08 95       	ret
     222:	81 30       	cpi	r24, 0x01	; 1
     224:	b9 f0       	breq	.+46     	; 0x254 <DIO_fgt+0x44>
     226:	81 30       	cpi	r24, 0x01	; 1
     228:	28 f0       	brcs	.+10     	; 0x234 <DIO_fgt+0x24>
     22a:	82 30       	cpi	r24, 0x02	; 2
     22c:	19 f1       	breq	.+70     	; 0x274 <DIO_fgt+0x64>
     22e:	83 30       	cpi	r24, 0x03	; 3
     230:	c1 f5       	brne	.+112    	; 0x2a2 <DIO_fgt+0x92>
     232:	39 c0       	rjmp	.+114    	; 0x2a6 <DIO_fgt+0x96>
     234:	8a b3       	in	r24, 0x1a	; 26
     236:	88 23       	and	r24, r24
     238:	29 f0       	breq	.+10     	; 0x244 <DIO_fgt+0x34>
     23a:	9a b3       	in	r25, 0x1a	; 26
     23c:	86 2f       	mov	r24, r22
     23e:	80 95       	com	r24
     240:	89 23       	and	r24, r25
     242:	05 c0       	rjmp	.+10     	; 0x24e <DIO_fgt+0x3e>
     244:	8a b3       	in	r24, 0x1a	; 26
     246:	88 23       	and	r24, r24
     248:	19 f4       	brne	.+6      	; 0x250 <DIO_fgt+0x40>
     24a:	86 2f       	mov	r24, r22
     24c:	80 95       	com	r24
     24e:	8a bb       	out	0x1a, r24	; 26
     250:	89 b3       	in	r24, 0x19	; 25
     252:	1f c0       	rjmp	.+62     	; 0x292 <DIO_fgt+0x82>
     254:	87 b3       	in	r24, 0x17	; 23
     256:	88 23       	and	r24, r24
     258:	29 f0       	breq	.+10     	; 0x264 <DIO_fgt+0x54>
     25a:	97 b3       	in	r25, 0x17	; 23
     25c:	86 2f       	mov	r24, r22
     25e:	80 95       	com	r24
     260:	89 23       	and	r24, r25
     262:	05 c0       	rjmp	.+10     	; 0x26e <DIO_fgt+0x5e>
     264:	87 b3       	in	r24, 0x17	; 23
     266:	88 23       	and	r24, r24
     268:	19 f4       	brne	.+6      	; 0x270 <DIO_fgt+0x60>
     26a:	86 2f       	mov	r24, r22
     26c:	80 95       	com	r24
     26e:	87 bb       	out	0x17, r24	; 23
     270:	86 b3       	in	r24, 0x16	; 22
     272:	0f c0       	rjmp	.+30     	; 0x292 <DIO_fgt+0x82>
     274:	84 b3       	in	r24, 0x14	; 20
     276:	88 23       	and	r24, r24
     278:	29 f0       	breq	.+10     	; 0x284 <DIO_fgt+0x74>
     27a:	94 b3       	in	r25, 0x14	; 20
     27c:	86 2f       	mov	r24, r22
     27e:	80 95       	com	r24
     280:	89 23       	and	r24, r25
     282:	05 c0       	rjmp	.+10     	; 0x28e <DIO_fgt+0x7e>
     284:	84 b3       	in	r24, 0x14	; 20
     286:	88 23       	and	r24, r24
     288:	19 f4       	brne	.+6      	; 0x290 <DIO_fgt+0x80>
     28a:	86 2f       	mov	r24, r22
     28c:	80 95       	com	r24
     28e:	84 bb       	out	0x14, r24	; 20
     290:	83 b3       	in	r24, 0x13	; 19
     292:	86 23       	and	r24, r22
     294:	90 e0       	ldi	r25, 0x00	; 0
     296:	02 c0       	rjmp	.+4      	; 0x29c <DIO_fgt+0x8c>
     298:	95 95       	asr	r25
     29a:	87 95       	ror	r24
     29c:	4a 95       	dec	r20
     29e:	e2 f7       	brpl	.-8      	; 0x298 <DIO_fgt+0x88>
     2a0:	80 83       	st	Z, r24
     2a2:	80 e0       	ldi	r24, 0x00	; 0
     2a4:	08 95       	ret
     2a6:	82 b1       	in	r24, 0x02	; 2
     2a8:	88 23       	and	r24, r24
     2aa:	29 f0       	breq	.+10     	; 0x2b6 <DIO_fgt+0xa6>
     2ac:	92 b1       	in	r25, 0x02	; 2
     2ae:	86 2f       	mov	r24, r22
     2b0:	80 95       	com	r24
     2b2:	89 23       	and	r24, r25
     2b4:	05 c0       	rjmp	.+10     	; 0x2c0 <DIO_fgt+0xb0>
     2b6:	82 b1       	in	r24, 0x02	; 2
     2b8:	88 23       	and	r24, r24
     2ba:	19 f4       	brne	.+6      	; 0x2c2 <DIO_fgt+0xb2>
     2bc:	86 2f       	mov	r24, r22
     2be:	80 95       	com	r24
     2c0:	82 b9       	out	0x02, r24	; 2
     2c2:	81 b1       	in	r24, 0x01	; 1
     2c4:	86 23       	and	r24, r22
     2c6:	90 e0       	ldi	r25, 0x00	; 0
     2c8:	02 c0       	rjmp	.+4      	; 0x2ce <DIO_fgt+0xbe>
     2ca:	95 95       	asr	r25
     2cc:	87 95       	ror	r24
     2ce:	4a 95       	dec	r20
     2d0:	e2 f7       	brpl	.-8      	; 0x2ca <DIO_fgt+0xba>
     2d2:	80 83       	st	Z, r24
     2d4:	80 e0       	ldi	r24, 0x00	; 0
     2d6:	08 95       	ret

000002d8 <HMI_Transceiver_get>:
     2d8:	df 92       	push	r13
     2da:	ef 92       	push	r14
     2dc:	ff 92       	push	r15
     2de:	0f 93       	push	r16
     2e0:	1f 93       	push	r17
     2e2:	cf 93       	push	r28
     2e4:	df 93       	push	r29
     2e6:	08 2f       	mov	r16, r24
     2e8:	d6 2e       	mov	r13, r22
     2ea:	e7 2e       	mov	r14, r23
     2ec:	81 32       	cpi	r24, 0x21	; 33
     2ee:	10 f0       	brcs	.+4      	; 0x2f4 <HMI_Transceiver_get+0x1c>
     2f0:	81 e0       	ldi	r24, 0x01	; 1
     2f2:	2a c0       	rjmp	.+84     	; 0x348 <HMI_Transceiver_get+0x70>
     2f4:	0e 94 50 0d 	call	0x1aa0	; 0x1aa0 <PC_getchar>
     2f8:	8b 3a       	cpi	r24, 0xAB	; 171
     2fa:	29 f5       	brne	.+74     	; 0x346 <HMI_Transceiver_get+0x6e>
     2fc:	0e 94 50 0d 	call	0x1aa0	; 0x1aa0 <PC_getchar>
     300:	8b 3a       	cpi	r24, 0xAB	; 171
     302:	09 f5       	brne	.+66     	; 0x346 <HMI_Transceiver_get+0x6e>
     304:	0e 94 50 0d 	call	0x1aa0	; 0x1aa0 <PC_getchar>
     308:	8b 3a       	cpi	r24, 0xAB	; 171
     30a:	e9 f4       	brne	.+58     	; 0x346 <HMI_Transceiver_get+0x6e>
     30c:	0e 94 50 0d 	call	0x1aa0	; 0x1aa0 <PC_getchar>
     310:	f8 2e       	mov	r15, r24
     312:	18 2f       	mov	r17, r24
     314:	8d 2d       	mov	r24, r13
     316:	9e 2d       	mov	r25, r14
     318:	9c 01       	movw	r18, r24
     31a:	e9 01       	movw	r28, r18
     31c:	04 c0       	rjmp	.+8      	; 0x326 <HMI_Transceiver_get+0x4e>
     31e:	0e 94 50 0d 	call	0x1aa0	; 0x1aa0 <PC_getchar>
     322:	89 93       	st	Y+, r24
     324:	18 0f       	add	r17, r24
     326:	9e 01       	movw	r18, r28
     328:	2d 19       	sub	r18, r13
     32a:	20 17       	cp	r18, r16
     32c:	c0 f3       	brcs	.-16     	; 0x31e <HMI_Transceiver_get+0x46>
     32e:	0e 94 50 0d 	call	0x1aa0	; 0x1aa0 <PC_getchar>
     332:	f0 16       	cp	r15, r16
     334:	11 f0       	breq	.+4      	; 0x33a <HMI_Transceiver_get+0x62>
     336:	83 e0       	ldi	r24, 0x03	; 3
     338:	07 c0       	rjmp	.+14     	; 0x348 <HMI_Transceiver_get+0x70>
     33a:	81 17       	cp	r24, r17
     33c:	11 f4       	brne	.+4      	; 0x342 <HMI_Transceiver_get+0x6a>
     33e:	80 e0       	ldi	r24, 0x00	; 0
     340:	03 c0       	rjmp	.+6      	; 0x348 <HMI_Transceiver_get+0x70>
     342:	84 e0       	ldi	r24, 0x04	; 4
     344:	01 c0       	rjmp	.+2      	; 0x348 <HMI_Transceiver_get+0x70>
     346:	82 e0       	ldi	r24, 0x02	; 2
     348:	df 91       	pop	r29
     34a:	cf 91       	pop	r28
     34c:	1f 91       	pop	r17
     34e:	0f 91       	pop	r16
     350:	ff 90       	pop	r15
     352:	ef 90       	pop	r14
     354:	df 90       	pop	r13
     356:	08 95       	ret

00000358 <HMI_Structure_get>:
     358:	af 92       	push	r10
     35a:	bf 92       	push	r11
     35c:	cf 92       	push	r12
     35e:	df 92       	push	r13
     360:	ef 92       	push	r14
     362:	ff 92       	push	r15
     364:	0f 93       	push	r16
     366:	1f 93       	push	r17
     368:	cf 93       	push	r28
     36a:	df 93       	push	r29
     36c:	18 2f       	mov	r17, r24
     36e:	09 2f       	mov	r16, r25
     370:	e6 2e       	mov	r14, r22
     372:	b4 2e       	mov	r11, r20
     374:	a5 2e       	mov	r10, r21
     376:	2f ef       	ldi	r18, 0xFF	; 255
     378:	62 17       	cp	r22, r18
     37a:	11 f4       	brne	.+4      	; 0x380 <HMI_Structure_get+0x28>
     37c:	81 e0       	ldi	r24, 0x01	; 1
     37e:	45 c0       	rjmp	.+138    	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
     380:	0e 94 50 0d 	call	0x1aa0	; 0x1aa0 <PC_getchar>
     384:	8b 3a       	cpi	r24, 0xAB	; 171
     386:	09 f0       	breq	.+2      	; 0x38a <HMI_Structure_get+0x32>
     388:	3f c0       	rjmp	.+126    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     38a:	0e 94 50 0d 	call	0x1aa0	; 0x1aa0 <PC_getchar>
     38e:	8b 3a       	cpi	r24, 0xAB	; 171
     390:	d9 f5       	brne	.+118    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     392:	0e 94 50 0d 	call	0x1aa0	; 0x1aa0 <PC_getchar>
     396:	8b 3a       	cpi	r24, 0xAB	; 171
     398:	b9 f5       	brne	.+110    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     39a:	0e 94 50 0d 	call	0x1aa0	; 0x1aa0 <PC_getchar>
     39e:	f8 2e       	mov	r15, r24
     3a0:	0e 94 50 0d 	call	0x1aa0	; 0x1aa0 <PC_getchar>
     3a4:	c8 2e       	mov	r12, r24
     3a6:	a1 2f       	mov	r26, r17
     3a8:	b0 2f       	mov	r27, r16
     3aa:	fd 01       	movw	r30, r26
     3ac:	01 90       	ld	r0, Z+
     3ae:	00 20       	and	r0, r0
     3b0:	e9 f7       	brne	.-6      	; 0x3ac <HMI_Structure_get+0x54>
     3b2:	31 97       	sbiw	r30, 0x01	; 1
     3b4:	de 2e       	mov	r13, r30
     3b6:	d1 1a       	sub	r13, r17
     3b8:	21 2f       	mov	r18, r17
     3ba:	30 2f       	mov	r19, r16
     3bc:	c9 01       	movw	r24, r18
     3be:	ec 01       	movw	r28, r24
     3c0:	0c 2d       	mov	r16, r12
     3c2:	10 e0       	ldi	r17, 0x00	; 0
     3c4:	05 c0       	rjmp	.+10     	; 0x3d0 <HMI_Structure_get+0x78>
     3c6:	0e 94 50 0d 	call	0x1aa0	; 0x1aa0 <PC_getchar>
     3ca:	89 93       	st	Y+, r24
     3cc:	08 0f       	add	r16, r24
     3ce:	1f 5f       	subi	r17, 0xFF	; 255
     3d0:	1d 15       	cp	r17, r13
     3d2:	c8 f3       	brcs	.-14     	; 0x3c6 <HMI_Structure_get+0x6e>
     3d4:	8b 2d       	mov	r24, r11
     3d6:	9a 2d       	mov	r25, r10
     3d8:	9c 01       	movw	r18, r24
     3da:	e9 01       	movw	r28, r18
     3dc:	04 c0       	rjmp	.+8      	; 0x3e6 <HMI_Structure_get+0x8e>
     3de:	0e 94 50 0d 	call	0x1aa0	; 0x1aa0 <PC_getchar>
     3e2:	89 93       	st	Y+, r24
     3e4:	08 0f       	add	r16, r24
     3e6:	9e 01       	movw	r18, r28
     3e8:	2b 19       	sub	r18, r11
     3ea:	2e 15       	cp	r18, r14
     3ec:	c0 f3       	brcs	.-16     	; 0x3de <HMI_Structure_get+0x86>
     3ee:	0e 94 50 0d 	call	0x1aa0	; 0x1aa0 <PC_getchar>
     3f2:	fc 18       	sub	r15, r12
     3f4:	fe 14       	cp	r15, r14
     3f6:	11 f0       	breq	.+4      	; 0x3fc <HMI_Structure_get+0xa4>
     3f8:	83 e0       	ldi	r24, 0x03	; 3
     3fa:	07 c0       	rjmp	.+14     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
     3fc:	80 17       	cp	r24, r16
     3fe:	11 f4       	brne	.+4      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
     400:	80 e0       	ldi	r24, 0x00	; 0
     402:	03 c0       	rjmp	.+6      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
     404:	84 e0       	ldi	r24, 0x04	; 4
     406:	01 c0       	rjmp	.+2      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
     408:	82 e0       	ldi	r24, 0x02	; 2
     40a:	df 91       	pop	r29
     40c:	cf 91       	pop	r28
     40e:	1f 91       	pop	r17
     410:	0f 91       	pop	r16
     412:	ff 90       	pop	r15
     414:	ef 90       	pop	r14
     416:	df 90       	pop	r13
     418:	cf 90       	pop	r12
     41a:	bf 90       	pop	r11
     41c:	af 90       	pop	r10
     41e:	08 95       	ret

00000420 <HMI_Structure_put>:
     420:	af 92       	push	r10
     422:	bf 92       	push	r11
     424:	cf 92       	push	r12
     426:	df 92       	push	r13
     428:	ef 92       	push	r14
     42a:	ff 92       	push	r15
     42c:	0f 93       	push	r16
     42e:	1f 93       	push	r17
     430:	cf 93       	push	r28
     432:	df 93       	push	r29
     434:	d8 2e       	mov	r13, r24
     436:	c9 2e       	mov	r12, r25
     438:	e6 2e       	mov	r14, r22
     43a:	b4 2e       	mov	r11, r20
     43c:	a5 2e       	mov	r10, r21
     43e:	8b eb       	ldi	r24, 0xBB	; 187
     440:	0e 94 4c 0d 	call	0x1a98	; 0x1a98 <PC_putchar>
     444:	8b eb       	ldi	r24, 0xBB	; 187
     446:	0e 94 4c 0d 	call	0x1a98	; 0x1a98 <PC_putchar>
     44a:	8b eb       	ldi	r24, 0xBB	; 187
     44c:	0e 94 4c 0d 	call	0x1a98	; 0x1a98 <PC_putchar>
     450:	ed 2d       	mov	r30, r13
     452:	fc 2d       	mov	r31, r12
     454:	ef 01       	movw	r28, r30
     456:	09 90       	ld	r0, Y+
     458:	00 20       	and	r0, r0
     45a:	e9 f7       	brne	.-6      	; 0x456 <HMI_Structure_put+0x36>
     45c:	21 97       	sbiw	r28, 0x01	; 1
     45e:	ce 1b       	sub	r28, r30
     460:	df 0b       	sbc	r29, r31
     462:	0c 2f       	mov	r16, r28
     464:	8c 2f       	mov	r24, r28
     466:	90 e0       	ldi	r25, 0x00	; 0
     468:	01 96       	adiw	r24, 0x01	; 1
     46a:	8e 0d       	add	r24, r14
     46c:	91 1d       	adc	r25, r1
     46e:	8f 3f       	cpi	r24, 0xFF	; 255
     470:	91 05       	cpc	r25, r1
     472:	19 f0       	breq	.+6      	; 0x47a <HMI_Structure_put+0x5a>
     474:	14 f0       	brlt	.+4      	; 0x47a <HMI_Structure_put+0x5a>
     476:	81 e0       	ldi	r24, 0x01	; 1
     478:	2c c0       	rjmp	.+88     	; 0x4d2 <HMI_Structure_put+0xb2>
     47a:	0f 5f       	subi	r16, 0xFF	; 255
     47c:	10 2f       	mov	r17, r16
     47e:	1e 0d       	add	r17, r14
     480:	01 50       	subi	r16, 0x01	; 1
     482:	81 2f       	mov	r24, r17
     484:	0e 94 4c 0d 	call	0x1a98	; 0x1a98 <PC_putchar>
     488:	8c 2f       	mov	r24, r28
     48a:	0e 94 4c 0d 	call	0x1a98	; 0x1a98 <PC_putchar>
     48e:	f1 2e       	mov	r15, r17
     490:	f0 0e       	add	r15, r16
     492:	2d 2d       	mov	r18, r13
     494:	3c 2d       	mov	r19, r12
     496:	c9 01       	movw	r24, r18
     498:	ec 01       	movw	r28, r24
     49a:	10 e0       	ldi	r17, 0x00	; 0
     49c:	06 c0       	rjmp	.+12     	; 0x4aa <HMI_Structure_put+0x8a>
     49e:	88 81       	ld	r24, Y
     4a0:	0e 94 4c 0d 	call	0x1a98	; 0x1a98 <PC_putchar>
     4a4:	89 91       	ld	r24, Y+
     4a6:	f8 0e       	add	r15, r24
     4a8:	1f 5f       	subi	r17, 0xFF	; 255
     4aa:	10 17       	cp	r17, r16
     4ac:	c0 f3       	brcs	.-16     	; 0x49e <HMI_Structure_put+0x7e>
     4ae:	8b 2d       	mov	r24, r11
     4b0:	9a 2d       	mov	r25, r10
     4b2:	9c 01       	movw	r18, r24
     4b4:	e9 01       	movw	r28, r18
     4b6:	00 e0       	ldi	r16, 0x00	; 0
     4b8:	06 c0       	rjmp	.+12     	; 0x4c6 <HMI_Structure_put+0xa6>
     4ba:	88 81       	ld	r24, Y
     4bc:	0e 94 4c 0d 	call	0x1a98	; 0x1a98 <PC_putchar>
     4c0:	89 91       	ld	r24, Y+
     4c2:	f8 0e       	add	r15, r24
     4c4:	0f 5f       	subi	r16, 0xFF	; 255
     4c6:	0e 15       	cp	r16, r14
     4c8:	c0 f3       	brcs	.-16     	; 0x4ba <HMI_Structure_put+0x9a>
     4ca:	8f 2d       	mov	r24, r15
     4cc:	0e 94 4c 0d 	call	0x1a98	; 0x1a98 <PC_putchar>
     4d0:	80 e0       	ldi	r24, 0x00	; 0
     4d2:	df 91       	pop	r29
     4d4:	cf 91       	pop	r28
     4d6:	1f 91       	pop	r17
     4d8:	0f 91       	pop	r16
     4da:	ff 90       	pop	r15
     4dc:	ef 90       	pop	r14
     4de:	df 90       	pop	r13
     4e0:	cf 90       	pop	r12
     4e2:	bf 90       	pop	r11
     4e4:	af 90       	pop	r10
     4e6:	08 95       	ret

000004e8 <HMI_Transceiver_put>:
     4e8:	ef 92       	push	r14
     4ea:	ff 92       	push	r15
     4ec:	0f 93       	push	r16
     4ee:	1f 93       	push	r17
     4f0:	cf 93       	push	r28
     4f2:	df 93       	push	r29
     4f4:	08 2f       	mov	r16, r24
     4f6:	7b 01       	movw	r14, r22
     4f8:	81 32       	cpi	r24, 0x21	; 33
     4fa:	10 f0       	brcs	.+4      	; 0x500 <HMI_Transceiver_put+0x18>
     4fc:	81 e0       	ldi	r24, 0x01	; 1
     4fe:	1c c0       	rjmp	.+56     	; 0x538 <HMI_Transceiver_put+0x50>
     500:	8a ea       	ldi	r24, 0xAA	; 170
     502:	0e 94 4c 0d 	call	0x1a98	; 0x1a98 <PC_putchar>
     506:	8a ea       	ldi	r24, 0xAA	; 170
     508:	0e 94 4c 0d 	call	0x1a98	; 0x1a98 <PC_putchar>
     50c:	8a ea       	ldi	r24, 0xAA	; 170
     50e:	0e 94 4c 0d 	call	0x1a98	; 0x1a98 <PC_putchar>
     512:	80 2f       	mov	r24, r16
     514:	0e 94 4c 0d 	call	0x1a98	; 0x1a98 <PC_putchar>
     518:	10 2f       	mov	r17, r16
     51a:	e7 01       	movw	r28, r14
     51c:	05 c0       	rjmp	.+10     	; 0x528 <HMI_Transceiver_put+0x40>
     51e:	88 81       	ld	r24, Y
     520:	0e 94 4c 0d 	call	0x1a98	; 0x1a98 <PC_putchar>
     524:	89 91       	ld	r24, Y+
     526:	18 0f       	add	r17, r24
     528:	9e 01       	movw	r18, r28
     52a:	2e 19       	sub	r18, r14
     52c:	20 17       	cp	r18, r16
     52e:	b8 f3       	brcs	.-18     	; 0x51e <HMI_Transceiver_put+0x36>
     530:	81 2f       	mov	r24, r17
     532:	0e 94 4c 0d 	call	0x1a98	; 0x1a98 <PC_putchar>
     536:	80 e0       	ldi	r24, 0x00	; 0
     538:	df 91       	pop	r29
     53a:	cf 91       	pop	r28
     53c:	1f 91       	pop	r17
     53e:	0f 91       	pop	r16
     540:	ff 90       	pop	r15
     542:	ef 90       	pop	r14
     544:	08 95       	ret

00000546 <ASA_M128_set>:
     546:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
     54a:	91 e1       	ldi	r25, 0x11	; 17
     54c:	99 b9       	out	0x09, r25	; 9
     54e:	8a b1       	in	r24, 0x0a	; 10
     550:	88 61       	ori	r24, 0x18	; 24
     552:	8a b9       	out	0x0a, r24	; 10
     554:	e5 e9       	ldi	r30, 0x95	; 149
     556:	f0 e0       	ldi	r31, 0x00	; 0
     558:	80 81       	ld	r24, Z
     55a:	86 60       	ori	r24, 0x06	; 6
     55c:	80 83       	st	Z, r24
     55e:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
     562:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
     566:	ea e9       	ldi	r30, 0x9A	; 154
     568:	f0 e0       	ldi	r31, 0x00	; 0
     56a:	80 81       	ld	r24, Z
     56c:	88 61       	ori	r24, 0x18	; 24
     56e:	80 83       	st	Z, r24
     570:	ed e9       	ldi	r30, 0x9D	; 157
     572:	f0 e0       	ldi	r31, 0x00	; 0
     574:	80 81       	ld	r24, Z
     576:	86 60       	ori	r24, 0x06	; 6
     578:	80 83       	st	Z, r24
     57a:	80 e0       	ldi	r24, 0x00	; 0
     57c:	91 e0       	ldi	r25, 0x01	; 1
     57e:	90 93 1f 02 	sts	0x021F, r25	; 0x80021f <__iob+0x3>
     582:	80 93 1e 02 	sts	0x021E, r24	; 0x80021e <__iob+0x2>
     586:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <__iob+0x1>
     58a:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <__iob>
     58e:	87 b3       	in	r24, 0x17	; 23
     590:	80 6e       	ori	r24, 0xE0	; 224
     592:	87 bb       	out	0x17, r24	; 23
     594:	80 e0       	ldi	r24, 0x00	; 0
     596:	0e 94 ef 0c 	call	0x19de	; 0x19de <ASA_ID_set>
     59a:	ef d1       	rcall	.+990    	; 0x97a <timer1_set>
     59c:	78 94       	sei
     59e:	80 e0       	ldi	r24, 0x00	; 0
     5a0:	08 95       	ret

000005a2 <ASA_7S00_get>:
     5a2:	cf 93       	push	r28
     5a4:	df 93       	push	r29
     5a6:	e9 01       	movw	r28, r18
     5a8:	88 30       	cpi	r24, 0x08	; 8
     5aa:	10 f0       	brcs	.+4      	; 0x5b0 <ASA_7S00_get+0xe>
     5ac:	81 e0       	ldi	r24, 0x01	; 1
     5ae:	34 c0       	rjmp	.+104    	; 0x618 <ASA_7S00_get+0x76>
     5b0:	64 30       	cpi	r22, 0x04	; 4
     5b2:	68 f0       	brcs	.+26     	; 0x5ce <ASA_7S00_get+0x2c>
     5b4:	68 3c       	cpi	r22, 0xC8	; 200
     5b6:	11 f0       	breq	.+4      	; 0x5bc <ASA_7S00_get+0x1a>
     5b8:	82 e0       	ldi	r24, 0x02	; 2
     5ba:	2e c0       	rjmp	.+92     	; 0x618 <ASA_7S00_get+0x76>
     5bc:	41 30       	cpi	r20, 0x01	; 1
     5be:	59 f5       	brne	.+86     	; 0x616 <ASA_7S00_get+0x74>
     5c0:	e8 2f       	mov	r30, r24
     5c2:	f0 e0       	ldi	r31, 0x00	; 0
     5c4:	ec 5e       	subi	r30, 0xEC	; 236
     5c6:	fd 4f       	sbci	r31, 0xFD	; 253
     5c8:	80 81       	ld	r24, Z
     5ca:	88 83       	st	Y, r24
     5cc:	22 c0       	rjmp	.+68     	; 0x612 <ASA_7S00_get+0x70>
     5ce:	70 e0       	ldi	r23, 0x00	; 0
     5d0:	9b 01       	movw	r18, r22
     5d2:	24 0f       	add	r18, r20
     5d4:	31 1d       	adc	r19, r1
     5d6:	a9 01       	movw	r20, r18
     5d8:	25 30       	cpi	r18, 0x05	; 5
     5da:	31 05       	cpc	r19, r1
     5dc:	e4 f4       	brge	.+56     	; 0x616 <ASA_7S00_get+0x74>
     5de:	a8 2f       	mov	r26, r24
     5e0:	b0 e0       	ldi	r27, 0x00	; 0
     5e2:	aa 0f       	add	r26, r26
     5e4:	bb 1f       	adc	r27, r27
     5e6:	aa 0f       	add	r26, r26
     5e8:	bb 1f       	adc	r27, r27
     5ea:	a6 0f       	add	r26, r22
     5ec:	b7 1f       	adc	r27, r23
     5ee:	ac 50       	subi	r26, 0x0C	; 12
     5f0:	be 4f       	sbci	r27, 0xFE	; 254
     5f2:	20 e0       	ldi	r18, 0x00	; 0
     5f4:	30 e0       	ldi	r19, 0x00	; 0
     5f6:	07 c0       	rjmp	.+14     	; 0x606 <ASA_7S00_get+0x64>
     5f8:	fe 01       	movw	r30, r28
     5fa:	e2 0f       	add	r30, r18
     5fc:	f3 1f       	adc	r31, r19
     5fe:	8d 91       	ld	r24, X+
     600:	80 83       	st	Z, r24
     602:	2f 5f       	subi	r18, 0xFF	; 255
     604:	3f 4f       	sbci	r19, 0xFF	; 255
     606:	c9 01       	movw	r24, r18
     608:	86 0f       	add	r24, r22
     60a:	97 1f       	adc	r25, r23
     60c:	84 17       	cp	r24, r20
     60e:	95 07       	cpc	r25, r21
     610:	9c f3       	brlt	.-26     	; 0x5f8 <ASA_7S00_get+0x56>
     612:	80 e0       	ldi	r24, 0x00	; 0
     614:	01 c0       	rjmp	.+2      	; 0x618 <ASA_7S00_get+0x76>
     616:	83 e0       	ldi	r24, 0x03	; 3
     618:	df 91       	pop	r29
     61a:	cf 91       	pop	r28
     61c:	08 95       	ret

0000061e <UART_7S00_Transfer>:
     61e:	af 92       	push	r10
     620:	bf 92       	push	r11
     622:	cf 92       	push	r12
     624:	df 92       	push	r13
     626:	ef 92       	push	r14
     628:	ff 92       	push	r15
     62a:	0f 93       	push	r16
     62c:	1f 93       	push	r17
     62e:	df 93       	push	r29
     630:	cf 93       	push	r28
     632:	cd b7       	in	r28, 0x3d	; 61
     634:	de b7       	in	r29, 0x3e	; 62
     636:	2d 97       	sbiw	r28, 0x0d	; 13
     638:	0f b6       	in	r0, 0x3f	; 63
     63a:	f8 94       	cli
     63c:	de bf       	out	0x3e, r29	; 62
     63e:	0f be       	out	0x3f, r0	; 63
     640:	cd bf       	out	0x3d, r28	; 61
     642:	e8 2e       	mov	r14, r24
     644:	de 01       	movw	r26, r28
     646:	12 96       	adiw	r26, 0x02	; 2
     648:	ee e0       	ldi	r30, 0x0E	; 14
     64a:	f1 e0       	ldi	r31, 0x01	; 1
     64c:	86 e0       	ldi	r24, 0x06	; 6
     64e:	01 90       	ld	r0, Z+
     650:	0d 92       	st	X+, r0
     652:	81 50       	subi	r24, 0x01	; 1
     654:	e1 f7       	brne	.-8      	; 0x64e <UART_7S00_Transfer+0x30>
     656:	2e 2d       	mov	r18, r14
     658:	30 e0       	ldi	r19, 0x00	; 0
     65a:	d9 01       	movw	r26, r18
     65c:	aa 0f       	add	r26, r26
     65e:	bb 1f       	adc	r27, r27
     660:	aa 0f       	add	r26, r26
     662:	bb 1f       	adc	r27, r27
     664:	ac 50       	subi	r26, 0x0C	; 12
     666:	be 4f       	sbci	r27, 0xFE	; 254
     668:	8c 91       	ld	r24, X
     66a:	e8 2f       	mov	r30, r24
     66c:	f0 e0       	ldi	r31, 0x00	; 0
     66e:	e8 54       	subi	r30, 0x48	; 72
     670:	ff 4f       	sbci	r31, 0xFF	; 255
     672:	44 91       	lpm	r20, Z
     674:	11 96       	adiw	r26, 0x01	; 1
     676:	8c 91       	ld	r24, X
     678:	11 97       	sbiw	r26, 0x01	; 1
     67a:	e8 2f       	mov	r30, r24
     67c:	f0 e0       	ldi	r31, 0x00	; 0
     67e:	e8 54       	subi	r30, 0x48	; 72
     680:	ff 4f       	sbci	r31, 0xFF	; 255
     682:	54 91       	lpm	r21, Z
     684:	f9 01       	movw	r30, r18
     686:	ee 0f       	add	r30, r30
     688:	ff 1f       	adc	r31, r31
     68a:	ee 0f       	add	r30, r30
     68c:	ff 1f       	adc	r31, r31
     68e:	ea 50       	subi	r30, 0x0A	; 10
     690:	fe 4f       	sbci	r31, 0xFE	; 254
     692:	e0 81       	ld	r30, Z
     694:	f0 e0       	ldi	r31, 0x00	; 0
     696:	e8 54       	subi	r30, 0x48	; 72
     698:	ff 4f       	sbci	r31, 0xFF	; 255
     69a:	74 91       	lpm	r23, Z
     69c:	13 96       	adiw	r26, 0x03	; 3
     69e:	8c 91       	ld	r24, X
     6a0:	90 e0       	ldi	r25, 0x00	; 0
     6a2:	88 54       	subi	r24, 0x48	; 72
     6a4:	9f 4f       	sbci	r25, 0xFF	; 255
     6a6:	fc 01       	movw	r30, r24
     6a8:	64 91       	lpm	r22, Z
     6aa:	e8 e0       	ldi	r30, 0x08	; 8
     6ac:	ce 2e       	mov	r12, r30
     6ae:	d1 2c       	mov	r13, r1
     6b0:	cc 0e       	add	r12, r28
     6b2:	dd 1e       	adc	r13, r29
     6b4:	86 e0       	ldi	r24, 0x06	; 6
     6b6:	f6 01       	movw	r30, r12
     6b8:	11 92       	st	Z+, r1
     6ba:	8a 95       	dec	r24
     6bc:	e9 f7       	brne	.-6      	; 0x6b8 <UART_7S00_Transfer+0x9a>
     6be:	2c 5e       	subi	r18, 0xEC	; 236
     6c0:	3d 4f       	sbci	r19, 0xFD	; 253
     6c2:	f9 01       	movw	r30, r18
     6c4:	20 81       	ld	r18, Z
     6c6:	92 2f       	mov	r25, r18
     6c8:	90 78       	andi	r25, 0x80	; 128
     6ca:	94 0f       	add	r25, r20
     6cc:	82 2f       	mov	r24, r18
     6ce:	88 70       	andi	r24, 0x08	; 8
     6d0:	88 0f       	add	r24, r24
     6d2:	88 0f       	add	r24, r24
     6d4:	88 0f       	add	r24, r24
     6d6:	98 0f       	add	r25, r24
     6d8:	90 93 f0 01 	sts	0x01F0, r25	; 0x8001f0 <_7S00_transmit_data>
     6dc:	82 2f       	mov	r24, r18
     6de:	80 74       	andi	r24, 0x40	; 64
     6e0:	88 0f       	add	r24, r24
     6e2:	92 2f       	mov	r25, r18
     6e4:	94 70       	andi	r25, 0x04	; 4
     6e6:	92 95       	swap	r25
     6e8:	90 7f       	andi	r25, 0xF0	; 240
     6ea:	89 0f       	add	r24, r25
     6ec:	85 0f       	add	r24, r21
     6ee:	80 93 f1 01 	sts	0x01F1, r24	; 0x8001f1 <_7S00_transmit_data+0x1>
     6f2:	82 2f       	mov	r24, r18
     6f4:	80 72       	andi	r24, 0x20	; 32
     6f6:	88 0f       	add	r24, r24
     6f8:	88 0f       	add	r24, r24
     6fa:	92 2f       	mov	r25, r18
     6fc:	92 70       	andi	r25, 0x02	; 2
     6fe:	92 95       	swap	r25
     700:	99 0f       	add	r25, r25
     702:	90 7e       	andi	r25, 0xE0	; 224
     704:	89 0f       	add	r24, r25
     706:	87 0f       	add	r24, r23
     708:	80 93 f2 01 	sts	0x01F2, r24	; 0x8001f2 <_7S00_transmit_data+0x2>
     70c:	82 2f       	mov	r24, r18
     70e:	80 71       	andi	r24, 0x10	; 16
     710:	88 0f       	add	r24, r24
     712:	88 0f       	add	r24, r24
     714:	88 0f       	add	r24, r24
     716:	21 70       	andi	r18, 0x01	; 1
     718:	22 95       	swap	r18
     71a:	22 0f       	add	r18, r18
     71c:	22 0f       	add	r18, r18
     71e:	20 7c       	andi	r18, 0xC0	; 192
     720:	82 0f       	add	r24, r18
     722:	86 0f       	add	r24, r22
     724:	80 93 f3 01 	sts	0x01F3, r24	; 0x8001f3 <_7S00_transmit_data+0x3>
     728:	19 82       	std	Y+1, r1	; 0x01
     72a:	8e 2d       	mov	r24, r14
     72c:	6d e7       	ldi	r22, 0x7D	; 125
     72e:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <ASA_putchar>
     732:	8e 2d       	mov	r24, r14
     734:	6d e7       	ldi	r22, 0x7D	; 125
     736:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <ASA_putchar>
     73a:	8e 2d       	mov	r24, r14
     73c:	6d e7       	ldi	r22, 0x7D	; 125
     73e:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <ASA_putchar>
     742:	8e 2d       	mov	r24, r14
     744:	61 e0       	ldi	r22, 0x01	; 1
     746:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <ASA_putchar>
     74a:	8e 2d       	mov	r24, r14
     74c:	64 e0       	ldi	r22, 0x04	; 4
     74e:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <ASA_putchar>
     752:	8e 2d       	mov	r24, r14
     754:	64 e0       	ldi	r22, 0x04	; 4
     756:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <ASA_putchar>
     75a:	8e 2d       	mov	r24, r14
     75c:	60 91 f0 01 	lds	r22, 0x01F0	; 0x8001f0 <_7S00_transmit_data>
     760:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <ASA_putchar>
     764:	10 91 f0 01 	lds	r17, 0x01F0	; 0x8001f0 <_7S00_transmit_data>
     768:	8e 2d       	mov	r24, r14
     76a:	60 91 f1 01 	lds	r22, 0x01F1	; 0x8001f1 <_7S00_transmit_data+0x1>
     76e:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <ASA_putchar>
     772:	f0 90 f1 01 	lds	r15, 0x01F1	; 0x8001f1 <_7S00_transmit_data+0x1>
     776:	8e 2d       	mov	r24, r14
     778:	60 91 f2 01 	lds	r22, 0x01F2	; 0x8001f2 <_7S00_transmit_data+0x2>
     77c:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <ASA_putchar>
     780:	00 91 f2 01 	lds	r16, 0x01F2	; 0x8001f2 <_7S00_transmit_data+0x2>
     784:	8e 2d       	mov	r24, r14
     786:	60 91 f3 01 	lds	r22, 0x01F3	; 0x8001f3 <_7S00_transmit_data+0x3>
     78a:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <ASA_putchar>
     78e:	1f 0d       	add	r17, r15
     790:	17 5f       	subi	r17, 0xF7	; 247
     792:	10 0f       	add	r17, r16
     794:	80 91 f3 01 	lds	r24, 0x01F3	; 0x8001f3 <_7S00_transmit_data+0x3>
     798:	18 0f       	add	r17, r24
     79a:	8e 2d       	mov	r24, r14
     79c:	61 2f       	mov	r22, r17
     79e:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <ASA_putchar>
     7a2:	86 01       	movw	r16, r12
     7a4:	5e 01       	movw	r10, r28
     7a6:	08 94       	sec
     7a8:	a1 1c       	adc	r10, r1
     7aa:	b1 1c       	adc	r11, r1
     7ac:	9e e0       	ldi	r25, 0x0E	; 14
     7ae:	c9 2e       	mov	r12, r25
     7b0:	d1 2c       	mov	r13, r1
     7b2:	cc 0e       	add	r12, r28
     7b4:	dd 1e       	adc	r13, r29
     7b6:	8e 2d       	mov	r24, r14
     7b8:	b5 01       	movw	r22, r10
     7ba:	0e 94 2e 0d 	call	0x1a5c	; 0x1a5c <ASA_getchar>
     7be:	89 81       	ldd	r24, Y+1	; 0x01
     7c0:	f8 01       	movw	r30, r16
     7c2:	81 93       	st	Z+, r24
     7c4:	8f 01       	movw	r16, r30
     7c6:	ec 15       	cp	r30, r12
     7c8:	fd 05       	cpc	r31, r13
     7ca:	a9 f7       	brne	.-22     	; 0x7b6 <UART_7S00_Transfer+0x198>
     7cc:	20 e0       	ldi	r18, 0x00	; 0
     7ce:	30 e0       	ldi	r19, 0x00	; 0
     7d0:	be 01       	movw	r22, r28
     7d2:	68 5f       	subi	r22, 0xF8	; 248
     7d4:	7f 4f       	sbci	r23, 0xFF	; 255
     7d6:	ae 01       	movw	r20, r28
     7d8:	4e 5f       	subi	r20, 0xFE	; 254
     7da:	5f 4f       	sbci	r21, 0xFF	; 255
     7dc:	fb 01       	movw	r30, r22
     7de:	e2 0f       	add	r30, r18
     7e0:	f3 1f       	adc	r31, r19
     7e2:	da 01       	movw	r26, r20
     7e4:	a2 0f       	add	r26, r18
     7e6:	b3 1f       	adc	r27, r19
     7e8:	90 81       	ld	r25, Z
     7ea:	8c 91       	ld	r24, X
     7ec:	98 17       	cp	r25, r24
     7ee:	11 f0       	breq	.+4      	; 0x7f4 <UART_7S00_Transfer+0x1d6>
     7f0:	84 e0       	ldi	r24, 0x04	; 4
     7f2:	06 c0       	rjmp	.+12     	; 0x800 <UART_7S00_Transfer+0x1e2>
     7f4:	2f 5f       	subi	r18, 0xFF	; 255
     7f6:	3f 4f       	sbci	r19, 0xFF	; 255
     7f8:	26 30       	cpi	r18, 0x06	; 6
     7fa:	31 05       	cpc	r19, r1
     7fc:	79 f7       	brne	.-34     	; 0x7dc <UART_7S00_Transfer+0x1be>
     7fe:	80 e0       	ldi	r24, 0x00	; 0
     800:	2d 96       	adiw	r28, 0x0d	; 13
     802:	0f b6       	in	r0, 0x3f	; 63
     804:	f8 94       	cli
     806:	de bf       	out	0x3e, r29	; 62
     808:	0f be       	out	0x3f, r0	; 63
     80a:	cd bf       	out	0x3d, r28	; 61
     80c:	cf 91       	pop	r28
     80e:	df 91       	pop	r29
     810:	1f 91       	pop	r17
     812:	0f 91       	pop	r16
     814:	ff 90       	pop	r15
     816:	ef 90       	pop	r14
     818:	df 90       	pop	r13
     81a:	cf 90       	pop	r12
     81c:	bf 90       	pop	r11
     81e:	af 90       	pop	r10
     820:	08 95       	ret

00000822 <ASA_7S00_put>:
     822:	cf 92       	push	r12
     824:	df 92       	push	r13
     826:	ff 92       	push	r15
     828:	0f 93       	push	r16
     82a:	1f 93       	push	r17
     82c:	cf 93       	push	r28
     82e:	df 93       	push	r29
     830:	08 2f       	mov	r16, r24
     832:	16 2f       	mov	r17, r22
     834:	f4 2e       	mov	r15, r20
     836:	69 01       	movw	r12, r18
     838:	0e 94 ef 0c 	call	0x19de	; 0x19de <ASA_ID_set>
     83c:	08 30       	cpi	r16, 0x08	; 8
     83e:	10 f0       	brcs	.+4      	; 0x844 <ASA_7S00_put+0x22>
     840:	11 e0       	ldi	r17, 0x01	; 1
     842:	48 c0       	rjmp	.+144    	; 0x8d4 <ASA_7S00_put+0xb2>
     844:	14 30       	cpi	r17, 0x04	; 4
     846:	10 f0       	brcs	.+4      	; 0x84c <ASA_7S00_put+0x2a>
     848:	12 e0       	ldi	r17, 0x02	; 2
     84a:	44 c0       	rjmp	.+136    	; 0x8d4 <ASA_7S00_put+0xb2>
     84c:	61 2f       	mov	r22, r17
     84e:	70 e0       	ldi	r23, 0x00	; 0
     850:	ab 01       	movw	r20, r22
     852:	4f 0d       	add	r20, r15
     854:	51 1d       	adc	r21, r1
     856:	45 30       	cpi	r20, 0x05	; 5
     858:	51 05       	cpc	r21, r1
     85a:	14 f0       	brlt	.+4      	; 0x860 <ASA_7S00_put+0x3e>
     85c:	13 e0       	ldi	r17, 0x03	; 3
     85e:	3a c0       	rjmp	.+116    	; 0x8d4 <ASA_7S00_put+0xb2>
     860:	20 e0       	ldi	r18, 0x00	; 0
     862:	30 e0       	ldi	r19, 0x00	; 0
     864:	eb 01       	movw	r28, r22
     866:	0e c0       	rjmp	.+28     	; 0x884 <ASA_7S00_put+0x62>
     868:	f6 01       	movw	r30, r12
     86a:	e2 0f       	add	r30, r18
     86c:	f3 1f       	adc	r31, r19
     86e:	e0 81       	ld	r30, Z
     870:	e0 36       	cpi	r30, 0x60	; 96
     872:	78 f5       	brcc	.+94     	; 0x8d2 <ASA_7S00_put+0xb0>
     874:	f0 e0       	ldi	r31, 0x00	; 0
     876:	e8 54       	subi	r30, 0x48	; 72
     878:	ff 4f       	sbci	r31, 0xFF	; 255
     87a:	e4 91       	lpm	r30, Z
     87c:	ef 3f       	cpi	r30, 0xFF	; 255
     87e:	49 f1       	breq	.+82     	; 0x8d2 <ASA_7S00_put+0xb0>
     880:	2f 5f       	subi	r18, 0xFF	; 255
     882:	3f 4f       	sbci	r19, 0xFF	; 255
     884:	c9 01       	movw	r24, r18
     886:	8c 0f       	add	r24, r28
     888:	9d 1f       	adc	r25, r29
     88a:	84 17       	cp	r24, r20
     88c:	95 07       	cpc	r25, r21
     88e:	64 f3       	brlt	.-40     	; 0x868 <ASA_7S00_put+0x46>
     890:	a0 2f       	mov	r26, r16
     892:	b0 e0       	ldi	r27, 0x00	; 0
     894:	aa 0f       	add	r26, r26
     896:	bb 1f       	adc	r27, r27
     898:	aa 0f       	add	r26, r26
     89a:	bb 1f       	adc	r27, r27
     89c:	a6 0f       	add	r26, r22
     89e:	b7 1f       	adc	r27, r23
     8a0:	ac 50       	subi	r26, 0x0C	; 12
     8a2:	be 4f       	sbci	r27, 0xFE	; 254
     8a4:	20 e0       	ldi	r18, 0x00	; 0
     8a6:	30 e0       	ldi	r19, 0x00	; 0
     8a8:	07 c0       	rjmp	.+14     	; 0x8b8 <ASA_7S00_put+0x96>
     8aa:	f6 01       	movw	r30, r12
     8ac:	e2 0f       	add	r30, r18
     8ae:	f3 1f       	adc	r31, r19
     8b0:	80 81       	ld	r24, Z
     8b2:	8d 93       	st	X+, r24
     8b4:	2f 5f       	subi	r18, 0xFF	; 255
     8b6:	3f 4f       	sbci	r19, 0xFF	; 255
     8b8:	c9 01       	movw	r24, r18
     8ba:	8c 0f       	add	r24, r28
     8bc:	9d 1f       	adc	r25, r29
     8be:	84 17       	cp	r24, r20
     8c0:	95 07       	cpc	r25, r21
     8c2:	9c f3       	brlt	.-26     	; 0x8aa <ASA_7S00_put+0x88>
     8c4:	80 2f       	mov	r24, r16
     8c6:	ab de       	rcall	.-682    	; 0x61e <UART_7S00_Transfer>
     8c8:	18 2f       	mov	r17, r24
     8ca:	80 e0       	ldi	r24, 0x00	; 0
     8cc:	0e 94 ef 0c 	call	0x19de	; 0x19de <ASA_ID_set>
     8d0:	01 c0       	rjmp	.+2      	; 0x8d4 <ASA_7S00_put+0xb2>
     8d2:	15 e0       	ldi	r17, 0x05	; 5
     8d4:	81 2f       	mov	r24, r17
     8d6:	df 91       	pop	r29
     8d8:	cf 91       	pop	r28
     8da:	1f 91       	pop	r17
     8dc:	0f 91       	pop	r16
     8de:	ff 90       	pop	r15
     8e0:	df 90       	pop	r13
     8e2:	cf 90       	pop	r12
     8e4:	08 95       	ret

000008e6 <ASA_7S00_set>:
     8e6:	df 92       	push	r13
     8e8:	ef 92       	push	r14
     8ea:	ff 92       	push	r15
     8ec:	0f 93       	push	r16
     8ee:	1f 93       	push	r17
     8f0:	f8 2e       	mov	r15, r24
     8f2:	d6 2e       	mov	r13, r22
     8f4:	14 2f       	mov	r17, r20
     8f6:	e2 2e       	mov	r14, r18
     8f8:	0e 94 ef 0c 	call	0x19de	; 0x19de <ASA_ID_set>
     8fc:	87 e0       	ldi	r24, 0x07	; 7
     8fe:	8f 15       	cp	r24, r15
     900:	10 f4       	brcc	.+4      	; 0x906 <ASA_7S00_set+0x20>
     902:	01 e0       	ldi	r16, 0x01	; 1
     904:	22 c0       	rjmp	.+68     	; 0x94a <ASA_7S00_set+0x64>
     906:	88 ec       	ldi	r24, 0xC8	; 200
     908:	d8 16       	cp	r13, r24
     90a:	11 f0       	breq	.+4      	; 0x910 <ASA_7S00_set+0x2a>
     90c:	02 e0       	ldi	r16, 0x02	; 2
     90e:	1d c0       	rjmp	.+58     	; 0x94a <ASA_7S00_set+0x64>
     910:	87 e0       	ldi	r24, 0x07	; 7
     912:	8e 15       	cp	r24, r14
     914:	10 f4       	brcc	.+4      	; 0x91a <ASA_7S00_set+0x34>
     916:	03 e0       	ldi	r16, 0x03	; 3
     918:	18 c0       	rjmp	.+48     	; 0x94a <ASA_7S00_set+0x64>
     91a:	80 2f       	mov	r24, r16
     91c:	90 e0       	ldi	r25, 0x00	; 0
     91e:	02 c0       	rjmp	.+4      	; 0x924 <ASA_7S00_set+0x3e>
     920:	88 0f       	add	r24, r24
     922:	99 1f       	adc	r25, r25
     924:	ea 94       	dec	r14
     926:	e2 f7       	brpl	.-8      	; 0x920 <ASA_7S00_set+0x3a>
     928:	ef 2d       	mov	r30, r15
     92a:	f0 e0       	ldi	r31, 0x00	; 0
     92c:	ec 5e       	subi	r30, 0xEC	; 236
     92e:	fd 4f       	sbci	r31, 0xFD	; 253
     930:	91 2f       	mov	r25, r17
     932:	98 23       	and	r25, r24
     934:	10 95       	com	r17
     936:	80 81       	ld	r24, Z
     938:	81 23       	and	r24, r17
     93a:	98 2b       	or	r25, r24
     93c:	90 83       	st	Z, r25
     93e:	8f 2d       	mov	r24, r15
     940:	6e de       	rcall	.-804    	; 0x61e <UART_7S00_Transfer>
     942:	08 2f       	mov	r16, r24
     944:	80 e0       	ldi	r24, 0x00	; 0
     946:	0e 94 ef 0c 	call	0x19de	; 0x19de <ASA_ID_set>
     94a:	80 2f       	mov	r24, r16
     94c:	1f 91       	pop	r17
     94e:	0f 91       	pop	r16
     950:	ff 90       	pop	r15
     952:	ef 90       	pop	r14
     954:	df 90       	pop	r13
     956:	08 95       	ret

00000958 <FrcStSw>:
     958:	fc 01       	movw	r30, r24
     95a:	60 83       	st	Z, r22
     95c:	08 95       	ret

0000095e <EnUnpk>:
     95e:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <StateMachObj>
     962:	ea e9       	ldi	r30, 0x9A	; 154
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	80 81       	ld	r24, Z
     968:	80 68       	ori	r24, 0x80	; 128
     96a:	80 83       	st	Z, r24
     96c:	08 95       	ret

0000096e <DisUnpk>:
     96e:	ea e9       	ldi	r30, 0x9A	; 154
     970:	f0 e0       	ldi	r31, 0x00	; 0
     972:	80 81       	ld	r24, Z
     974:	8f 77       	andi	r24, 0x7F	; 127
     976:	80 83       	st	Z, r24
     978:	08 95       	ret

0000097a <timer1_set>:
     97a:	8e b5       	in	r24, 0x2e	; 46
     97c:	88 60       	ori	r24, 0x08	; 8
     97e:	8e bd       	out	0x2e, r24	; 46
     980:	8e b5       	in	r24, 0x2e	; 46
     982:	82 60       	ori	r24, 0x02	; 2
     984:	8e bd       	out	0x2e, r24	; 46
     986:	87 b7       	in	r24, 0x37	; 55
     988:	80 61       	ori	r24, 0x10	; 16
     98a:	87 bf       	out	0x37, r24	; 55
     98c:	8f e8       	ldi	r24, 0x8F	; 143
     98e:	90 e0       	ldi	r25, 0x00	; 0
     990:	9b bd       	out	0x2b, r25	; 43
     992:	8a bd       	out	0x2a, r24	; 42
     994:	1d bc       	out	0x2d, r1	; 45
     996:	1c bc       	out	0x2c, r1	; 44
     998:	08 95       	ret

0000099a <RstTimeout>:
     99a:	8e e1       	ldi	r24, 0x1E	; 30
     99c:	80 93 d8 01 	sts	0x01D8, r24	; 0x8001d8 <uartTimeout>
     9a0:	08 95       	ret

000009a2 <BatchBuffer_put>:
     9a2:	0f 93       	push	r16
     9a4:	1f 93       	push	r17
     9a6:	cf 93       	push	r28
     9a8:	df 93       	push	r29
     9aa:	ec 01       	movw	r28, r24
     9ac:	8a 01       	movw	r16, r20
     9ae:	89 81       	ldd	r24, Y+1	; 0x01
     9b0:	70 e0       	ldi	r23, 0x00	; 0
     9b2:	e8 2f       	mov	r30, r24
     9b4:	f0 e0       	ldi	r31, 0x00	; 0
     9b6:	9b 01       	movw	r18, r22
     9b8:	2e 0f       	add	r18, r30
     9ba:	3f 1f       	adc	r19, r31
     9bc:	8a 81       	ldd	r24, Y+2	; 0x02
     9be:	90 e0       	ldi	r25, 0x00	; 0
     9c0:	82 17       	cp	r24, r18
     9c2:	93 07       	cpc	r25, r19
     9c4:	64 f1       	brlt	.+88     	; 0xa1e <BatchBuffer_put+0x7c>
     9c6:	af 01       	movw	r20, r30
     9c8:	4c 5f       	subi	r20, 0xFC	; 252
     9ca:	5f 4f       	sbci	r21, 0xFF	; 255
     9cc:	4c 0f       	add	r20, r28
     9ce:	5d 1f       	adc	r21, r29
     9d0:	20 e0       	ldi	r18, 0x00	; 0
     9d2:	30 e0       	ldi	r19, 0x00	; 0
     9d4:	0d c0       	rjmp	.+26     	; 0x9f0 <BatchBuffer_put+0x4e>
     9d6:	da 01       	movw	r26, r20
     9d8:	a2 0f       	add	r26, r18
     9da:	b3 1f       	adc	r27, r19
     9dc:	f8 01       	movw	r30, r16
     9de:	e2 0f       	add	r30, r18
     9e0:	f3 1f       	adc	r31, r19
     9e2:	80 81       	ld	r24, Z
     9e4:	8c 93       	st	X, r24
     9e6:	88 81       	ld	r24, Y
     9e8:	8f 5f       	subi	r24, 0xFF	; 255
     9ea:	88 83       	st	Y, r24
     9ec:	2f 5f       	subi	r18, 0xFF	; 255
     9ee:	3f 4f       	sbci	r19, 0xFF	; 255
     9f0:	26 17       	cp	r18, r22
     9f2:	37 07       	cpc	r19, r23
     9f4:	84 f3       	brlt	.-32     	; 0x9d6 <BatchBuffer_put+0x34>
     9f6:	58 81       	ld	r21, Y
     9f8:	49 81       	ldd	r20, Y+1	; 0x01
     9fa:	24 2f       	mov	r18, r20
     9fc:	30 e0       	ldi	r19, 0x00	; 0
     9fe:	25 0f       	add	r18, r21
     a00:	31 1d       	adc	r19, r1
     a02:	8a 81       	ldd	r24, Y+2	; 0x02
     a04:	90 e0       	ldi	r25, 0x00	; 0
     a06:	45 0f       	add	r20, r21
     a08:	28 17       	cp	r18, r24
     a0a:	39 07       	cpc	r19, r25
     a0c:	11 f4       	brne	.+4      	; 0xa12 <BatchBuffer_put+0x70>
     a0e:	81 e0       	ldi	r24, 0x01	; 1
     a10:	01 c0       	rjmp	.+2      	; 0xa14 <BatchBuffer_put+0x72>
     a12:	82 e0       	ldi	r24, 0x02	; 2
     a14:	8b 83       	std	Y+3, r24	; 0x03
     a16:	49 83       	std	Y+1, r20	; 0x01
     a18:	18 82       	st	Y, r1
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	02 c0       	rjmp	.+4      	; 0xa22 <BatchBuffer_put+0x80>
     a1e:	81 e0       	ldi	r24, 0x01	; 1
     a20:	8b 83       	std	Y+3, r24	; 0x03
     a22:	df 91       	pop	r29
     a24:	cf 91       	pop	r28
     a26:	1f 91       	pop	r17
     a28:	0f 91       	pop	r16
     a2a:	08 95       	ret

00000a2c <BatchBuffer_get>:
     a2c:	0f 93       	push	r16
     a2e:	1f 93       	push	r17
     a30:	cf 93       	push	r28
     a32:	df 93       	push	r29
     a34:	ec 01       	movw	r28, r24
     a36:	96 2f       	mov	r25, r22
     a38:	89 81       	ldd	r24, Y+1	; 0x01
     a3a:	86 17       	cp	r24, r22
     a3c:	10 f4       	brcc	.+4      	; 0xa42 <BatchBuffer_get+0x16>
     a3e:	81 e0       	ldi	r24, 0x01	; 1
     a40:	42 c0       	rjmp	.+132    	; 0xac6 <BatchBuffer_get+0x9a>
     a42:	88 81       	ld	r24, Y
     a44:	68 2f       	mov	r22, r24
     a46:	70 e0       	ldi	r23, 0x00	; 0
     a48:	6c 5f       	subi	r22, 0xFC	; 252
     a4a:	7f 4f       	sbci	r23, 0xFF	; 255
     a4c:	6c 0f       	add	r22, r28
     a4e:	7d 1f       	adc	r23, r29
     a50:	20 e0       	ldi	r18, 0x00	; 0
     a52:	30 e0       	ldi	r19, 0x00	; 0
     a54:	09 2f       	mov	r16, r25
     a56:	10 e0       	ldi	r17, 0x00	; 0
     a58:	0d c0       	rjmp	.+26     	; 0xa74 <BatchBuffer_get+0x48>
     a5a:	da 01       	movw	r26, r20
     a5c:	a2 0f       	add	r26, r18
     a5e:	b3 1f       	adc	r27, r19
     a60:	fb 01       	movw	r30, r22
     a62:	e2 0f       	add	r30, r18
     a64:	f3 1f       	adc	r31, r19
     a66:	80 81       	ld	r24, Z
     a68:	8c 93       	st	X, r24
     a6a:	88 81       	ld	r24, Y
     a6c:	8f 5f       	subi	r24, 0xFF	; 255
     a6e:	88 83       	st	Y, r24
     a70:	2f 5f       	subi	r18, 0xFF	; 255
     a72:	3f 4f       	sbci	r19, 0xFF	; 255
     a74:	20 17       	cp	r18, r16
     a76:	31 07       	cpc	r19, r17
     a78:	84 f3       	brlt	.-32     	; 0xa5a <BatchBuffer_get+0x2e>
     a7a:	88 81       	ld	r24, Y
     a7c:	08 2f       	mov	r16, r24
     a7e:	10 e0       	ldi	r17, 0x00	; 0
     a80:	db 01       	movw	r26, r22
     a82:	a0 0f       	add	r26, r16
     a84:	b1 1f       	adc	r27, r17
     a86:	40 e0       	ldi	r20, 0x00	; 0
     a88:	50 e0       	ldi	r21, 0x00	; 0
     a8a:	08 c0       	rjmp	.+16     	; 0xa9c <BatchBuffer_get+0x70>
     a8c:	fb 01       	movw	r30, r22
     a8e:	e4 0f       	add	r30, r20
     a90:	f5 1f       	adc	r31, r21
     a92:	8c 91       	ld	r24, X
     a94:	80 83       	st	Z, r24
     a96:	1d 92       	st	X+, r1
     a98:	4f 5f       	subi	r20, 0xFF	; 255
     a9a:	5f 4f       	sbci	r21, 0xFF	; 255
     a9c:	e9 81       	ldd	r30, Y+1	; 0x01
     a9e:	9a 01       	movw	r18, r20
     aa0:	20 0f       	add	r18, r16
     aa2:	31 1f       	adc	r19, r17
     aa4:	8e 2f       	mov	r24, r30
     aa6:	90 e0       	ldi	r25, 0x00	; 0
     aa8:	28 17       	cp	r18, r24
     aaa:	39 07       	cpc	r19, r25
     aac:	7c f3       	brlt	.-34     	; 0xa8c <BatchBuffer_get+0x60>
     aae:	98 81       	ld	r25, Y
     ab0:	9e 17       	cp	r25, r30
     ab2:	19 f4       	brne	.+6      	; 0xaba <BatchBuffer_get+0x8e>
     ab4:	1b 82       	std	Y+3, r1	; 0x03
     ab6:	19 82       	std	Y+1, r1	; 0x01
     ab8:	04 c0       	rjmp	.+8      	; 0xac2 <BatchBuffer_get+0x96>
     aba:	82 e0       	ldi	r24, 0x02	; 2
     abc:	8b 83       	std	Y+3, r24	; 0x03
     abe:	e9 1b       	sub	r30, r25
     ac0:	e9 83       	std	Y+1, r30	; 0x01
     ac2:	18 82       	st	Y, r1
     ac4:	80 e0       	ldi	r24, 0x00	; 0
     ac6:	df 91       	pop	r29
     ac8:	cf 91       	pop	r28
     aca:	1f 91       	pop	r17
     acc:	0f 91       	pop	r16
     ace:	08 95       	ret

00000ad0 <__vector_32>:
     ad0:	1f 92       	push	r1
     ad2:	0f 92       	push	r0
     ad4:	0f b6       	in	r0, 0x3f	; 63
     ad6:	0f 92       	push	r0
     ad8:	0b b6       	in	r0, 0x3b	; 59
     ada:	0f 92       	push	r0
     adc:	11 24       	eor	r1, r1
     ade:	2f 93       	push	r18
     ae0:	3f 93       	push	r19
     ae2:	4f 93       	push	r20
     ae4:	5f 93       	push	r21
     ae6:	6f 93       	push	r22
     ae8:	7f 93       	push	r23
     aea:	8f 93       	push	r24
     aec:	9f 93       	push	r25
     aee:	af 93       	push	r26
     af0:	bf 93       	push	r27
     af2:	ef 93       	push	r30
     af4:	ff 93       	push	r31
     af6:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <CmdBuf+0x3>
     afa:	88 23       	and	r24, r24
     afc:	59 f0       	breq	.+22     	; 0xb14 <__vector_32+0x44>
     afe:	84 e1       	ldi	r24, 0x14	; 20
     b00:	91 e0       	ldi	r25, 0x01	; 1
     b02:	61 e0       	ldi	r22, 0x01	; 1
     b04:	47 ed       	ldi	r20, 0xD7	; 215
     b06:	51 e0       	ldi	r21, 0x01	; 1
     b08:	91 df       	rcall	.-222    	; 0xa2c <BatchBuffer_get>
     b0a:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <Data_get>
     b0e:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
     b12:	05 c0       	rjmp	.+10     	; 0xb1e <__vector_32+0x4e>
     b14:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     b18:	8f 7b       	andi	r24, 0xBF	; 191
     b1a:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     b1e:	ff 91       	pop	r31
     b20:	ef 91       	pop	r30
     b22:	bf 91       	pop	r27
     b24:	af 91       	pop	r26
     b26:	9f 91       	pop	r25
     b28:	8f 91       	pop	r24
     b2a:	7f 91       	pop	r23
     b2c:	6f 91       	pop	r22
     b2e:	5f 91       	pop	r21
     b30:	4f 91       	pop	r20
     b32:	3f 91       	pop	r19
     b34:	2f 91       	pop	r18
     b36:	0f 90       	pop	r0
     b38:	0b be       	out	0x3b, r0	; 59
     b3a:	0f 90       	pop	r0
     b3c:	0f be       	out	0x3f, r0	; 63
     b3e:	0f 90       	pop	r0
     b40:	1f 90       	pop	r1
     b42:	18 95       	reti

00000b44 <BatchBuffer_full>:
     b44:	fc 01       	movw	r30, r24
     b46:	81 e0       	ldi	r24, 0x01	; 1
     b48:	83 83       	std	Z+3, r24	; 0x03
     b4a:	08 95       	ret

00000b4c <BatchBuffer_clear>:
     b4c:	fc 01       	movw	r30, r24
     b4e:	13 82       	std	Z+3, r1	; 0x03
     b50:	11 82       	std	Z+1, r1	; 0x01
     b52:	10 82       	st	Z, r1
     b54:	80 e0       	ldi	r24, 0x00	; 0
     b56:	90 e0       	ldi	r25, 0x00	; 0
     b58:	14 82       	std	Z+4, r1	; 0x04
     b5a:	01 96       	adiw	r24, 0x01	; 1
     b5c:	31 96       	adiw	r30, 0x01	; 1
     b5e:	80 32       	cpi	r24, 0x20	; 32
     b60:	91 05       	cpc	r25, r1
     b62:	d1 f7       	brne	.-12     	; 0xb58 <BatchBuffer_clear+0xc>
     b64:	08 95       	ret

00000b66 <__vector_30>:
     b66:	1f 92       	push	r1
     b68:	0f 92       	push	r0
     b6a:	0f b6       	in	r0, 0x3f	; 63
     b6c:	0f 92       	push	r0
     b6e:	0b b6       	in	r0, 0x3b	; 59
     b70:	0f 92       	push	r0
     b72:	11 24       	eor	r1, r1
     b74:	2f 93       	push	r18
     b76:	3f 93       	push	r19
     b78:	4f 93       	push	r20
     b7a:	5f 93       	push	r21
     b7c:	6f 93       	push	r22
     b7e:	7f 93       	push	r23
     b80:	8f 93       	push	r24
     b82:	9f 93       	push	r25
     b84:	af 93       	push	r26
     b86:	bf 93       	push	r27
     b88:	ef 93       	push	r30
     b8a:	ff 93       	push	r31
     b8c:	90 91 9c 00 	lds	r25, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
     b90:	90 93 b0 01 	sts	0x01B0, r25	; 0x8001b0 <UnpkToolObj+0x2>
     b94:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <StateMachObj>
     b98:	82 30       	cpi	r24, 0x02	; 2
     b9a:	31 f1       	breq	.+76     	; 0xbe8 <__vector_30+0x82>
     b9c:	83 30       	cpi	r24, 0x03	; 3
     b9e:	30 f4       	brcc	.+12     	; 0xbac <__vector_30+0x46>
     ba0:	88 23       	and	r24, r24
     ba2:	59 f0       	breq	.+22     	; 0xbba <__vector_30+0x54>
     ba4:	81 30       	cpi	r24, 0x01	; 1
     ba6:	09 f0       	breq	.+2      	; 0xbaa <__vector_30+0x44>
     ba8:	85 c0       	rjmp	.+266    	; 0xcb4 <__vector_30+0x14e>
     baa:	0c c0       	rjmp	.+24     	; 0xbc4 <__vector_30+0x5e>
     bac:	83 30       	cpi	r24, 0x03	; 3
     bae:	09 f4       	brne	.+2      	; 0xbb2 <__vector_30+0x4c>
     bb0:	4b c0       	rjmp	.+150    	; 0xc48 <__vector_30+0xe2>
     bb2:	84 30       	cpi	r24, 0x04	; 4
     bb4:	09 f0       	breq	.+2      	; 0xbb8 <__vector_30+0x52>
     bb6:	7e c0       	rjmp	.+252    	; 0xcb4 <__vector_30+0x14e>
     bb8:	6a c0       	rjmp	.+212    	; 0xc8e <__vector_30+0x128>
     bba:	90 3f       	cpi	r25, 0xF0	; 240
     bbc:	09 f0       	breq	.+2      	; 0xbc0 <__vector_30+0x5a>
     bbe:	63 c0       	rjmp	.+198    	; 0xc86 <__vector_30+0x120>
     bc0:	81 e0       	ldi	r24, 0x01	; 1
     bc2:	5f c0       	rjmp	.+190    	; 0xc82 <__vector_30+0x11c>
     bc4:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <__data_end>
     bc8:	98 17       	cp	r25, r24
     bca:	21 f4       	brne	.+8      	; 0xbd4 <__vector_30+0x6e>
     bcc:	82 e0       	ldi	r24, 0x02	; 2
     bce:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <StateMachObj>
     bd2:	07 c0       	rjmp	.+14     	; 0xbe2 <__vector_30+0x7c>
     bd4:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <StateMachObj>
     bd8:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     bdc:	8f 77       	andi	r24, 0x7F	; 127
     bde:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     be2:	10 92 b1 01 	sts	0x01B1, r1	; 0x8001b1 <UnpkToolObj+0x3>
     be6:	4f c0       	rjmp	.+158    	; 0xc86 <__vector_30+0x120>
     be8:	99 23       	and	r25, r25
     bea:	b9 f4       	brne	.+46     	; 0xc1a <__vector_30+0xb4>
     bec:	80 91 83 01 	lds	r24, 0x0183	; 0x800183 <__data_end+0x1>
     bf0:	82 30       	cpi	r24, 0x02	; 2
     bf2:	39 f4       	brne	.+14     	; 0xc02 <__vector_30+0x9c>
     bf4:	83 e0       	ldi	r24, 0x03	; 3
     bf6:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <StateMachObj>
     bfa:	80 91 85 01 	lds	r24, 0x0185	; 0x800185 <__data_end+0x3>
     bfe:	90 e0       	ldi	r25, 0x00	; 0
     c00:	07 c0       	rjmp	.+14     	; 0xc10 <__vector_30+0xaa>
     c02:	84 30       	cpi	r24, 0x04	; 4
     c04:	51 f4       	brne	.+20     	; 0xc1a <__vector_30+0xb4>
     c06:	83 e0       	ldi	r24, 0x03	; 3
     c08:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <StateMachObj>
     c0c:	81 e0       	ldi	r24, 0x01	; 1
     c0e:	90 e0       	ldi	r25, 0x00	; 0
     c10:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <UnpkToolObj+0x1>
     c14:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <UnpkToolObj>
     c18:	07 c0       	rjmp	.+14     	; 0xc28 <__vector_30+0xc2>
     c1a:	84 e0       	ldi	r24, 0x04	; 4
     c1c:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <StateMachObj>
     c20:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <UnpkToolObj+0x1>
     c24:	10 92 ae 01 	sts	0x01AE, r1	; 0x8001ae <UnpkToolObj>
     c28:	88 e3       	ldi	r24, 0x38	; 56
     c2a:	91 e0       	ldi	r25, 0x01	; 1
     c2c:	61 e0       	ldi	r22, 0x01	; 1
     c2e:	40 eb       	ldi	r20, 0xB0	; 176
     c30:	51 e0       	ldi	r21, 0x01	; 1
     c32:	b7 de       	rcall	.-658    	; 0x9a2 <BatchBuffer_put>
     c34:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <UnpkToolObj+0x2>
     c38:	80 93 b5 01 	sts	0x01B5, r24	; 0x8001b5 <UnpkParaObj+0x1>
     c3c:	90 91 b1 01 	lds	r25, 0x01B1	; 0x8001b1 <UnpkToolObj+0x3>
     c40:	98 0f       	add	r25, r24
     c42:	90 93 b1 01 	sts	0x01B1, r25	; 0x8001b1 <UnpkToolObj+0x3>
     c46:	1f c0       	rjmp	.+62     	; 0xc86 <__vector_30+0x120>
     c48:	88 e3       	ldi	r24, 0x38	; 56
     c4a:	91 e0       	ldi	r25, 0x01	; 1
     c4c:	61 e0       	ldi	r22, 0x01	; 1
     c4e:	40 eb       	ldi	r20, 0xB0	; 176
     c50:	51 e0       	ldi	r21, 0x01	; 1
     c52:	a7 de       	rcall	.-690    	; 0x9a2 <BatchBuffer_put>
     c54:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <UnpkToolObj+0x2>
     c58:	90 91 b1 01 	lds	r25, 0x01B1	; 0x8001b1 <UnpkToolObj+0x3>
     c5c:	89 0f       	add	r24, r25
     c5e:	80 93 b1 01 	sts	0x01B1, r24	; 0x8001b1 <UnpkToolObj+0x3>
     c62:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <UnpkToolObj>
     c66:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <UnpkToolObj+0x1>
     c6a:	01 97       	sbiw	r24, 0x01	; 1
     c6c:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <UnpkToolObj+0x1>
     c70:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <UnpkToolObj>
     c74:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <UnpkToolObj>
     c78:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <UnpkToolObj+0x1>
     c7c:	89 2b       	or	r24, r25
     c7e:	19 f4       	brne	.+6      	; 0xc86 <__vector_30+0x120>
     c80:	84 e0       	ldi	r24, 0x04	; 4
     c82:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <StateMachObj>
     c86:	8e e1       	ldi	r24, 0x1E	; 30
     c88:	80 93 d8 01 	sts	0x01D8, r24	; 0x8001d8 <uartTimeout>
     c8c:	13 c0       	rjmp	.+38     	; 0xcb4 <__vector_30+0x14e>
     c8e:	80 91 b1 01 	lds	r24, 0x01B1	; 0x8001b1 <UnpkToolObj+0x3>
     c92:	98 17       	cp	r25, r24
     c94:	21 f4       	brne	.+8      	; 0xc9e <__vector_30+0x138>
     c96:	81 e0       	ldi	r24, 0x01	; 1
     c98:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <ReBuf+0x3>
     c9c:	03 c0       	rjmp	.+6      	; 0xca4 <__vector_30+0x13e>
     c9e:	88 e3       	ldi	r24, 0x38	; 56
     ca0:	91 e0       	ldi	r25, 0x01	; 1
     ca2:	54 df       	rcall	.-344    	; 0xb4c <BatchBuffer_clear>
     ca4:	8e e1       	ldi	r24, 0x1E	; 30
     ca6:	80 93 d8 01 	sts	0x01D8, r24	; 0x8001d8 <uartTimeout>
     caa:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     cae:	8f 77       	andi	r24, 0x7F	; 127
     cb0:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     cb4:	ff 91       	pop	r31
     cb6:	ef 91       	pop	r30
     cb8:	bf 91       	pop	r27
     cba:	af 91       	pop	r26
     cbc:	9f 91       	pop	r25
     cbe:	8f 91       	pop	r24
     cc0:	7f 91       	pop	r23
     cc2:	6f 91       	pop	r22
     cc4:	5f 91       	pop	r21
     cc6:	4f 91       	pop	r20
     cc8:	3f 91       	pop	r19
     cca:	2f 91       	pop	r18
     ccc:	0f 90       	pop	r0
     cce:	0b be       	out	0x3b, r0	; 59
     cd0:	0f 90       	pop	r0
     cd2:	0f be       	out	0x3f, r0	; 63
     cd4:	0f 90       	pop	r0
     cd6:	1f 90       	pop	r1
     cd8:	18 95       	reti

00000cda <__vector_12>:
     cda:	1f 92       	push	r1
     cdc:	0f 92       	push	r0
     cde:	0f b6       	in	r0, 0x3f	; 63
     ce0:	0f 92       	push	r0
     ce2:	0b b6       	in	r0, 0x3b	; 59
     ce4:	0f 92       	push	r0
     ce6:	11 24       	eor	r1, r1
     ce8:	2f 93       	push	r18
     cea:	3f 93       	push	r19
     cec:	4f 93       	push	r20
     cee:	5f 93       	push	r21
     cf0:	6f 93       	push	r22
     cf2:	7f 93       	push	r23
     cf4:	8f 93       	push	r24
     cf6:	9f 93       	push	r25
     cf8:	af 93       	push	r26
     cfa:	bf 93       	push	r27
     cfc:	ef 93       	push	r30
     cfe:	ff 93       	push	r31
     d00:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <StateMachObj+0x1>
     d04:	81 30       	cpi	r24, 0x01	; 1
     d06:	79 f0       	breq	.+30     	; 0xd26 <__vector_12+0x4c>
     d08:	81 30       	cpi	r24, 0x01	; 1
     d0a:	18 f0       	brcs	.+6      	; 0xd12 <__vector_12+0x38>
     d0c:	82 30       	cpi	r24, 0x02	; 2
     d0e:	59 f5       	brne	.+86     	; 0xd66 <__vector_12+0x8c>
     d10:	24 c0       	rjmp	.+72     	; 0xd5a <__vector_12+0x80>
     d12:	90 91 ad 01 	lds	r25, 0x01AD	; 0x8001ad <StateMachObj+0x4>
     d16:	91 30       	cpi	r25, 0x01	; 1
     d18:	31 f5       	brne	.+76     	; 0xd66 <__vector_12+0x8c>
     d1a:	8e e1       	ldi	r24, 0x1E	; 30
     d1c:	80 93 d8 01 	sts	0x01D8, r24	; 0x8001d8 <uartTimeout>
     d20:	90 93 aa 01 	sts	0x01AA, r25	; 0x8001aa <StateMachObj+0x1>
     d24:	20 c0       	rjmp	.+64     	; 0xd66 <__vector_12+0x8c>
     d26:	80 91 d8 01 	lds	r24, 0x01D8	; 0x8001d8 <uartTimeout>
     d2a:	81 50       	subi	r24, 0x01	; 1
     d2c:	80 93 d8 01 	sts	0x01D8, r24	; 0x8001d8 <uartTimeout>
     d30:	80 91 d8 01 	lds	r24, 0x01D8	; 0x8001d8 <uartTimeout>
     d34:	88 23       	and	r24, r24
     d36:	61 f4       	brne	.+24     	; 0xd50 <__vector_12+0x76>
     d38:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     d3c:	8f 77       	andi	r24, 0x7F	; 127
     d3e:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     d42:	88 e3       	ldi	r24, 0x38	; 56
     d44:	91 e0       	ldi	r25, 0x01	; 1
     d46:	02 df       	rcall	.-508    	; 0xb4c <BatchBuffer_clear>
     d48:	82 e0       	ldi	r24, 0x02	; 2
     d4a:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <StateMachObj+0x1>
     d4e:	0b c0       	rjmp	.+22     	; 0xd66 <__vector_12+0x8c>
     d50:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     d54:	87 fd       	sbrc	r24, 7
     d56:	07 c0       	rjmp	.+14     	; 0xd66 <__vector_12+0x8c>
     d58:	04 c0       	rjmp	.+8      	; 0xd62 <__vector_12+0x88>
     d5a:	80 91 ad 01 	lds	r24, 0x01AD	; 0x8001ad <StateMachObj+0x4>
     d5e:	88 23       	and	r24, r24
     d60:	11 f4       	brne	.+4      	; 0xd66 <__vector_12+0x8c>
     d62:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <StateMachObj+0x1>
     d66:	ff 91       	pop	r31
     d68:	ef 91       	pop	r30
     d6a:	bf 91       	pop	r27
     d6c:	af 91       	pop	r26
     d6e:	9f 91       	pop	r25
     d70:	8f 91       	pop	r24
     d72:	7f 91       	pop	r23
     d74:	6f 91       	pop	r22
     d76:	5f 91       	pop	r21
     d78:	4f 91       	pop	r20
     d7a:	3f 91       	pop	r19
     d7c:	2f 91       	pop	r18
     d7e:	0f 90       	pop	r0
     d80:	0b be       	out	0x3b, r0	; 59
     d82:	0f 90       	pop	r0
     d84:	0f be       	out	0x3f, r0	; 63
     d86:	0f 90       	pop	r0
     d88:	1f 90       	pop	r1
     d8a:	18 95       	reti

00000d8c <ASA_RS485_fgt>:
     d8c:	ef 92       	push	r14
     d8e:	ff 92       	push	r15
     d90:	0f 93       	push	r16
     d92:	df 93       	push	r29
     d94:	cf 93       	push	r28
     d96:	cd b7       	in	r28, 0x3d	; 61
     d98:	de b7       	in	r29, 0x3e	; 62
     d9a:	28 97       	sbiw	r28, 0x08	; 8
     d9c:	0f b6       	in	r0, 0x3f	; 63
     d9e:	f8 94       	cli
     da0:	de bf       	out	0x3e, r29	; 62
     da2:	0f be       	out	0x3f, r0	; 63
     da4:	cd bf       	out	0x3d, r28	; 61
     da6:	6d 83       	std	Y+5, r22	; 0x05
     da8:	4e 83       	std	Y+6, r20	; 0x06
     daa:	2f 83       	std	Y+7, r18	; 0x07
     dac:	08 87       	std	Y+8, r16	; 0x08
     dae:	19 82       	std	Y+1, r1	; 0x01
     db0:	94 e0       	ldi	r25, 0x04	; 4
     db2:	9a 83       	std	Y+2, r25	; 0x02
     db4:	14 d6       	rcall	.+3112   	; 0x19de <ASA_ID_set>
     db6:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
     dba:	80 61       	ori	r24, 0x10	; 16
     dbc:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
     dc0:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     dc4:	80 61       	ori	r24, 0x10	; 16
     dc6:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     dca:	8a 81       	ldd	r24, Y+2	; 0x02
     dcc:	99 81       	ldd	r25, Y+1	; 0x01
     dce:	89 0f       	add	r24, r25
     dd0:	9e 81       	ldd	r25, Y+6	; 0x06
     dd2:	89 0f       	add	r24, r25
     dd4:	9f 81       	ldd	r25, Y+7	; 0x07
     dd6:	89 0f       	add	r24, r25
     dd8:	98 85       	ldd	r25, Y+8	; 0x08
     dda:	89 0f       	add	r24, r25
     ddc:	89 83       	std	Y+1, r24	; 0x01
     dde:	84 e1       	ldi	r24, 0x14	; 20
     de0:	91 e0       	ldi	r25, 0x01	; 1
     de2:	61 e0       	ldi	r22, 0x01	; 1
     de4:	ae 01       	movw	r20, r28
     de6:	4b 5f       	subi	r20, 0xFB	; 251
     de8:	5f 4f       	sbci	r21, 0xFF	; 255
     dea:	db dd       	rcall	.-1098   	; 0x9a2 <BatchBuffer_put>
     dec:	84 e1       	ldi	r24, 0x14	; 20
     dee:	91 e0       	ldi	r25, 0x01	; 1
     df0:	61 e0       	ldi	r22, 0x01	; 1
     df2:	ae 01       	movw	r20, r28
     df4:	4e 5f       	subi	r20, 0xFE	; 254
     df6:	5f 4f       	sbci	r21, 0xFF	; 255
     df8:	d4 dd       	rcall	.-1112   	; 0x9a2 <BatchBuffer_put>
     dfa:	84 e1       	ldi	r24, 0x14	; 20
     dfc:	91 e0       	ldi	r25, 0x01	; 1
     dfe:	61 e0       	ldi	r22, 0x01	; 1
     e00:	ae 01       	movw	r20, r28
     e02:	4a 5f       	subi	r20, 0xFA	; 250
     e04:	5f 4f       	sbci	r21, 0xFF	; 255
     e06:	cd dd       	rcall	.-1126   	; 0x9a2 <BatchBuffer_put>
     e08:	84 e1       	ldi	r24, 0x14	; 20
     e0a:	91 e0       	ldi	r25, 0x01	; 1
     e0c:	61 e0       	ldi	r22, 0x01	; 1
     e0e:	ae 01       	movw	r20, r28
     e10:	49 5f       	subi	r20, 0xF9	; 249
     e12:	5f 4f       	sbci	r21, 0xFF	; 255
     e14:	c6 dd       	rcall	.-1140   	; 0x9a2 <BatchBuffer_put>
     e16:	84 e1       	ldi	r24, 0x14	; 20
     e18:	91 e0       	ldi	r25, 0x01	; 1
     e1a:	61 e0       	ldi	r22, 0x01	; 1
     e1c:	ae 01       	movw	r20, r28
     e1e:	48 5f       	subi	r20, 0xF8	; 248
     e20:	5f 4f       	sbci	r21, 0xFF	; 255
     e22:	bf dd       	rcall	.-1154   	; 0x9a2 <BatchBuffer_put>
     e24:	84 e1       	ldi	r24, 0x14	; 20
     e26:	91 e0       	ldi	r25, 0x01	; 1
     e28:	61 e0       	ldi	r22, 0x01	; 1
     e2a:	ae 01       	movw	r20, r28
     e2c:	4f 5f       	subi	r20, 0xFF	; 255
     e2e:	5f 4f       	sbci	r21, 0xFF	; 255
     e30:	b8 dd       	rcall	.-1168   	; 0x9a2 <BatchBuffer_put>
     e32:	8d 81       	ldd	r24, Y+5	; 0x05
     e34:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <__data_end>
     e38:	8a 81       	ldd	r24, Y+2	; 0x02
     e3a:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <__data_end+0x1>
     e3e:	80 ef       	ldi	r24, 0xF0	; 240
     e40:	dc d5       	rcall	.+3000   	; 0x19fa <UART1_putchar>
     e42:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     e46:	80 64       	ori	r24, 0x40	; 64
     e48:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     e4c:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     e50:	86 fd       	sbrc	r24, 6
     e52:	fc cf       	rjmp	.-8      	; 0xe4c <ASA_RS485_fgt+0xc0>
     e54:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     e58:	8f 7e       	andi	r24, 0xEF	; 239
     e5a:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     e5e:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <StateMachObj>
     e62:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     e66:	80 68       	ori	r24, 0x80	; 128
     e68:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     e6c:	81 e0       	ldi	r24, 0x01	; 1
     e6e:	80 93 ad 01 	sts	0x01AD, r24	; 0x8001ad <StateMachObj+0x4>
     e72:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
     e76:	81 30       	cpi	r24, 0x01	; 1
     e78:	21 f0       	breq	.+8      	; 0xe82 <ASA_RS485_fgt+0xf6>
     e7a:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <StateMachObj+0x1>
     e7e:	82 30       	cpi	r24, 0x02	; 2
     e80:	c1 f7       	brne	.-16     	; 0xe72 <ASA_RS485_fgt+0xe6>
     e82:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <StateMachObj+0x4>
     e86:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
     e8a:	81 30       	cpi	r24, 0x01	; 1
     e8c:	11 f0       	breq	.+4      	; 0xe92 <ASA_RS485_fgt+0x106>
     e8e:	81 e0       	ldi	r24, 0x01	; 1
     e90:	17 c0       	rjmp	.+46     	; 0xec0 <ASA_RS485_fgt+0x134>
     e92:	88 e3       	ldi	r24, 0x38	; 56
     e94:	91 e0       	ldi	r25, 0x01	; 1
     e96:	61 e0       	ldi	r22, 0x01	; 1
     e98:	ae 01       	movw	r20, r28
     e9a:	4d 5f       	subi	r20, 0xFD	; 253
     e9c:	5f 4f       	sbci	r21, 0xFF	; 255
     e9e:	c6 dd       	rcall	.-1140   	; 0xa2c <BatchBuffer_get>
     ea0:	8b 81       	ldd	r24, Y+3	; 0x03
     ea2:	88 23       	and	r24, r24
     ea4:	51 f4       	brne	.+20     	; 0xeba <ASA_RS485_fgt+0x12e>
     ea6:	88 e3       	ldi	r24, 0x38	; 56
     ea8:	91 e0       	ldi	r25, 0x01	; 1
     eaa:	61 e0       	ldi	r22, 0x01	; 1
     eac:	ae 01       	movw	r20, r28
     eae:	4c 5f       	subi	r20, 0xFC	; 252
     eb0:	5f 4f       	sbci	r21, 0xFF	; 255
     eb2:	bc dd       	rcall	.-1160   	; 0xa2c <BatchBuffer_get>
     eb4:	8c 81       	ldd	r24, Y+4	; 0x04
     eb6:	f7 01       	movw	r30, r14
     eb8:	80 83       	st	Z, r24
     eba:	8b 81       	ldd	r24, Y+3	; 0x03
     ebc:	88 0f       	add	r24, r24
     ebe:	88 0f       	add	r24, r24
     ec0:	28 96       	adiw	r28, 0x08	; 8
     ec2:	0f b6       	in	r0, 0x3f	; 63
     ec4:	f8 94       	cli
     ec6:	de bf       	out	0x3e, r29	; 62
     ec8:	0f be       	out	0x3f, r0	; 63
     eca:	cd bf       	out	0x3d, r28	; 61
     ecc:	cf 91       	pop	r28
     ece:	df 91       	pop	r29
     ed0:	0f 91       	pop	r16
     ed2:	ff 90       	pop	r15
     ed4:	ef 90       	pop	r14
     ed6:	08 95       	ret

00000ed8 <ASA_RS485_fpt>:
     ed8:	ef 92       	push	r14
     eda:	0f 93       	push	r16
     edc:	df 93       	push	r29
     ede:	cf 93       	push	r28
     ee0:	cd b7       	in	r28, 0x3d	; 61
     ee2:	de b7       	in	r29, 0x3e	; 62
     ee4:	28 97       	sbiw	r28, 0x08	; 8
     ee6:	0f b6       	in	r0, 0x3f	; 63
     ee8:	f8 94       	cli
     eea:	de bf       	out	0x3e, r29	; 62
     eec:	0f be       	out	0x3f, r0	; 63
     eee:	cd bf       	out	0x3d, r28	; 61
     ef0:	6c 83       	std	Y+4, r22	; 0x04
     ef2:	4d 83       	std	Y+5, r20	; 0x05
     ef4:	2e 83       	std	Y+6, r18	; 0x06
     ef6:	0f 83       	std	Y+7, r16	; 0x07
     ef8:	e8 86       	std	Y+8, r14	; 0x08
     efa:	19 82       	std	Y+1, r1	; 0x01
     efc:	93 e0       	ldi	r25, 0x03	; 3
     efe:	9a 83       	std	Y+2, r25	; 0x02
     f00:	6e d5       	rcall	.+2780   	; 0x19de <ASA_ID_set>
     f02:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
     f06:	80 61       	ori	r24, 0x10	; 16
     f08:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
     f0c:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     f10:	80 61       	ori	r24, 0x10	; 16
     f12:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     f16:	8a 81       	ldd	r24, Y+2	; 0x02
     f18:	99 81       	ldd	r25, Y+1	; 0x01
     f1a:	89 0f       	add	r24, r25
     f1c:	9d 81       	ldd	r25, Y+5	; 0x05
     f1e:	89 0f       	add	r24, r25
     f20:	9e 81       	ldd	r25, Y+6	; 0x06
     f22:	89 0f       	add	r24, r25
     f24:	9f 81       	ldd	r25, Y+7	; 0x07
     f26:	89 0f       	add	r24, r25
     f28:	98 85       	ldd	r25, Y+8	; 0x08
     f2a:	89 0f       	add	r24, r25
     f2c:	89 83       	std	Y+1, r24	; 0x01
     f2e:	84 e1       	ldi	r24, 0x14	; 20
     f30:	91 e0       	ldi	r25, 0x01	; 1
     f32:	61 e0       	ldi	r22, 0x01	; 1
     f34:	ae 01       	movw	r20, r28
     f36:	4c 5f       	subi	r20, 0xFC	; 252
     f38:	5f 4f       	sbci	r21, 0xFF	; 255
     f3a:	33 dd       	rcall	.-1434   	; 0x9a2 <BatchBuffer_put>
     f3c:	84 e1       	ldi	r24, 0x14	; 20
     f3e:	91 e0       	ldi	r25, 0x01	; 1
     f40:	61 e0       	ldi	r22, 0x01	; 1
     f42:	ae 01       	movw	r20, r28
     f44:	4e 5f       	subi	r20, 0xFE	; 254
     f46:	5f 4f       	sbci	r21, 0xFF	; 255
     f48:	2c dd       	rcall	.-1448   	; 0x9a2 <BatchBuffer_put>
     f4a:	84 e1       	ldi	r24, 0x14	; 20
     f4c:	91 e0       	ldi	r25, 0x01	; 1
     f4e:	61 e0       	ldi	r22, 0x01	; 1
     f50:	ae 01       	movw	r20, r28
     f52:	4b 5f       	subi	r20, 0xFB	; 251
     f54:	5f 4f       	sbci	r21, 0xFF	; 255
     f56:	25 dd       	rcall	.-1462   	; 0x9a2 <BatchBuffer_put>
     f58:	84 e1       	ldi	r24, 0x14	; 20
     f5a:	91 e0       	ldi	r25, 0x01	; 1
     f5c:	61 e0       	ldi	r22, 0x01	; 1
     f5e:	ae 01       	movw	r20, r28
     f60:	4a 5f       	subi	r20, 0xFA	; 250
     f62:	5f 4f       	sbci	r21, 0xFF	; 255
     f64:	1e dd       	rcall	.-1476   	; 0x9a2 <BatchBuffer_put>
     f66:	84 e1       	ldi	r24, 0x14	; 20
     f68:	91 e0       	ldi	r25, 0x01	; 1
     f6a:	61 e0       	ldi	r22, 0x01	; 1
     f6c:	ae 01       	movw	r20, r28
     f6e:	49 5f       	subi	r20, 0xF9	; 249
     f70:	5f 4f       	sbci	r21, 0xFF	; 255
     f72:	17 dd       	rcall	.-1490   	; 0x9a2 <BatchBuffer_put>
     f74:	84 e1       	ldi	r24, 0x14	; 20
     f76:	91 e0       	ldi	r25, 0x01	; 1
     f78:	61 e0       	ldi	r22, 0x01	; 1
     f7a:	ae 01       	movw	r20, r28
     f7c:	48 5f       	subi	r20, 0xF8	; 248
     f7e:	5f 4f       	sbci	r21, 0xFF	; 255
     f80:	10 dd       	rcall	.-1504   	; 0x9a2 <BatchBuffer_put>
     f82:	84 e1       	ldi	r24, 0x14	; 20
     f84:	91 e0       	ldi	r25, 0x01	; 1
     f86:	61 e0       	ldi	r22, 0x01	; 1
     f88:	ae 01       	movw	r20, r28
     f8a:	4f 5f       	subi	r20, 0xFF	; 255
     f8c:	5f 4f       	sbci	r21, 0xFF	; 255
     f8e:	09 dd       	rcall	.-1518   	; 0x9a2 <BatchBuffer_put>
     f90:	8c 81       	ldd	r24, Y+4	; 0x04
     f92:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <__data_end>
     f96:	8a 81       	ldd	r24, Y+2	; 0x02
     f98:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <__data_end+0x1>
     f9c:	80 ef       	ldi	r24, 0xF0	; 240
     f9e:	2d d5       	rcall	.+2650   	; 0x19fa <UART1_putchar>
     fa0:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     fa4:	80 64       	ori	r24, 0x40	; 64
     fa6:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     faa:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     fae:	86 fd       	sbrc	r24, 6
     fb0:	fc cf       	rjmp	.-8      	; 0xfaa <ASA_RS485_fpt+0xd2>
     fb2:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     fb6:	8f 7e       	andi	r24, 0xEF	; 239
     fb8:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     fbc:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <StateMachObj>
     fc0:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     fc4:	80 68       	ori	r24, 0x80	; 128
     fc6:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     fca:	81 e0       	ldi	r24, 0x01	; 1
     fcc:	80 93 ad 01 	sts	0x01AD, r24	; 0x8001ad <StateMachObj+0x4>
     fd0:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
     fd4:	81 30       	cpi	r24, 0x01	; 1
     fd6:	21 f0       	breq	.+8      	; 0xfe0 <ASA_RS485_fpt+0x108>
     fd8:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <StateMachObj+0x1>
     fdc:	82 30       	cpi	r24, 0x02	; 2
     fde:	c1 f7       	brne	.-16     	; 0xfd0 <ASA_RS485_fpt+0xf8>
     fe0:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <StateMachObj+0x4>
     fe4:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
     fe8:	81 30       	cpi	r24, 0x01	; 1
     fea:	11 f0       	breq	.+4      	; 0xff0 <ASA_RS485_fpt+0x118>
     fec:	81 e0       	ldi	r24, 0x01	; 1
     fee:	0a c0       	rjmp	.+20     	; 0x1004 <ASA_RS485_fpt+0x12c>
     ff0:	88 e3       	ldi	r24, 0x38	; 56
     ff2:	91 e0       	ldi	r25, 0x01	; 1
     ff4:	61 e0       	ldi	r22, 0x01	; 1
     ff6:	ae 01       	movw	r20, r28
     ff8:	4d 5f       	subi	r20, 0xFD	; 253
     ffa:	5f 4f       	sbci	r21, 0xFF	; 255
     ffc:	17 dd       	rcall	.-1490   	; 0xa2c <BatchBuffer_get>
     ffe:	8b 81       	ldd	r24, Y+3	; 0x03
    1000:	88 0f       	add	r24, r24
    1002:	88 0f       	add	r24, r24
    1004:	28 96       	adiw	r28, 0x08	; 8
    1006:	0f b6       	in	r0, 0x3f	; 63
    1008:	f8 94       	cli
    100a:	de bf       	out	0x3e, r29	; 62
    100c:	0f be       	out	0x3f, r0	; 63
    100e:	cd bf       	out	0x3d, r28	; 61
    1010:	cf 91       	pop	r28
    1012:	df 91       	pop	r29
    1014:	0f 91       	pop	r16
    1016:	ef 90       	pop	r14
    1018:	08 95       	ret

0000101a <ASA_RS485_get>:
    101a:	cf 92       	push	r12
    101c:	df 92       	push	r13
    101e:	ef 92       	push	r14
    1020:	ff 92       	push	r15
    1022:	0f 93       	push	r16
    1024:	1f 93       	push	r17
    1026:	df 93       	push	r29
    1028:	cf 93       	push	r28
    102a:	cd b7       	in	r28, 0x3d	; 61
    102c:	de b7       	in	r29, 0x3e	; 62
    102e:	27 97       	sbiw	r28, 0x07	; 7
    1030:	0f b6       	in	r0, 0x3f	; 63
    1032:	f8 94       	cli
    1034:	de bf       	out	0x3e, r29	; 62
    1036:	0f be       	out	0x3f, r0	; 63
    1038:	cd bf       	out	0x3d, r28	; 61
    103a:	6d 83       	std	Y+5, r22	; 0x05
    103c:	4e 83       	std	Y+6, r20	; 0x06
    103e:	2f 83       	std	Y+7, r18	; 0x07
    1040:	68 01       	movw	r12, r16
    1042:	19 82       	std	Y+1, r1	; 0x01
    1044:	92 e0       	ldi	r25, 0x02	; 2
    1046:	9a 83       	std	Y+2, r25	; 0x02
    1048:	ca d4       	rcall	.+2452   	; 0x19de <ASA_ID_set>
    104a:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    104e:	80 61       	ori	r24, 0x10	; 16
    1050:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    1054:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    1058:	80 61       	ori	r24, 0x10	; 16
    105a:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    105e:	8a 81       	ldd	r24, Y+2	; 0x02
    1060:	99 81       	ldd	r25, Y+1	; 0x01
    1062:	89 0f       	add	r24, r25
    1064:	9e 81       	ldd	r25, Y+6	; 0x06
    1066:	89 0f       	add	r24, r25
    1068:	9f 81       	ldd	r25, Y+7	; 0x07
    106a:	89 0f       	add	r24, r25
    106c:	89 83       	std	Y+1, r24	; 0x01
    106e:	84 e1       	ldi	r24, 0x14	; 20
    1070:	91 e0       	ldi	r25, 0x01	; 1
    1072:	61 e0       	ldi	r22, 0x01	; 1
    1074:	ae 01       	movw	r20, r28
    1076:	4b 5f       	subi	r20, 0xFB	; 251
    1078:	5f 4f       	sbci	r21, 0xFF	; 255
    107a:	93 dc       	rcall	.-1754   	; 0x9a2 <BatchBuffer_put>
    107c:	84 e1       	ldi	r24, 0x14	; 20
    107e:	91 e0       	ldi	r25, 0x01	; 1
    1080:	61 e0       	ldi	r22, 0x01	; 1
    1082:	ae 01       	movw	r20, r28
    1084:	4e 5f       	subi	r20, 0xFE	; 254
    1086:	5f 4f       	sbci	r21, 0xFF	; 255
    1088:	8c dc       	rcall	.-1768   	; 0x9a2 <BatchBuffer_put>
    108a:	84 e1       	ldi	r24, 0x14	; 20
    108c:	91 e0       	ldi	r25, 0x01	; 1
    108e:	61 e0       	ldi	r22, 0x01	; 1
    1090:	ae 01       	movw	r20, r28
    1092:	4a 5f       	subi	r20, 0xFA	; 250
    1094:	5f 4f       	sbci	r21, 0xFF	; 255
    1096:	85 dc       	rcall	.-1782   	; 0x9a2 <BatchBuffer_put>
    1098:	84 e1       	ldi	r24, 0x14	; 20
    109a:	91 e0       	ldi	r25, 0x01	; 1
    109c:	61 e0       	ldi	r22, 0x01	; 1
    109e:	ae 01       	movw	r20, r28
    10a0:	49 5f       	subi	r20, 0xF9	; 249
    10a2:	5f 4f       	sbci	r21, 0xFF	; 255
    10a4:	7e dc       	rcall	.-1796   	; 0x9a2 <BatchBuffer_put>
    10a6:	84 e1       	ldi	r24, 0x14	; 20
    10a8:	91 e0       	ldi	r25, 0x01	; 1
    10aa:	61 e0       	ldi	r22, 0x01	; 1
    10ac:	ae 01       	movw	r20, r28
    10ae:	4f 5f       	subi	r20, 0xFF	; 255
    10b0:	5f 4f       	sbci	r21, 0xFF	; 255
    10b2:	77 dc       	rcall	.-1810   	; 0x9a2 <BatchBuffer_put>
    10b4:	8d 81       	ldd	r24, Y+5	; 0x05
    10b6:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <__data_end>
    10ba:	8a 81       	ldd	r24, Y+2	; 0x02
    10bc:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <__data_end+0x1>
    10c0:	8f 81       	ldd	r24, Y+7	; 0x07
    10c2:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <__data_end+0x3>
    10c6:	80 ef       	ldi	r24, 0xF0	; 240
    10c8:	98 d4       	rcall	.+2352   	; 0x19fa <UART1_putchar>
    10ca:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    10ce:	80 64       	ori	r24, 0x40	; 64
    10d0:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    10d4:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    10d8:	86 fd       	sbrc	r24, 6
    10da:	fc cf       	rjmp	.-8      	; 0x10d4 <ASA_RS485_get+0xba>
    10dc:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    10e0:	8f 7e       	andi	r24, 0xEF	; 239
    10e2:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    10e6:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <StateMachObj>
    10ea:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    10ee:	80 68       	ori	r24, 0x80	; 128
    10f0:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    10f4:	81 e0       	ldi	r24, 0x01	; 1
    10f6:	80 93 ad 01 	sts	0x01AD, r24	; 0x8001ad <StateMachObj+0x4>
    10fa:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    10fe:	81 30       	cpi	r24, 0x01	; 1
    1100:	21 f0       	breq	.+8      	; 0x110a <__stack+0xb>
    1102:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <StateMachObj+0x1>
    1106:	82 30       	cpi	r24, 0x02	; 2
    1108:	c1 f7       	brne	.-16     	; 0x10fa <ASA_RS485_get+0xe0>
    110a:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <StateMachObj+0x4>
    110e:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    1112:	81 30       	cpi	r24, 0x01	; 1
    1114:	11 f0       	breq	.+4      	; 0x111a <__stack+0x1b>
    1116:	81 e0       	ldi	r24, 0x01	; 1
    1118:	26 c0       	rjmp	.+76     	; 0x1166 <__stack+0x67>
    111a:	88 e3       	ldi	r24, 0x38	; 56
    111c:	91 e0       	ldi	r25, 0x01	; 1
    111e:	61 e0       	ldi	r22, 0x01	; 1
    1120:	ae 01       	movw	r20, r28
    1122:	4d 5f       	subi	r20, 0xFD	; 253
    1124:	5f 4f       	sbci	r21, 0xFF	; 255
    1126:	82 dc       	rcall	.-1788   	; 0xa2c <BatchBuffer_get>
    1128:	8b 81       	ldd	r24, Y+3	; 0x03
    112a:	88 23       	and	r24, r24
    112c:	c9 f4       	brne	.+50     	; 0x1160 <__stack+0x61>
    112e:	00 e0       	ldi	r16, 0x00	; 0
    1130:	10 e0       	ldi	r17, 0x00	; 0
    1132:	84 e0       	ldi	r24, 0x04	; 4
    1134:	e8 2e       	mov	r14, r24
    1136:	f1 2c       	mov	r15, r1
    1138:	ec 0e       	add	r14, r28
    113a:	fd 1e       	adc	r15, r29
    113c:	0c c0       	rjmp	.+24     	; 0x1156 <__stack+0x57>
    113e:	88 e3       	ldi	r24, 0x38	; 56
    1140:	91 e0       	ldi	r25, 0x01	; 1
    1142:	61 e0       	ldi	r22, 0x01	; 1
    1144:	a7 01       	movw	r20, r14
    1146:	72 dc       	rcall	.-1820   	; 0xa2c <BatchBuffer_get>
    1148:	f6 01       	movw	r30, r12
    114a:	e0 0f       	add	r30, r16
    114c:	f1 1f       	adc	r31, r17
    114e:	8c 81       	ldd	r24, Y+4	; 0x04
    1150:	80 83       	st	Z, r24
    1152:	0f 5f       	subi	r16, 0xFF	; 255
    1154:	1f 4f       	sbci	r17, 0xFF	; 255
    1156:	8f 81       	ldd	r24, Y+7	; 0x07
    1158:	90 e0       	ldi	r25, 0x00	; 0
    115a:	08 17       	cp	r16, r24
    115c:	19 07       	cpc	r17, r25
    115e:	7c f3       	brlt	.-34     	; 0x113e <__stack+0x3f>
    1160:	8b 81       	ldd	r24, Y+3	; 0x03
    1162:	88 0f       	add	r24, r24
    1164:	88 0f       	add	r24, r24
    1166:	27 96       	adiw	r28, 0x07	; 7
    1168:	0f b6       	in	r0, 0x3f	; 63
    116a:	f8 94       	cli
    116c:	de bf       	out	0x3e, r29	; 62
    116e:	0f be       	out	0x3f, r0	; 63
    1170:	cd bf       	out	0x3d, r28	; 61
    1172:	cf 91       	pop	r28
    1174:	df 91       	pop	r29
    1176:	1f 91       	pop	r17
    1178:	0f 91       	pop	r16
    117a:	ff 90       	pop	r15
    117c:	ef 90       	pop	r14
    117e:	df 90       	pop	r13
    1180:	cf 90       	pop	r12
    1182:	08 95       	ret

00001184 <ASA_RS485_put>:
    1184:	0f 93       	push	r16
    1186:	1f 93       	push	r17
    1188:	df 93       	push	r29
    118a:	cf 93       	push	r28
    118c:	00 d0       	rcall	.+0      	; 0x118e <ASA_RS485_put+0xa>
    118e:	00 d0       	rcall	.+0      	; 0x1190 <ASA_RS485_put+0xc>
    1190:	00 d0       	rcall	.+0      	; 0x1192 <ASA_RS485_put+0xe>
    1192:	cd b7       	in	r28, 0x3d	; 61
    1194:	de b7       	in	r29, 0x3e	; 62
    1196:	6c 83       	std	Y+4, r22	; 0x04
    1198:	4d 83       	std	Y+5, r20	; 0x05
    119a:	2e 83       	std	Y+6, r18	; 0x06
    119c:	19 82       	std	Y+1, r1	; 0x01
    119e:	91 e0       	ldi	r25, 0x01	; 1
    11a0:	9a 83       	std	Y+2, r25	; 0x02
    11a2:	1d d4       	rcall	.+2106   	; 0x19de <ASA_ID_set>
    11a4:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    11a8:	80 61       	ori	r24, 0x10	; 16
    11aa:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    11ae:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    11b2:	80 61       	ori	r24, 0x10	; 16
    11b4:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    11b8:	8a 81       	ldd	r24, Y+2	; 0x02
    11ba:	99 81       	ldd	r25, Y+1	; 0x01
    11bc:	89 0f       	add	r24, r25
    11be:	9d 81       	ldd	r25, Y+5	; 0x05
    11c0:	89 0f       	add	r24, r25
    11c2:	9e 81       	ldd	r25, Y+6	; 0x06
    11c4:	89 0f       	add	r24, r25
    11c6:	89 83       	std	Y+1, r24	; 0x01
    11c8:	f8 01       	movw	r30, r16
    11ca:	98 01       	movw	r18, r16
    11cc:	29 0f       	add	r18, r25
    11ce:	31 1d       	adc	r19, r1
    11d0:	04 c0       	rjmp	.+8      	; 0x11da <ASA_RS485_put+0x56>
    11d2:	89 81       	ldd	r24, Y+1	; 0x01
    11d4:	91 91       	ld	r25, Z+
    11d6:	89 0f       	add	r24, r25
    11d8:	89 83       	std	Y+1, r24	; 0x01
    11da:	e2 17       	cp	r30, r18
    11dc:	f3 07       	cpc	r31, r19
    11de:	c9 f7       	brne	.-14     	; 0x11d2 <ASA_RS485_put+0x4e>
    11e0:	84 e1       	ldi	r24, 0x14	; 20
    11e2:	91 e0       	ldi	r25, 0x01	; 1
    11e4:	61 e0       	ldi	r22, 0x01	; 1
    11e6:	ae 01       	movw	r20, r28
    11e8:	4c 5f       	subi	r20, 0xFC	; 252
    11ea:	5f 4f       	sbci	r21, 0xFF	; 255
    11ec:	da db       	rcall	.-2124   	; 0x9a2 <BatchBuffer_put>
    11ee:	84 e1       	ldi	r24, 0x14	; 20
    11f0:	91 e0       	ldi	r25, 0x01	; 1
    11f2:	61 e0       	ldi	r22, 0x01	; 1
    11f4:	ae 01       	movw	r20, r28
    11f6:	4e 5f       	subi	r20, 0xFE	; 254
    11f8:	5f 4f       	sbci	r21, 0xFF	; 255
    11fa:	d3 db       	rcall	.-2138   	; 0x9a2 <BatchBuffer_put>
    11fc:	84 e1       	ldi	r24, 0x14	; 20
    11fe:	91 e0       	ldi	r25, 0x01	; 1
    1200:	61 e0       	ldi	r22, 0x01	; 1
    1202:	ae 01       	movw	r20, r28
    1204:	4b 5f       	subi	r20, 0xFB	; 251
    1206:	5f 4f       	sbci	r21, 0xFF	; 255
    1208:	cc db       	rcall	.-2152   	; 0x9a2 <BatchBuffer_put>
    120a:	84 e1       	ldi	r24, 0x14	; 20
    120c:	91 e0       	ldi	r25, 0x01	; 1
    120e:	61 e0       	ldi	r22, 0x01	; 1
    1210:	ae 01       	movw	r20, r28
    1212:	4a 5f       	subi	r20, 0xFA	; 250
    1214:	5f 4f       	sbci	r21, 0xFF	; 255
    1216:	c5 db       	rcall	.-2166   	; 0x9a2 <BatchBuffer_put>
    1218:	84 e1       	ldi	r24, 0x14	; 20
    121a:	91 e0       	ldi	r25, 0x01	; 1
    121c:	6e 81       	ldd	r22, Y+6	; 0x06
    121e:	a8 01       	movw	r20, r16
    1220:	c0 db       	rcall	.-2176   	; 0x9a2 <BatchBuffer_put>
    1222:	84 e1       	ldi	r24, 0x14	; 20
    1224:	91 e0       	ldi	r25, 0x01	; 1
    1226:	61 e0       	ldi	r22, 0x01	; 1
    1228:	ae 01       	movw	r20, r28
    122a:	4f 5f       	subi	r20, 0xFF	; 255
    122c:	5f 4f       	sbci	r21, 0xFF	; 255
    122e:	b9 db       	rcall	.-2190   	; 0x9a2 <BatchBuffer_put>
    1230:	8c 81       	ldd	r24, Y+4	; 0x04
    1232:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <__data_end>
    1236:	8a 81       	ldd	r24, Y+2	; 0x02
    1238:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <__data_end+0x1>
    123c:	80 ef       	ldi	r24, 0xF0	; 240
    123e:	dd d3       	rcall	.+1978   	; 0x19fa <UART1_putchar>
    1240:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1244:	80 64       	ori	r24, 0x40	; 64
    1246:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    124a:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    124e:	86 fd       	sbrc	r24, 6
    1250:	fc cf       	rjmp	.-8      	; 0x124a <ASA_RS485_put+0xc6>
    1252:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    1256:	8f 7e       	andi	r24, 0xEF	; 239
    1258:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    125c:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <StateMachObj>
    1260:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1264:	80 68       	ori	r24, 0x80	; 128
    1266:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    126a:	81 e0       	ldi	r24, 0x01	; 1
    126c:	80 93 ad 01 	sts	0x01AD, r24	; 0x8001ad <StateMachObj+0x4>
    1270:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    1274:	81 30       	cpi	r24, 0x01	; 1
    1276:	21 f0       	breq	.+8      	; 0x1280 <ASA_RS485_put+0xfc>
    1278:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <StateMachObj+0x1>
    127c:	82 30       	cpi	r24, 0x02	; 2
    127e:	c1 f7       	brne	.-16     	; 0x1270 <ASA_RS485_put+0xec>
    1280:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <StateMachObj+0x4>
    1284:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    1288:	81 30       	cpi	r24, 0x01	; 1
    128a:	11 f0       	breq	.+4      	; 0x1290 <ASA_RS485_put+0x10c>
    128c:	81 e0       	ldi	r24, 0x01	; 1
    128e:	0a c0       	rjmp	.+20     	; 0x12a4 <ASA_RS485_put+0x120>
    1290:	88 e3       	ldi	r24, 0x38	; 56
    1292:	91 e0       	ldi	r25, 0x01	; 1
    1294:	61 e0       	ldi	r22, 0x01	; 1
    1296:	ae 01       	movw	r20, r28
    1298:	4d 5f       	subi	r20, 0xFD	; 253
    129a:	5f 4f       	sbci	r21, 0xFF	; 255
    129c:	c7 db       	rcall	.-2162   	; 0xa2c <BatchBuffer_get>
    129e:	8b 81       	ldd	r24, Y+3	; 0x03
    12a0:	88 0f       	add	r24, r24
    12a2:	88 0f       	add	r24, r24
    12a4:	26 96       	adiw	r28, 0x06	; 6
    12a6:	0f b6       	in	r0, 0x3f	; 63
    12a8:	f8 94       	cli
    12aa:	de bf       	out	0x3e, r29	; 62
    12ac:	0f be       	out	0x3f, r0	; 63
    12ae:	cd bf       	out	0x3d, r28	; 61
    12b0:	cf 91       	pop	r28
    12b2:	df 91       	pop	r29
    12b4:	1f 91       	pop	r17
    12b6:	0f 91       	pop	r16
    12b8:	08 95       	ret

000012ba <ASA_RS485_set>:
    12ba:	ef 92       	push	r14
    12bc:	0f 93       	push	r16
    12be:	df 93       	push	r29
    12c0:	cf 93       	push	r28
    12c2:	cd b7       	in	r28, 0x3d	; 61
    12c4:	de b7       	in	r29, 0x3e	; 62
    12c6:	28 97       	sbiw	r28, 0x08	; 8
    12c8:	0f b6       	in	r0, 0x3f	; 63
    12ca:	f8 94       	cli
    12cc:	de bf       	out	0x3e, r29	; 62
    12ce:	0f be       	out	0x3f, r0	; 63
    12d0:	cd bf       	out	0x3d, r28	; 61
    12d2:	6c 83       	std	Y+4, r22	; 0x04
    12d4:	4d 83       	std	Y+5, r20	; 0x05
    12d6:	2e 83       	std	Y+6, r18	; 0x06
    12d8:	0f 83       	std	Y+7, r16	; 0x07
    12da:	e8 86       	std	Y+8, r14	; 0x08
    12dc:	19 82       	std	Y+1, r1	; 0x01
    12de:	1a 82       	std	Y+2, r1	; 0x02
    12e0:	7e d3       	rcall	.+1788   	; 0x19de <ASA_ID_set>
    12e2:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    12e6:	80 61       	ori	r24, 0x10	; 16
    12e8:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    12ec:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    12f0:	80 61       	ori	r24, 0x10	; 16
    12f2:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    12f6:	8a 81       	ldd	r24, Y+2	; 0x02
    12f8:	99 81       	ldd	r25, Y+1	; 0x01
    12fa:	89 0f       	add	r24, r25
    12fc:	9d 81       	ldd	r25, Y+5	; 0x05
    12fe:	89 0f       	add	r24, r25
    1300:	9e 81       	ldd	r25, Y+6	; 0x06
    1302:	89 0f       	add	r24, r25
    1304:	9f 81       	ldd	r25, Y+7	; 0x07
    1306:	89 0f       	add	r24, r25
    1308:	98 85       	ldd	r25, Y+8	; 0x08
    130a:	89 0f       	add	r24, r25
    130c:	89 83       	std	Y+1, r24	; 0x01
    130e:	84 e1       	ldi	r24, 0x14	; 20
    1310:	91 e0       	ldi	r25, 0x01	; 1
    1312:	61 e0       	ldi	r22, 0x01	; 1
    1314:	ae 01       	movw	r20, r28
    1316:	4c 5f       	subi	r20, 0xFC	; 252
    1318:	5f 4f       	sbci	r21, 0xFF	; 255
    131a:	43 db       	rcall	.-2426   	; 0x9a2 <BatchBuffer_put>
    131c:	84 e1       	ldi	r24, 0x14	; 20
    131e:	91 e0       	ldi	r25, 0x01	; 1
    1320:	61 e0       	ldi	r22, 0x01	; 1
    1322:	ae 01       	movw	r20, r28
    1324:	4e 5f       	subi	r20, 0xFE	; 254
    1326:	5f 4f       	sbci	r21, 0xFF	; 255
    1328:	3c db       	rcall	.-2440   	; 0x9a2 <BatchBuffer_put>
    132a:	84 e1       	ldi	r24, 0x14	; 20
    132c:	91 e0       	ldi	r25, 0x01	; 1
    132e:	61 e0       	ldi	r22, 0x01	; 1
    1330:	ae 01       	movw	r20, r28
    1332:	4b 5f       	subi	r20, 0xFB	; 251
    1334:	5f 4f       	sbci	r21, 0xFF	; 255
    1336:	35 db       	rcall	.-2454   	; 0x9a2 <BatchBuffer_put>
    1338:	84 e1       	ldi	r24, 0x14	; 20
    133a:	91 e0       	ldi	r25, 0x01	; 1
    133c:	61 e0       	ldi	r22, 0x01	; 1
    133e:	ae 01       	movw	r20, r28
    1340:	4a 5f       	subi	r20, 0xFA	; 250
    1342:	5f 4f       	sbci	r21, 0xFF	; 255
    1344:	2e db       	rcall	.-2468   	; 0x9a2 <BatchBuffer_put>
    1346:	84 e1       	ldi	r24, 0x14	; 20
    1348:	91 e0       	ldi	r25, 0x01	; 1
    134a:	61 e0       	ldi	r22, 0x01	; 1
    134c:	ae 01       	movw	r20, r28
    134e:	49 5f       	subi	r20, 0xF9	; 249
    1350:	5f 4f       	sbci	r21, 0xFF	; 255
    1352:	27 db       	rcall	.-2482   	; 0x9a2 <BatchBuffer_put>
    1354:	84 e1       	ldi	r24, 0x14	; 20
    1356:	91 e0       	ldi	r25, 0x01	; 1
    1358:	61 e0       	ldi	r22, 0x01	; 1
    135a:	ae 01       	movw	r20, r28
    135c:	48 5f       	subi	r20, 0xF8	; 248
    135e:	5f 4f       	sbci	r21, 0xFF	; 255
    1360:	20 db       	rcall	.-2496   	; 0x9a2 <BatchBuffer_put>
    1362:	84 e1       	ldi	r24, 0x14	; 20
    1364:	91 e0       	ldi	r25, 0x01	; 1
    1366:	61 e0       	ldi	r22, 0x01	; 1
    1368:	ae 01       	movw	r20, r28
    136a:	4f 5f       	subi	r20, 0xFF	; 255
    136c:	5f 4f       	sbci	r21, 0xFF	; 255
    136e:	19 db       	rcall	.-2510   	; 0x9a2 <BatchBuffer_put>
    1370:	8c 81       	ldd	r24, Y+4	; 0x04
    1372:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <__data_end>
    1376:	8a 81       	ldd	r24, Y+2	; 0x02
    1378:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <__data_end+0x1>
    137c:	80 ef       	ldi	r24, 0xF0	; 240
    137e:	3d d3       	rcall	.+1658   	; 0x19fa <UART1_putchar>
    1380:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1384:	80 64       	ori	r24, 0x40	; 64
    1386:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    138a:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    138e:	86 fd       	sbrc	r24, 6
    1390:	fc cf       	rjmp	.-8      	; 0x138a <ASA_RS485_set+0xd0>
    1392:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    1396:	8f 7e       	andi	r24, 0xEF	; 239
    1398:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    139c:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <StateMachObj>
    13a0:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    13a4:	80 68       	ori	r24, 0x80	; 128
    13a6:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    13aa:	81 e0       	ldi	r24, 0x01	; 1
    13ac:	80 93 ad 01 	sts	0x01AD, r24	; 0x8001ad <StateMachObj+0x4>
    13b0:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    13b4:	81 30       	cpi	r24, 0x01	; 1
    13b6:	21 f0       	breq	.+8      	; 0x13c0 <ASA_RS485_set+0x106>
    13b8:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <StateMachObj+0x1>
    13bc:	82 30       	cpi	r24, 0x02	; 2
    13be:	c1 f7       	brne	.-16     	; 0x13b0 <ASA_RS485_set+0xf6>
    13c0:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <StateMachObj+0x4>
    13c4:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    13c8:	81 30       	cpi	r24, 0x01	; 1
    13ca:	11 f0       	breq	.+4      	; 0x13d0 <ASA_RS485_set+0x116>
    13cc:	81 e0       	ldi	r24, 0x01	; 1
    13ce:	0a c0       	rjmp	.+20     	; 0x13e4 <ASA_RS485_set+0x12a>
    13d0:	88 e3       	ldi	r24, 0x38	; 56
    13d2:	91 e0       	ldi	r25, 0x01	; 1
    13d4:	61 e0       	ldi	r22, 0x01	; 1
    13d6:	ae 01       	movw	r20, r28
    13d8:	4d 5f       	subi	r20, 0xFD	; 253
    13da:	5f 4f       	sbci	r21, 0xFF	; 255
    13dc:	27 db       	rcall	.-2482   	; 0xa2c <BatchBuffer_get>
    13de:	8b 81       	ldd	r24, Y+3	; 0x03
    13e0:	88 0f       	add	r24, r24
    13e2:	88 0f       	add	r24, r24
    13e4:	28 96       	adiw	r28, 0x08	; 8
    13e6:	0f b6       	in	r0, 0x3f	; 63
    13e8:	f8 94       	cli
    13ea:	de bf       	out	0x3e, r29	; 62
    13ec:	0f be       	out	0x3f, r0	; 63
    13ee:	cd bf       	out	0x3d, r28	; 61
    13f0:	cf 91       	pop	r28
    13f2:	df 91       	pop	r29
    13f4:	0f 91       	pop	r16
    13f6:	ef 90       	pop	r14
    13f8:	08 95       	ret

000013fa <ASA_UART_fgt>:
    13fa:	ef 92       	push	r14
    13fc:	ff 92       	push	r15
    13fe:	0f 93       	push	r16
    1400:	df 93       	push	r29
    1402:	cf 93       	push	r28
    1404:	cd b7       	in	r28, 0x3d	; 61
    1406:	de b7       	in	r29, 0x3e	; 62
    1408:	28 97       	sbiw	r28, 0x08	; 8
    140a:	0f b6       	in	r0, 0x3f	; 63
    140c:	f8 94       	cli
    140e:	de bf       	out	0x3e, r29	; 62
    1410:	0f be       	out	0x3f, r0	; 63
    1412:	cd bf       	out	0x3d, r28	; 61
    1414:	6d 83       	std	Y+5, r22	; 0x05
    1416:	4e 83       	std	Y+6, r20	; 0x06
    1418:	2f 83       	std	Y+7, r18	; 0x07
    141a:	08 87       	std	Y+8, r16	; 0x08
    141c:	19 82       	std	Y+1, r1	; 0x01
    141e:	94 e0       	ldi	r25, 0x04	; 4
    1420:	9a 83       	std	Y+2, r25	; 0x02
    1422:	dd d2       	rcall	.+1466   	; 0x19de <ASA_ID_set>
    1424:	8a 81       	ldd	r24, Y+2	; 0x02
    1426:	99 81       	ldd	r25, Y+1	; 0x01
    1428:	89 0f       	add	r24, r25
    142a:	9e 81       	ldd	r25, Y+6	; 0x06
    142c:	89 0f       	add	r24, r25
    142e:	9f 81       	ldd	r25, Y+7	; 0x07
    1430:	89 0f       	add	r24, r25
    1432:	98 85       	ldd	r25, Y+8	; 0x08
    1434:	89 0f       	add	r24, r25
    1436:	89 83       	std	Y+1, r24	; 0x01
    1438:	84 e1       	ldi	r24, 0x14	; 20
    143a:	91 e0       	ldi	r25, 0x01	; 1
    143c:	61 e0       	ldi	r22, 0x01	; 1
    143e:	ae 01       	movw	r20, r28
    1440:	4b 5f       	subi	r20, 0xFB	; 251
    1442:	5f 4f       	sbci	r21, 0xFF	; 255
    1444:	ae da       	rcall	.-2724   	; 0x9a2 <BatchBuffer_put>
    1446:	84 e1       	ldi	r24, 0x14	; 20
    1448:	91 e0       	ldi	r25, 0x01	; 1
    144a:	61 e0       	ldi	r22, 0x01	; 1
    144c:	ae 01       	movw	r20, r28
    144e:	4e 5f       	subi	r20, 0xFE	; 254
    1450:	5f 4f       	sbci	r21, 0xFF	; 255
    1452:	a7 da       	rcall	.-2738   	; 0x9a2 <BatchBuffer_put>
    1454:	84 e1       	ldi	r24, 0x14	; 20
    1456:	91 e0       	ldi	r25, 0x01	; 1
    1458:	61 e0       	ldi	r22, 0x01	; 1
    145a:	ae 01       	movw	r20, r28
    145c:	4a 5f       	subi	r20, 0xFA	; 250
    145e:	5f 4f       	sbci	r21, 0xFF	; 255
    1460:	a0 da       	rcall	.-2752   	; 0x9a2 <BatchBuffer_put>
    1462:	84 e1       	ldi	r24, 0x14	; 20
    1464:	91 e0       	ldi	r25, 0x01	; 1
    1466:	61 e0       	ldi	r22, 0x01	; 1
    1468:	ae 01       	movw	r20, r28
    146a:	49 5f       	subi	r20, 0xF9	; 249
    146c:	5f 4f       	sbci	r21, 0xFF	; 255
    146e:	99 da       	rcall	.-2766   	; 0x9a2 <BatchBuffer_put>
    1470:	84 e1       	ldi	r24, 0x14	; 20
    1472:	91 e0       	ldi	r25, 0x01	; 1
    1474:	61 e0       	ldi	r22, 0x01	; 1
    1476:	ae 01       	movw	r20, r28
    1478:	48 5f       	subi	r20, 0xF8	; 248
    147a:	5f 4f       	sbci	r21, 0xFF	; 255
    147c:	92 da       	rcall	.-2780   	; 0x9a2 <BatchBuffer_put>
    147e:	84 e1       	ldi	r24, 0x14	; 20
    1480:	91 e0       	ldi	r25, 0x01	; 1
    1482:	61 e0       	ldi	r22, 0x01	; 1
    1484:	ae 01       	movw	r20, r28
    1486:	4f 5f       	subi	r20, 0xFF	; 255
    1488:	5f 4f       	sbci	r21, 0xFF	; 255
    148a:	8b da       	rcall	.-2794   	; 0x9a2 <BatchBuffer_put>
    148c:	8d 81       	ldd	r24, Y+5	; 0x05
    148e:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <__data_end>
    1492:	8a 81       	ldd	r24, Y+2	; 0x02
    1494:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <__data_end+0x1>
    1498:	80 ef       	ldi	r24, 0xF0	; 240
    149a:	af d2       	rcall	.+1374   	; 0x19fa <UART1_putchar>
    149c:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    14a0:	80 64       	ori	r24, 0x40	; 64
    14a2:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    14a6:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    14aa:	86 fd       	sbrc	r24, 6
    14ac:	fc cf       	rjmp	.-8      	; 0x14a6 <ASA_UART_fgt+0xac>
    14ae:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <StateMachObj>
    14b2:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    14b6:	80 68       	ori	r24, 0x80	; 128
    14b8:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    14bc:	81 e0       	ldi	r24, 0x01	; 1
    14be:	80 93 ad 01 	sts	0x01AD, r24	; 0x8001ad <StateMachObj+0x4>
    14c2:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    14c6:	81 30       	cpi	r24, 0x01	; 1
    14c8:	21 f0       	breq	.+8      	; 0x14d2 <ASA_UART_fgt+0xd8>
    14ca:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <StateMachObj+0x1>
    14ce:	82 30       	cpi	r24, 0x02	; 2
    14d0:	c1 f7       	brne	.-16     	; 0x14c2 <ASA_UART_fgt+0xc8>
    14d2:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <StateMachObj+0x4>
    14d6:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    14da:	81 30       	cpi	r24, 0x01	; 1
    14dc:	11 f0       	breq	.+4      	; 0x14e2 <ASA_UART_fgt+0xe8>
    14de:	81 e0       	ldi	r24, 0x01	; 1
    14e0:	17 c0       	rjmp	.+46     	; 0x1510 <ASA_UART_fgt+0x116>
    14e2:	88 e3       	ldi	r24, 0x38	; 56
    14e4:	91 e0       	ldi	r25, 0x01	; 1
    14e6:	61 e0       	ldi	r22, 0x01	; 1
    14e8:	ae 01       	movw	r20, r28
    14ea:	4d 5f       	subi	r20, 0xFD	; 253
    14ec:	5f 4f       	sbci	r21, 0xFF	; 255
    14ee:	9e da       	rcall	.-2756   	; 0xa2c <BatchBuffer_get>
    14f0:	8b 81       	ldd	r24, Y+3	; 0x03
    14f2:	88 23       	and	r24, r24
    14f4:	51 f4       	brne	.+20     	; 0x150a <ASA_UART_fgt+0x110>
    14f6:	88 e3       	ldi	r24, 0x38	; 56
    14f8:	91 e0       	ldi	r25, 0x01	; 1
    14fa:	61 e0       	ldi	r22, 0x01	; 1
    14fc:	ae 01       	movw	r20, r28
    14fe:	4c 5f       	subi	r20, 0xFC	; 252
    1500:	5f 4f       	sbci	r21, 0xFF	; 255
    1502:	94 da       	rcall	.-2776   	; 0xa2c <BatchBuffer_get>
    1504:	8c 81       	ldd	r24, Y+4	; 0x04
    1506:	f7 01       	movw	r30, r14
    1508:	80 83       	st	Z, r24
    150a:	8b 81       	ldd	r24, Y+3	; 0x03
    150c:	88 0f       	add	r24, r24
    150e:	88 0f       	add	r24, r24
    1510:	28 96       	adiw	r28, 0x08	; 8
    1512:	0f b6       	in	r0, 0x3f	; 63
    1514:	f8 94       	cli
    1516:	de bf       	out	0x3e, r29	; 62
    1518:	0f be       	out	0x3f, r0	; 63
    151a:	cd bf       	out	0x3d, r28	; 61
    151c:	cf 91       	pop	r28
    151e:	df 91       	pop	r29
    1520:	0f 91       	pop	r16
    1522:	ff 90       	pop	r15
    1524:	ef 90       	pop	r14
    1526:	08 95       	ret

00001528 <ASA_UART_fpt>:
    1528:	ef 92       	push	r14
    152a:	0f 93       	push	r16
    152c:	df 93       	push	r29
    152e:	cf 93       	push	r28
    1530:	cd b7       	in	r28, 0x3d	; 61
    1532:	de b7       	in	r29, 0x3e	; 62
    1534:	28 97       	sbiw	r28, 0x08	; 8
    1536:	0f b6       	in	r0, 0x3f	; 63
    1538:	f8 94       	cli
    153a:	de bf       	out	0x3e, r29	; 62
    153c:	0f be       	out	0x3f, r0	; 63
    153e:	cd bf       	out	0x3d, r28	; 61
    1540:	6c 83       	std	Y+4, r22	; 0x04
    1542:	4d 83       	std	Y+5, r20	; 0x05
    1544:	2e 83       	std	Y+6, r18	; 0x06
    1546:	0f 83       	std	Y+7, r16	; 0x07
    1548:	e8 86       	std	Y+8, r14	; 0x08
    154a:	19 82       	std	Y+1, r1	; 0x01
    154c:	93 e0       	ldi	r25, 0x03	; 3
    154e:	9a 83       	std	Y+2, r25	; 0x02
    1550:	46 d2       	rcall	.+1164   	; 0x19de <ASA_ID_set>
    1552:	8a 81       	ldd	r24, Y+2	; 0x02
    1554:	99 81       	ldd	r25, Y+1	; 0x01
    1556:	89 0f       	add	r24, r25
    1558:	9d 81       	ldd	r25, Y+5	; 0x05
    155a:	89 0f       	add	r24, r25
    155c:	9e 81       	ldd	r25, Y+6	; 0x06
    155e:	89 0f       	add	r24, r25
    1560:	9f 81       	ldd	r25, Y+7	; 0x07
    1562:	89 0f       	add	r24, r25
    1564:	98 85       	ldd	r25, Y+8	; 0x08
    1566:	89 0f       	add	r24, r25
    1568:	89 83       	std	Y+1, r24	; 0x01
    156a:	84 e1       	ldi	r24, 0x14	; 20
    156c:	91 e0       	ldi	r25, 0x01	; 1
    156e:	61 e0       	ldi	r22, 0x01	; 1
    1570:	ae 01       	movw	r20, r28
    1572:	4c 5f       	subi	r20, 0xFC	; 252
    1574:	5f 4f       	sbci	r21, 0xFF	; 255
    1576:	15 da       	rcall	.-3030   	; 0x9a2 <BatchBuffer_put>
    1578:	84 e1       	ldi	r24, 0x14	; 20
    157a:	91 e0       	ldi	r25, 0x01	; 1
    157c:	61 e0       	ldi	r22, 0x01	; 1
    157e:	ae 01       	movw	r20, r28
    1580:	4e 5f       	subi	r20, 0xFE	; 254
    1582:	5f 4f       	sbci	r21, 0xFF	; 255
    1584:	0e da       	rcall	.-3044   	; 0x9a2 <BatchBuffer_put>
    1586:	84 e1       	ldi	r24, 0x14	; 20
    1588:	91 e0       	ldi	r25, 0x01	; 1
    158a:	61 e0       	ldi	r22, 0x01	; 1
    158c:	ae 01       	movw	r20, r28
    158e:	4b 5f       	subi	r20, 0xFB	; 251
    1590:	5f 4f       	sbci	r21, 0xFF	; 255
    1592:	07 da       	rcall	.-3058   	; 0x9a2 <BatchBuffer_put>
    1594:	84 e1       	ldi	r24, 0x14	; 20
    1596:	91 e0       	ldi	r25, 0x01	; 1
    1598:	61 e0       	ldi	r22, 0x01	; 1
    159a:	ae 01       	movw	r20, r28
    159c:	4a 5f       	subi	r20, 0xFA	; 250
    159e:	5f 4f       	sbci	r21, 0xFF	; 255
    15a0:	00 da       	rcall	.-3072   	; 0x9a2 <BatchBuffer_put>
    15a2:	84 e1       	ldi	r24, 0x14	; 20
    15a4:	91 e0       	ldi	r25, 0x01	; 1
    15a6:	61 e0       	ldi	r22, 0x01	; 1
    15a8:	ae 01       	movw	r20, r28
    15aa:	49 5f       	subi	r20, 0xF9	; 249
    15ac:	5f 4f       	sbci	r21, 0xFF	; 255
    15ae:	f9 d9       	rcall	.-3086   	; 0x9a2 <BatchBuffer_put>
    15b0:	84 e1       	ldi	r24, 0x14	; 20
    15b2:	91 e0       	ldi	r25, 0x01	; 1
    15b4:	61 e0       	ldi	r22, 0x01	; 1
    15b6:	ae 01       	movw	r20, r28
    15b8:	48 5f       	subi	r20, 0xF8	; 248
    15ba:	5f 4f       	sbci	r21, 0xFF	; 255
    15bc:	f2 d9       	rcall	.-3100   	; 0x9a2 <BatchBuffer_put>
    15be:	84 e1       	ldi	r24, 0x14	; 20
    15c0:	91 e0       	ldi	r25, 0x01	; 1
    15c2:	61 e0       	ldi	r22, 0x01	; 1
    15c4:	ae 01       	movw	r20, r28
    15c6:	4f 5f       	subi	r20, 0xFF	; 255
    15c8:	5f 4f       	sbci	r21, 0xFF	; 255
    15ca:	eb d9       	rcall	.-3114   	; 0x9a2 <BatchBuffer_put>
    15cc:	8c 81       	ldd	r24, Y+4	; 0x04
    15ce:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <__data_end>
    15d2:	8a 81       	ldd	r24, Y+2	; 0x02
    15d4:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <__data_end+0x1>
    15d8:	80 ef       	ldi	r24, 0xF0	; 240
    15da:	0f d2       	rcall	.+1054   	; 0x19fa <UART1_putchar>
    15dc:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    15e0:	80 64       	ori	r24, 0x40	; 64
    15e2:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    15e6:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    15ea:	86 fd       	sbrc	r24, 6
    15ec:	fc cf       	rjmp	.-8      	; 0x15e6 <ASA_UART_fpt+0xbe>
    15ee:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <StateMachObj>
    15f2:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    15f6:	80 68       	ori	r24, 0x80	; 128
    15f8:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    15fc:	81 e0       	ldi	r24, 0x01	; 1
    15fe:	80 93 ad 01 	sts	0x01AD, r24	; 0x8001ad <StateMachObj+0x4>
    1602:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    1606:	81 30       	cpi	r24, 0x01	; 1
    1608:	21 f0       	breq	.+8      	; 0x1612 <ASA_UART_fpt+0xea>
    160a:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <StateMachObj+0x1>
    160e:	82 30       	cpi	r24, 0x02	; 2
    1610:	c1 f7       	brne	.-16     	; 0x1602 <ASA_UART_fpt+0xda>
    1612:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <StateMachObj+0x4>
    1616:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    161a:	81 30       	cpi	r24, 0x01	; 1
    161c:	11 f0       	breq	.+4      	; 0x1622 <ASA_UART_fpt+0xfa>
    161e:	81 e0       	ldi	r24, 0x01	; 1
    1620:	0a c0       	rjmp	.+20     	; 0x1636 <ASA_UART_fpt+0x10e>
    1622:	88 e3       	ldi	r24, 0x38	; 56
    1624:	91 e0       	ldi	r25, 0x01	; 1
    1626:	61 e0       	ldi	r22, 0x01	; 1
    1628:	ae 01       	movw	r20, r28
    162a:	4d 5f       	subi	r20, 0xFD	; 253
    162c:	5f 4f       	sbci	r21, 0xFF	; 255
    162e:	fe d9       	rcall	.-3076   	; 0xa2c <BatchBuffer_get>
    1630:	8b 81       	ldd	r24, Y+3	; 0x03
    1632:	88 0f       	add	r24, r24
    1634:	88 0f       	add	r24, r24
    1636:	28 96       	adiw	r28, 0x08	; 8
    1638:	0f b6       	in	r0, 0x3f	; 63
    163a:	f8 94       	cli
    163c:	de bf       	out	0x3e, r29	; 62
    163e:	0f be       	out	0x3f, r0	; 63
    1640:	cd bf       	out	0x3d, r28	; 61
    1642:	cf 91       	pop	r28
    1644:	df 91       	pop	r29
    1646:	0f 91       	pop	r16
    1648:	ef 90       	pop	r14
    164a:	08 95       	ret

0000164c <ASA_UART_get>:
    164c:	cf 92       	push	r12
    164e:	df 92       	push	r13
    1650:	ef 92       	push	r14
    1652:	ff 92       	push	r15
    1654:	0f 93       	push	r16
    1656:	1f 93       	push	r17
    1658:	df 93       	push	r29
    165a:	cf 93       	push	r28
    165c:	cd b7       	in	r28, 0x3d	; 61
    165e:	de b7       	in	r29, 0x3e	; 62
    1660:	27 97       	sbiw	r28, 0x07	; 7
    1662:	0f b6       	in	r0, 0x3f	; 63
    1664:	f8 94       	cli
    1666:	de bf       	out	0x3e, r29	; 62
    1668:	0f be       	out	0x3f, r0	; 63
    166a:	cd bf       	out	0x3d, r28	; 61
    166c:	6d 83       	std	Y+5, r22	; 0x05
    166e:	4e 83       	std	Y+6, r20	; 0x06
    1670:	2f 83       	std	Y+7, r18	; 0x07
    1672:	68 01       	movw	r12, r16
    1674:	19 82       	std	Y+1, r1	; 0x01
    1676:	92 e0       	ldi	r25, 0x02	; 2
    1678:	9a 83       	std	Y+2, r25	; 0x02
    167a:	b1 d1       	rcall	.+866    	; 0x19de <ASA_ID_set>
    167c:	8a 81       	ldd	r24, Y+2	; 0x02
    167e:	99 81       	ldd	r25, Y+1	; 0x01
    1680:	89 0f       	add	r24, r25
    1682:	9e 81       	ldd	r25, Y+6	; 0x06
    1684:	89 0f       	add	r24, r25
    1686:	9f 81       	ldd	r25, Y+7	; 0x07
    1688:	89 0f       	add	r24, r25
    168a:	89 83       	std	Y+1, r24	; 0x01
    168c:	84 e1       	ldi	r24, 0x14	; 20
    168e:	91 e0       	ldi	r25, 0x01	; 1
    1690:	61 e0       	ldi	r22, 0x01	; 1
    1692:	ae 01       	movw	r20, r28
    1694:	4b 5f       	subi	r20, 0xFB	; 251
    1696:	5f 4f       	sbci	r21, 0xFF	; 255
    1698:	84 d9       	rcall	.-3320   	; 0x9a2 <BatchBuffer_put>
    169a:	84 e1       	ldi	r24, 0x14	; 20
    169c:	91 e0       	ldi	r25, 0x01	; 1
    169e:	61 e0       	ldi	r22, 0x01	; 1
    16a0:	ae 01       	movw	r20, r28
    16a2:	4e 5f       	subi	r20, 0xFE	; 254
    16a4:	5f 4f       	sbci	r21, 0xFF	; 255
    16a6:	7d d9       	rcall	.-3334   	; 0x9a2 <BatchBuffer_put>
    16a8:	84 e1       	ldi	r24, 0x14	; 20
    16aa:	91 e0       	ldi	r25, 0x01	; 1
    16ac:	61 e0       	ldi	r22, 0x01	; 1
    16ae:	ae 01       	movw	r20, r28
    16b0:	4a 5f       	subi	r20, 0xFA	; 250
    16b2:	5f 4f       	sbci	r21, 0xFF	; 255
    16b4:	76 d9       	rcall	.-3348   	; 0x9a2 <BatchBuffer_put>
    16b6:	84 e1       	ldi	r24, 0x14	; 20
    16b8:	91 e0       	ldi	r25, 0x01	; 1
    16ba:	61 e0       	ldi	r22, 0x01	; 1
    16bc:	ae 01       	movw	r20, r28
    16be:	49 5f       	subi	r20, 0xF9	; 249
    16c0:	5f 4f       	sbci	r21, 0xFF	; 255
    16c2:	6f d9       	rcall	.-3362   	; 0x9a2 <BatchBuffer_put>
    16c4:	84 e1       	ldi	r24, 0x14	; 20
    16c6:	91 e0       	ldi	r25, 0x01	; 1
    16c8:	61 e0       	ldi	r22, 0x01	; 1
    16ca:	ae 01       	movw	r20, r28
    16cc:	4f 5f       	subi	r20, 0xFF	; 255
    16ce:	5f 4f       	sbci	r21, 0xFF	; 255
    16d0:	68 d9       	rcall	.-3376   	; 0x9a2 <BatchBuffer_put>
    16d2:	8d 81       	ldd	r24, Y+5	; 0x05
    16d4:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <__data_end>
    16d8:	8a 81       	ldd	r24, Y+2	; 0x02
    16da:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <__data_end+0x1>
    16de:	8f 81       	ldd	r24, Y+7	; 0x07
    16e0:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <__data_end+0x3>
    16e4:	80 ef       	ldi	r24, 0xF0	; 240
    16e6:	89 d1       	rcall	.+786    	; 0x19fa <UART1_putchar>
    16e8:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    16ec:	80 64       	ori	r24, 0x40	; 64
    16ee:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    16f2:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    16f6:	86 fd       	sbrc	r24, 6
    16f8:	fc cf       	rjmp	.-8      	; 0x16f2 <ASA_UART_get+0xa6>
    16fa:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <StateMachObj>
    16fe:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1702:	80 68       	ori	r24, 0x80	; 128
    1704:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1708:	81 e0       	ldi	r24, 0x01	; 1
    170a:	80 93 ad 01 	sts	0x01AD, r24	; 0x8001ad <StateMachObj+0x4>
    170e:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    1712:	81 30       	cpi	r24, 0x01	; 1
    1714:	21 f0       	breq	.+8      	; 0x171e <ASA_UART_get+0xd2>
    1716:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <StateMachObj+0x1>
    171a:	82 30       	cpi	r24, 0x02	; 2
    171c:	c1 f7       	brne	.-16     	; 0x170e <ASA_UART_get+0xc2>
    171e:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <StateMachObj+0x4>
    1722:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    1726:	81 30       	cpi	r24, 0x01	; 1
    1728:	11 f0       	breq	.+4      	; 0x172e <ASA_UART_get+0xe2>
    172a:	81 e0       	ldi	r24, 0x01	; 1
    172c:	26 c0       	rjmp	.+76     	; 0x177a <ASA_UART_get+0x12e>
    172e:	88 e3       	ldi	r24, 0x38	; 56
    1730:	91 e0       	ldi	r25, 0x01	; 1
    1732:	61 e0       	ldi	r22, 0x01	; 1
    1734:	ae 01       	movw	r20, r28
    1736:	4d 5f       	subi	r20, 0xFD	; 253
    1738:	5f 4f       	sbci	r21, 0xFF	; 255
    173a:	78 d9       	rcall	.-3344   	; 0xa2c <BatchBuffer_get>
    173c:	8b 81       	ldd	r24, Y+3	; 0x03
    173e:	88 23       	and	r24, r24
    1740:	c9 f4       	brne	.+50     	; 0x1774 <ASA_UART_get+0x128>
    1742:	00 e0       	ldi	r16, 0x00	; 0
    1744:	10 e0       	ldi	r17, 0x00	; 0
    1746:	94 e0       	ldi	r25, 0x04	; 4
    1748:	e9 2e       	mov	r14, r25
    174a:	f1 2c       	mov	r15, r1
    174c:	ec 0e       	add	r14, r28
    174e:	fd 1e       	adc	r15, r29
    1750:	0c c0       	rjmp	.+24     	; 0x176a <ASA_UART_get+0x11e>
    1752:	88 e3       	ldi	r24, 0x38	; 56
    1754:	91 e0       	ldi	r25, 0x01	; 1
    1756:	61 e0       	ldi	r22, 0x01	; 1
    1758:	a7 01       	movw	r20, r14
    175a:	68 d9       	rcall	.-3376   	; 0xa2c <BatchBuffer_get>
    175c:	f6 01       	movw	r30, r12
    175e:	e0 0f       	add	r30, r16
    1760:	f1 1f       	adc	r31, r17
    1762:	8c 81       	ldd	r24, Y+4	; 0x04
    1764:	80 83       	st	Z, r24
    1766:	0f 5f       	subi	r16, 0xFF	; 255
    1768:	1f 4f       	sbci	r17, 0xFF	; 255
    176a:	8f 81       	ldd	r24, Y+7	; 0x07
    176c:	90 e0       	ldi	r25, 0x00	; 0
    176e:	08 17       	cp	r16, r24
    1770:	19 07       	cpc	r17, r25
    1772:	7c f3       	brlt	.-34     	; 0x1752 <ASA_UART_get+0x106>
    1774:	8b 81       	ldd	r24, Y+3	; 0x03
    1776:	88 0f       	add	r24, r24
    1778:	88 0f       	add	r24, r24
    177a:	27 96       	adiw	r28, 0x07	; 7
    177c:	0f b6       	in	r0, 0x3f	; 63
    177e:	f8 94       	cli
    1780:	de bf       	out	0x3e, r29	; 62
    1782:	0f be       	out	0x3f, r0	; 63
    1784:	cd bf       	out	0x3d, r28	; 61
    1786:	cf 91       	pop	r28
    1788:	df 91       	pop	r29
    178a:	1f 91       	pop	r17
    178c:	0f 91       	pop	r16
    178e:	ff 90       	pop	r15
    1790:	ef 90       	pop	r14
    1792:	df 90       	pop	r13
    1794:	cf 90       	pop	r12
    1796:	08 95       	ret

00001798 <ASA_UART_put>:
    1798:	0f 93       	push	r16
    179a:	1f 93       	push	r17
    179c:	df 93       	push	r29
    179e:	cf 93       	push	r28
    17a0:	00 d0       	rcall	.+0      	; 0x17a2 <ASA_UART_put+0xa>
    17a2:	00 d0       	rcall	.+0      	; 0x17a4 <ASA_UART_put+0xc>
    17a4:	00 d0       	rcall	.+0      	; 0x17a6 <ASA_UART_put+0xe>
    17a6:	cd b7       	in	r28, 0x3d	; 61
    17a8:	de b7       	in	r29, 0x3e	; 62
    17aa:	6c 83       	std	Y+4, r22	; 0x04
    17ac:	4d 83       	std	Y+5, r20	; 0x05
    17ae:	2e 83       	std	Y+6, r18	; 0x06
    17b0:	19 82       	std	Y+1, r1	; 0x01
    17b2:	91 e0       	ldi	r25, 0x01	; 1
    17b4:	9a 83       	std	Y+2, r25	; 0x02
    17b6:	13 d1       	rcall	.+550    	; 0x19de <ASA_ID_set>
    17b8:	8a 81       	ldd	r24, Y+2	; 0x02
    17ba:	99 81       	ldd	r25, Y+1	; 0x01
    17bc:	89 0f       	add	r24, r25
    17be:	9d 81       	ldd	r25, Y+5	; 0x05
    17c0:	89 0f       	add	r24, r25
    17c2:	9e 81       	ldd	r25, Y+6	; 0x06
    17c4:	89 0f       	add	r24, r25
    17c6:	89 83       	std	Y+1, r24	; 0x01
    17c8:	f8 01       	movw	r30, r16
    17ca:	98 01       	movw	r18, r16
    17cc:	29 0f       	add	r18, r25
    17ce:	31 1d       	adc	r19, r1
    17d0:	04 c0       	rjmp	.+8      	; 0x17da <ASA_UART_put+0x42>
    17d2:	89 81       	ldd	r24, Y+1	; 0x01
    17d4:	91 91       	ld	r25, Z+
    17d6:	89 0f       	add	r24, r25
    17d8:	89 83       	std	Y+1, r24	; 0x01
    17da:	e2 17       	cp	r30, r18
    17dc:	f3 07       	cpc	r31, r19
    17de:	c9 f7       	brne	.-14     	; 0x17d2 <ASA_UART_put+0x3a>
    17e0:	84 e1       	ldi	r24, 0x14	; 20
    17e2:	91 e0       	ldi	r25, 0x01	; 1
    17e4:	61 e0       	ldi	r22, 0x01	; 1
    17e6:	ae 01       	movw	r20, r28
    17e8:	4c 5f       	subi	r20, 0xFC	; 252
    17ea:	5f 4f       	sbci	r21, 0xFF	; 255
    17ec:	da d8       	rcall	.-3660   	; 0x9a2 <BatchBuffer_put>
    17ee:	84 e1       	ldi	r24, 0x14	; 20
    17f0:	91 e0       	ldi	r25, 0x01	; 1
    17f2:	61 e0       	ldi	r22, 0x01	; 1
    17f4:	ae 01       	movw	r20, r28
    17f6:	4e 5f       	subi	r20, 0xFE	; 254
    17f8:	5f 4f       	sbci	r21, 0xFF	; 255
    17fa:	d3 d8       	rcall	.-3674   	; 0x9a2 <BatchBuffer_put>
    17fc:	84 e1       	ldi	r24, 0x14	; 20
    17fe:	91 e0       	ldi	r25, 0x01	; 1
    1800:	61 e0       	ldi	r22, 0x01	; 1
    1802:	ae 01       	movw	r20, r28
    1804:	4b 5f       	subi	r20, 0xFB	; 251
    1806:	5f 4f       	sbci	r21, 0xFF	; 255
    1808:	cc d8       	rcall	.-3688   	; 0x9a2 <BatchBuffer_put>
    180a:	84 e1       	ldi	r24, 0x14	; 20
    180c:	91 e0       	ldi	r25, 0x01	; 1
    180e:	61 e0       	ldi	r22, 0x01	; 1
    1810:	ae 01       	movw	r20, r28
    1812:	4a 5f       	subi	r20, 0xFA	; 250
    1814:	5f 4f       	sbci	r21, 0xFF	; 255
    1816:	c5 d8       	rcall	.-3702   	; 0x9a2 <BatchBuffer_put>
    1818:	84 e1       	ldi	r24, 0x14	; 20
    181a:	91 e0       	ldi	r25, 0x01	; 1
    181c:	6e 81       	ldd	r22, Y+6	; 0x06
    181e:	a8 01       	movw	r20, r16
    1820:	c0 d8       	rcall	.-3712   	; 0x9a2 <BatchBuffer_put>
    1822:	84 e1       	ldi	r24, 0x14	; 20
    1824:	91 e0       	ldi	r25, 0x01	; 1
    1826:	61 e0       	ldi	r22, 0x01	; 1
    1828:	ae 01       	movw	r20, r28
    182a:	4f 5f       	subi	r20, 0xFF	; 255
    182c:	5f 4f       	sbci	r21, 0xFF	; 255
    182e:	b9 d8       	rcall	.-3726   	; 0x9a2 <BatchBuffer_put>
    1830:	8c 81       	ldd	r24, Y+4	; 0x04
    1832:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <__data_end>
    1836:	8a 81       	ldd	r24, Y+2	; 0x02
    1838:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <__data_end+0x1>
    183c:	80 ef       	ldi	r24, 0xF0	; 240
    183e:	dd d0       	rcall	.+442    	; 0x19fa <UART1_putchar>
    1840:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1844:	80 64       	ori	r24, 0x40	; 64
    1846:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    184a:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    184e:	86 fd       	sbrc	r24, 6
    1850:	fc cf       	rjmp	.-8      	; 0x184a <ASA_UART_put+0xb2>
    1852:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <StateMachObj>
    1856:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    185a:	80 68       	ori	r24, 0x80	; 128
    185c:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1860:	81 e0       	ldi	r24, 0x01	; 1
    1862:	80 93 ad 01 	sts	0x01AD, r24	; 0x8001ad <StateMachObj+0x4>
    1866:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    186a:	81 30       	cpi	r24, 0x01	; 1
    186c:	21 f0       	breq	.+8      	; 0x1876 <ASA_UART_put+0xde>
    186e:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <StateMachObj+0x1>
    1872:	82 30       	cpi	r24, 0x02	; 2
    1874:	c1 f7       	brne	.-16     	; 0x1866 <ASA_UART_put+0xce>
    1876:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <StateMachObj+0x4>
    187a:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    187e:	81 30       	cpi	r24, 0x01	; 1
    1880:	11 f0       	breq	.+4      	; 0x1886 <ASA_UART_put+0xee>
    1882:	81 e0       	ldi	r24, 0x01	; 1
    1884:	0a c0       	rjmp	.+20     	; 0x189a <ASA_UART_put+0x102>
    1886:	88 e3       	ldi	r24, 0x38	; 56
    1888:	91 e0       	ldi	r25, 0x01	; 1
    188a:	61 e0       	ldi	r22, 0x01	; 1
    188c:	ae 01       	movw	r20, r28
    188e:	4d 5f       	subi	r20, 0xFD	; 253
    1890:	5f 4f       	sbci	r21, 0xFF	; 255
    1892:	cc d8       	rcall	.-3688   	; 0xa2c <BatchBuffer_get>
    1894:	8b 81       	ldd	r24, Y+3	; 0x03
    1896:	88 0f       	add	r24, r24
    1898:	88 0f       	add	r24, r24
    189a:	26 96       	adiw	r28, 0x06	; 6
    189c:	0f b6       	in	r0, 0x3f	; 63
    189e:	f8 94       	cli
    18a0:	de bf       	out	0x3e, r29	; 62
    18a2:	0f be       	out	0x3f, r0	; 63
    18a4:	cd bf       	out	0x3d, r28	; 61
    18a6:	cf 91       	pop	r28
    18a8:	df 91       	pop	r29
    18aa:	1f 91       	pop	r17
    18ac:	0f 91       	pop	r16
    18ae:	08 95       	ret

000018b0 <ASA_UART_set>:
    18b0:	ef 92       	push	r14
    18b2:	0f 93       	push	r16
    18b4:	df 93       	push	r29
    18b6:	cf 93       	push	r28
    18b8:	cd b7       	in	r28, 0x3d	; 61
    18ba:	de b7       	in	r29, 0x3e	; 62
    18bc:	28 97       	sbiw	r28, 0x08	; 8
    18be:	0f b6       	in	r0, 0x3f	; 63
    18c0:	f8 94       	cli
    18c2:	de bf       	out	0x3e, r29	; 62
    18c4:	0f be       	out	0x3f, r0	; 63
    18c6:	cd bf       	out	0x3d, r28	; 61
    18c8:	6c 83       	std	Y+4, r22	; 0x04
    18ca:	4d 83       	std	Y+5, r20	; 0x05
    18cc:	2e 83       	std	Y+6, r18	; 0x06
    18ce:	0f 83       	std	Y+7, r16	; 0x07
    18d0:	e8 86       	std	Y+8, r14	; 0x08
    18d2:	19 82       	std	Y+1, r1	; 0x01
    18d4:	1a 82       	std	Y+2, r1	; 0x02
    18d6:	83 d0       	rcall	.+262    	; 0x19de <ASA_ID_set>
    18d8:	8a 81       	ldd	r24, Y+2	; 0x02
    18da:	99 81       	ldd	r25, Y+1	; 0x01
    18dc:	89 0f       	add	r24, r25
    18de:	9d 81       	ldd	r25, Y+5	; 0x05
    18e0:	89 0f       	add	r24, r25
    18e2:	9e 81       	ldd	r25, Y+6	; 0x06
    18e4:	89 0f       	add	r24, r25
    18e6:	9f 81       	ldd	r25, Y+7	; 0x07
    18e8:	89 0f       	add	r24, r25
    18ea:	98 85       	ldd	r25, Y+8	; 0x08
    18ec:	89 0f       	add	r24, r25
    18ee:	89 83       	std	Y+1, r24	; 0x01
    18f0:	84 e1       	ldi	r24, 0x14	; 20
    18f2:	91 e0       	ldi	r25, 0x01	; 1
    18f4:	61 e0       	ldi	r22, 0x01	; 1
    18f6:	ae 01       	movw	r20, r28
    18f8:	4c 5f       	subi	r20, 0xFC	; 252
    18fa:	5f 4f       	sbci	r21, 0xFF	; 255
    18fc:	52 d8       	rcall	.-3932   	; 0x9a2 <BatchBuffer_put>
    18fe:	84 e1       	ldi	r24, 0x14	; 20
    1900:	91 e0       	ldi	r25, 0x01	; 1
    1902:	61 e0       	ldi	r22, 0x01	; 1
    1904:	ae 01       	movw	r20, r28
    1906:	4e 5f       	subi	r20, 0xFE	; 254
    1908:	5f 4f       	sbci	r21, 0xFF	; 255
    190a:	4b d8       	rcall	.-3946   	; 0x9a2 <BatchBuffer_put>
    190c:	84 e1       	ldi	r24, 0x14	; 20
    190e:	91 e0       	ldi	r25, 0x01	; 1
    1910:	61 e0       	ldi	r22, 0x01	; 1
    1912:	ae 01       	movw	r20, r28
    1914:	4b 5f       	subi	r20, 0xFB	; 251
    1916:	5f 4f       	sbci	r21, 0xFF	; 255
    1918:	44 d8       	rcall	.-3960   	; 0x9a2 <BatchBuffer_put>
    191a:	84 e1       	ldi	r24, 0x14	; 20
    191c:	91 e0       	ldi	r25, 0x01	; 1
    191e:	61 e0       	ldi	r22, 0x01	; 1
    1920:	ae 01       	movw	r20, r28
    1922:	4a 5f       	subi	r20, 0xFA	; 250
    1924:	5f 4f       	sbci	r21, 0xFF	; 255
    1926:	3d d8       	rcall	.-3974   	; 0x9a2 <BatchBuffer_put>
    1928:	84 e1       	ldi	r24, 0x14	; 20
    192a:	91 e0       	ldi	r25, 0x01	; 1
    192c:	61 e0       	ldi	r22, 0x01	; 1
    192e:	ae 01       	movw	r20, r28
    1930:	49 5f       	subi	r20, 0xF9	; 249
    1932:	5f 4f       	sbci	r21, 0xFF	; 255
    1934:	36 d8       	rcall	.-3988   	; 0x9a2 <BatchBuffer_put>
    1936:	84 e1       	ldi	r24, 0x14	; 20
    1938:	91 e0       	ldi	r25, 0x01	; 1
    193a:	61 e0       	ldi	r22, 0x01	; 1
    193c:	ae 01       	movw	r20, r28
    193e:	48 5f       	subi	r20, 0xF8	; 248
    1940:	5f 4f       	sbci	r21, 0xFF	; 255
    1942:	2f d8       	rcall	.-4002   	; 0x9a2 <BatchBuffer_put>
    1944:	84 e1       	ldi	r24, 0x14	; 20
    1946:	91 e0       	ldi	r25, 0x01	; 1
    1948:	61 e0       	ldi	r22, 0x01	; 1
    194a:	ae 01       	movw	r20, r28
    194c:	4f 5f       	subi	r20, 0xFF	; 255
    194e:	5f 4f       	sbci	r21, 0xFF	; 255
    1950:	28 d8       	rcall	.-4016   	; 0x9a2 <BatchBuffer_put>
    1952:	8c 81       	ldd	r24, Y+4	; 0x04
    1954:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <__data_end>
    1958:	8a 81       	ldd	r24, Y+2	; 0x02
    195a:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <__data_end+0x1>
    195e:	80 ef       	ldi	r24, 0xF0	; 240
    1960:	4c d0       	rcall	.+152    	; 0x19fa <UART1_putchar>
    1962:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1966:	80 64       	ori	r24, 0x40	; 64
    1968:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    196c:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1970:	86 fd       	sbrc	r24, 6
    1972:	fc cf       	rjmp	.-8      	; 0x196c <ASA_UART_set+0xbc>
    1974:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <StateMachObj>
    1978:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    197c:	80 68       	ori	r24, 0x80	; 128
    197e:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1982:	81 e0       	ldi	r24, 0x01	; 1
    1984:	80 93 ad 01 	sts	0x01AD, r24	; 0x8001ad <StateMachObj+0x4>
    1988:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    198c:	81 30       	cpi	r24, 0x01	; 1
    198e:	21 f0       	breq	.+8      	; 0x1998 <ASA_UART_set+0xe8>
    1990:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <StateMachObj+0x1>
    1994:	82 30       	cpi	r24, 0x02	; 2
    1996:	c1 f7       	brne	.-16     	; 0x1988 <ASA_UART_set+0xd8>
    1998:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <StateMachObj+0x4>
    199c:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    19a0:	81 30       	cpi	r24, 0x01	; 1
    19a2:	11 f0       	breq	.+4      	; 0x19a8 <ASA_UART_set+0xf8>
    19a4:	81 e0       	ldi	r24, 0x01	; 1
    19a6:	0a c0       	rjmp	.+20     	; 0x19bc <ASA_UART_set+0x10c>
    19a8:	88 e3       	ldi	r24, 0x38	; 56
    19aa:	91 e0       	ldi	r25, 0x01	; 1
    19ac:	61 e0       	ldi	r22, 0x01	; 1
    19ae:	ae 01       	movw	r20, r28
    19b0:	4d 5f       	subi	r20, 0xFD	; 253
    19b2:	5f 4f       	sbci	r21, 0xFF	; 255
    19b4:	3b d8       	rcall	.-3978   	; 0xa2c <BatchBuffer_get>
    19b6:	8b 81       	ldd	r24, Y+3	; 0x03
    19b8:	88 0f       	add	r24, r24
    19ba:	88 0f       	add	r24, r24
    19bc:	28 96       	adiw	r28, 0x08	; 8
    19be:	0f b6       	in	r0, 0x3f	; 63
    19c0:	f8 94       	cli
    19c2:	de bf       	out	0x3e, r29	; 62
    19c4:	0f be       	out	0x3f, r0	; 63
    19c6:	cd bf       	out	0x3d, r28	; 61
    19c8:	cf 91       	pop	r28
    19ca:	df 91       	pop	r29
    19cc:	0f 91       	pop	r16
    19ce:	ef 90       	pop	r14
    19d0:	08 95       	ret

000019d2 <ASA_ID_check>:
    19d2:	90 e0       	ldi	r25, 0x00	; 0
    19d4:	88 30       	cpi	r24, 0x08	; 8
    19d6:	08 f0       	brcs	.+2      	; 0x19da <ASA_ID_check+0x8>
    19d8:	91 e0       	ldi	r25, 0x01	; 1
    19da:	89 2f       	mov	r24, r25
    19dc:	08 95       	ret

000019de <ASA_ID_set>:
    19de:	98 2f       	mov	r25, r24
    19e0:	88 30       	cpi	r24, 0x08	; 8
    19e2:	10 f0       	brcs	.+4      	; 0x19e8 <ASA_ID_set+0xa>
    19e4:	81 e0       	ldi	r24, 0x01	; 1
    19e6:	08 95       	ret
    19e8:	88 b3       	in	r24, 0x18	; 24
    19ea:	92 95       	swap	r25
    19ec:	99 0f       	add	r25, r25
    19ee:	90 7e       	andi	r25, 0xE0	; 224
    19f0:	8f 71       	andi	r24, 0x1F	; 31
    19f2:	89 2b       	or	r24, r25
    19f4:	88 bb       	out	0x18, r24	; 24
    19f6:	80 e0       	ldi	r24, 0x00	; 0
    19f8:	08 95       	ret

000019fa <UART1_putchar>:
    19fa:	98 2f       	mov	r25, r24
    19fc:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
    1a00:	85 ff       	sbrs	r24, 5
    1a02:	fc cf       	rjmp	.-8      	; 0x19fc <UART1_putchar+0x2>
    1a04:	90 93 9c 00 	sts	0x009C, r25	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1a08:	83 eb       	ldi	r24, 0xB3	; 179
    1a0a:	92 e0       	ldi	r25, 0x02	; 2
    1a0c:	01 97       	sbiw	r24, 0x01	; 1
    1a0e:	f1 f7       	brne	.-4      	; 0x1a0c <UART1_putchar+0x12>
    1a10:	08 95       	ret

00001a12 <UART1_getchar>:
    1a12:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
    1a16:	87 ff       	sbrs	r24, 7
    1a18:	fc cf       	rjmp	.-8      	; 0x1a12 <UART1_getchar>
    1a1a:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
    1a1e:	08 95       	ret

00001a20 <SPI_Transfer>:
    1a20:	8f b9       	out	0x0f, r24	; 15
    1a22:	77 9b       	sbis	0x0e, 7	; 14
    1a24:	fe cf       	rjmp	.-4      	; 0x1a22 <SPI_Transfer+0x2>
    1a26:	8f b1       	in	r24, 0x0f	; 15
    1a28:	08 95       	ret

00001a2a <SPI_Receive>:
    1a2a:	1f b8       	out	0x0f, r1	; 15
    1a2c:	77 9b       	sbis	0x0e, 7	; 14
    1a2e:	fe cf       	rjmp	.-4      	; 0x1a2c <SPI_Receive+0x2>
    1a30:	8f b1       	in	r24, 0x0f	; 15
    1a32:	08 95       	ret

00001a34 <ASA_putchar>:
    1a34:	1f 93       	push	r17
    1a36:	16 2f       	mov	r17, r22
    1a38:	d2 df       	rcall	.-92     	; 0x19de <ASA_ID_set>
    1a3a:	8d e3       	ldi	r24, 0x3D	; 61
    1a3c:	93 e0       	ldi	r25, 0x03	; 3
    1a3e:	01 97       	sbiw	r24, 0x01	; 1
    1a40:	f1 f7       	brne	.-4      	; 0x1a3e <ASA_putchar+0xa>
    1a42:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
    1a46:	85 ff       	sbrs	r24, 5
    1a48:	fc cf       	rjmp	.-8      	; 0x1a42 <ASA_putchar+0xe>
    1a4a:	10 93 9c 00 	sts	0x009C, r17	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
    1a4e:	83 eb       	ldi	r24, 0xB3	; 179
    1a50:	92 e0       	ldi	r25, 0x02	; 2
    1a52:	01 97       	sbiw	r24, 0x01	; 1
    1a54:	f1 f7       	brne	.-4      	; 0x1a52 <ASA_putchar+0x1e>
    1a56:	80 e0       	ldi	r24, 0x00	; 0
    1a58:	1f 91       	pop	r17
    1a5a:	08 95       	ret

00001a5c <ASA_getchar>:
    1a5c:	cf 93       	push	r28
    1a5e:	df 93       	push	r29
    1a60:	eb 01       	movw	r28, r22
    1a62:	bd df       	rcall	.-134    	; 0x19de <ASA_ID_set>
    1a64:	8d e3       	ldi	r24, 0x3D	; 61
    1a66:	93 e0       	ldi	r25, 0x03	; 3
    1a68:	01 97       	sbiw	r24, 0x01	; 1
    1a6a:	f1 f7       	brne	.-4      	; 0x1a68 <ASA_getchar+0xc>
    1a6c:	20 e0       	ldi	r18, 0x00	; 0
    1a6e:	30 e0       	ldi	r19, 0x00	; 0
    1a70:	08 c0       	rjmp	.+16     	; 0x1a82 <ASA_getchar+0x26>
    1a72:	2f 5f       	subi	r18, 0xFF	; 255
    1a74:	3f 4f       	sbci	r19, 0xFF	; 255
    1a76:	8f ef       	ldi	r24, 0xFF	; 255
    1a78:	2f 3f       	cpi	r18, 0xFF	; 255
    1a7a:	38 07       	cpc	r19, r24
    1a7c:	11 f4       	brne	.+4      	; 0x1a82 <ASA_getchar+0x26>
    1a7e:	81 e0       	ldi	r24, 0x01	; 1
    1a80:	08 c0       	rjmp	.+16     	; 0x1a92 <ASA_getchar+0x36>
    1a82:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
    1a86:	87 ff       	sbrs	r24, 7
    1a88:	f4 cf       	rjmp	.-24     	; 0x1a72 <ASA_getchar+0x16>
    1a8a:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
    1a8e:	88 83       	st	Y, r24
    1a90:	80 e0       	ldi	r24, 0x00	; 0
    1a92:	df 91       	pop	r29
    1a94:	cf 91       	pop	r28
    1a96:	08 95       	ret

00001a98 <PC_putchar>:
    1a98:	5d 9b       	sbis	0x0b, 5	; 11
    1a9a:	fe cf       	rjmp	.-4      	; 0x1a98 <PC_putchar>
    1a9c:	8c b9       	out	0x0c, r24	; 12
    1a9e:	08 95       	ret

00001aa0 <PC_getchar>:
    1aa0:	5f 9b       	sbis	0x0b, 7	; 11
    1aa2:	fe cf       	rjmp	.-4      	; 0x1aa0 <PC_getchar>
    1aa4:	8c b1       	in	r24, 0x0c	; 12
    1aa6:	08 95       	ret

00001aa8 <TWI_ERROR>:
    1aa8:	84 e9       	ldi	r24, 0x94	; 148
    1aaa:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1aae:	08 95       	ret

00001ab0 <TWI_Start>:
    1ab0:	84 ea       	ldi	r24, 0xA4	; 164
    1ab2:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1ab6:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1aba:	87 ff       	sbrs	r24, 7
    1abc:	fc cf       	rjmp	.-8      	; 0x1ab6 <TWI_Start+0x6>
    1abe:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    1ac2:	88 7f       	andi	r24, 0xF8	; 248
    1ac4:	88 30       	cpi	r24, 0x08	; 8
    1ac6:	11 f4       	brne	.+4      	; 0x1acc <TWI_Start+0x1c>
    1ac8:	80 e0       	ldi	r24, 0x00	; 0
    1aca:	08 95       	ret
    1acc:	84 e9       	ldi	r24, 0x94	; 148
    1ace:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1ad2:	81 e0       	ldi	r24, 0x01	; 1
    1ad4:	08 95       	ret

00001ad6 <TWI_Stop>:
    1ad6:	84 e9       	ldi	r24, 0x94	; 148
    1ad8:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1adc:	08 95       	ret

00001ade <TWI_ReStart>:
    1ade:	84 ea       	ldi	r24, 0xA4	; 164
    1ae0:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1ae4:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1ae8:	87 ff       	sbrs	r24, 7
    1aea:	fc cf       	rjmp	.-8      	; 0x1ae4 <TWI_ReStart+0x6>
    1aec:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    1af0:	88 7f       	andi	r24, 0xF8	; 248
    1af2:	80 31       	cpi	r24, 0x10	; 16
    1af4:	11 f4       	brne	.+4      	; 0x1afa <TWI_ReStart+0x1c>
    1af6:	80 e0       	ldi	r24, 0x00	; 0
    1af8:	08 95       	ret
    1afa:	84 e9       	ldi	r24, 0x94	; 148
    1afc:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1b00:	82 e0       	ldi	r24, 0x02	; 2
    1b02:	08 95       	ret

00001b04 <TWI_SendSLAW>:
    1b04:	90 e0       	ldi	r25, 0x00	; 0
    1b06:	88 0f       	add	r24, r24
    1b08:	99 1f       	adc	r25, r25
    1b0a:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    1b0e:	84 e8       	ldi	r24, 0x84	; 132
    1b10:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1b14:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1b18:	87 ff       	sbrs	r24, 7
    1b1a:	fc cf       	rjmp	.-8      	; 0x1b14 <TWI_SendSLAW+0x10>
    1b1c:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    1b20:	88 7f       	andi	r24, 0xF8	; 248
    1b22:	88 31       	cpi	r24, 0x18	; 24
    1b24:	19 f0       	breq	.+6      	; 0x1b2c <TWI_SendSLAW+0x28>
    1b26:	84 e9       	ldi	r24, 0x94	; 148
    1b28:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1b2c:	08 95       	ret

00001b2e <TWI_SendSLAR>:
    1b2e:	88 0f       	add	r24, r24
    1b30:	8f 5f       	subi	r24, 0xFF	; 255
    1b32:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    1b36:	84 e8       	ldi	r24, 0x84	; 132
    1b38:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1b3c:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1b40:	87 ff       	sbrs	r24, 7
    1b42:	fc cf       	rjmp	.-8      	; 0x1b3c <TWI_SendSLAR+0xe>
    1b44:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    1b48:	88 7f       	andi	r24, 0xF8	; 248
    1b4a:	80 34       	cpi	r24, 0x40	; 64
    1b4c:	19 f0       	breq	.+6      	; 0x1b54 <TWI_SendSLAR+0x26>
    1b4e:	84 e9       	ldi	r24, 0x94	; 148
    1b50:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1b54:	08 95       	ret

00001b56 <TWI_TransmitData>:
    1b56:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    1b5a:	84 e8       	ldi	r24, 0x84	; 132
    1b5c:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1b60:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1b64:	87 ff       	sbrs	r24, 7
    1b66:	fc cf       	rjmp	.-8      	; 0x1b60 <TWI_TransmitData+0xa>
    1b68:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    1b6c:	88 7f       	andi	r24, 0xF8	; 248
    1b6e:	88 32       	cpi	r24, 0x28	; 40
    1b70:	19 f0       	breq	.+6      	; 0x1b78 <TWI_TransmitData+0x22>
    1b72:	84 e9       	ldi	r24, 0x94	; 148
    1b74:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1b78:	08 95       	ret

00001b7a <TWI_ReceiveData>:
    1b7a:	84 ec       	ldi	r24, 0xC4	; 196
    1b7c:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1b80:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1b84:	87 ff       	sbrs	r24, 7
    1b86:	fc cf       	rjmp	.-8      	; 0x1b80 <TWI_ReceiveData+0x6>
    1b88:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    1b8c:	88 7f       	andi	r24, 0xF8	; 248
    1b8e:	80 35       	cpi	r24, 0x50	; 80
    1b90:	19 f0       	breq	.+6      	; 0x1b98 <TWI_ReceiveData+0x1e>
    1b92:	84 e9       	ldi	r24, 0x94	; 148
    1b94:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1b98:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    1b9c:	08 95       	ret

00001b9e <TWI_SendNoAck>:
    1b9e:	84 e8       	ldi	r24, 0x84	; 132
    1ba0:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1ba4:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1ba8:	87 ff       	sbrs	r24, 7
    1baa:	fc cf       	rjmp	.-8      	; 0x1ba4 <TWI_SendNoAck+0x6>
    1bac:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    1bb0:	88 7f       	andi	r24, 0xF8	; 248
    1bb2:	88 35       	cpi	r24, 0x58	; 88
    1bb4:	19 f0       	breq	.+6      	; 0x1bbc <TWI_SendNoAck+0x1e>
    1bb6:	84 e9       	ldi	r24, 0x94	; 148
    1bb8:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1bbc:	08 95       	ret

00001bbe <TWI_wr>:
    1bbe:	ff 92       	push	r15
    1bc0:	0f 93       	push	r16
    1bc2:	1f 93       	push	r17
    1bc4:	18 2f       	mov	r17, r24
    1bc6:	06 2f       	mov	r16, r22
    1bc8:	f4 2e       	mov	r15, r20
    1bca:	72 df       	rcall	.-284    	; 0x1ab0 <TWI_Start>
    1bcc:	81 2f       	mov	r24, r17
    1bce:	9a df       	rcall	.-204    	; 0x1b04 <TWI_SendSLAW>
    1bd0:	80 2f       	mov	r24, r16
    1bd2:	c1 df       	rcall	.-126    	; 0x1b56 <TWI_TransmitData>
    1bd4:	8f 2d       	mov	r24, r15
    1bd6:	bf df       	rcall	.-130    	; 0x1b56 <TWI_TransmitData>
    1bd8:	84 e9       	ldi	r24, 0x94	; 148
    1bda:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1bde:	1f 91       	pop	r17
    1be0:	0f 91       	pop	r16
    1be2:	ff 90       	pop	r15
    1be4:	08 95       	ret

00001be6 <TWI_rd>:
    1be6:	0f 93       	push	r16
    1be8:	1f 93       	push	r17
    1bea:	08 2f       	mov	r16, r24
    1bec:	16 2f       	mov	r17, r22
    1bee:	60 df       	rcall	.-320    	; 0x1ab0 <TWI_Start>
    1bf0:	80 2f       	mov	r24, r16
    1bf2:	88 df       	rcall	.-240    	; 0x1b04 <TWI_SendSLAW>
    1bf4:	81 2f       	mov	r24, r17
    1bf6:	af df       	rcall	.-162    	; 0x1b56 <TWI_TransmitData>
    1bf8:	72 df       	rcall	.-284    	; 0x1ade <TWI_ReStart>
    1bfa:	80 2f       	mov	r24, r16
    1bfc:	98 df       	rcall	.-208    	; 0x1b2e <TWI_SendSLAR>
    1bfe:	bd df       	rcall	.-134    	; 0x1b7a <TWI_ReceiveData>
    1c00:	18 2f       	mov	r17, r24
    1c02:	cd df       	rcall	.-102    	; 0x1b9e <TWI_SendNoAck>
    1c04:	84 e9       	ldi	r24, 0x94	; 148
    1c06:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1c0a:	81 2f       	mov	r24, r17
    1c0c:	1f 91       	pop	r17
    1c0e:	0f 91       	pop	r16
    1c10:	08 95       	ret

00001c12 <TWI_initialize>:
    1c12:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
    1c16:	08 95       	ret

00001c18 <TWI_Write>:
    1c18:	ef 92       	push	r14
    1c1a:	ff 92       	push	r15
    1c1c:	0f 93       	push	r16
    1c1e:	1f 93       	push	r17
    1c20:	18 2f       	mov	r17, r24
    1c22:	06 2f       	mov	r16, r22
    1c24:	f7 2e       	mov	r15, r23
    1c26:	e4 2e       	mov	r14, r20
    1c28:	43 df       	rcall	.-378    	; 0x1ab0 <TWI_Start>
    1c2a:	81 30       	cpi	r24, 0x01	; 1
    1c2c:	09 f4       	brne	.+2      	; 0x1c30 <TWI_Write+0x18>
    1c2e:	41 c0       	rjmp	.+130    	; 0x1cb2 <TWI_Write+0x9a>
    1c30:	81 2f       	mov	r24, r17
    1c32:	90 e0       	ldi	r25, 0x00	; 0
    1c34:	88 0f       	add	r24, r24
    1c36:	99 1f       	adc	r25, r25
    1c38:	90 70       	andi	r25, 0x00	; 0
    1c3a:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    1c3e:	84 e8       	ldi	r24, 0x84	; 132
    1c40:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1c44:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1c48:	87 ff       	sbrs	r24, 7
    1c4a:	fc cf       	rjmp	.-8      	; 0x1c44 <TWI_Write+0x2c>
    1c4c:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    1c50:	88 7f       	andi	r24, 0xF8	; 248
    1c52:	88 31       	cpi	r24, 0x18	; 24
    1c54:	39 f4       	brne	.+14     	; 0x1c64 <TWI_Write+0x4c>
    1c56:	80 2f       	mov	r24, r16
    1c58:	9f 2d       	mov	r25, r15
    1c5a:	9c 01       	movw	r18, r24
    1c5c:	f9 01       	movw	r30, r18
    1c5e:	90 e0       	ldi	r25, 0x00	; 0
    1c60:	24 e8       	ldi	r18, 0x84	; 132
    1c62:	1a c0       	rjmp	.+52     	; 0x1c98 <TWI_Write+0x80>
    1c64:	84 e9       	ldi	r24, 0x94	; 148
    1c66:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1c6a:	83 e0       	ldi	r24, 0x03	; 3
    1c6c:	22 c0       	rjmp	.+68     	; 0x1cb2 <TWI_Write+0x9a>
    1c6e:	80 81       	ld	r24, Z
    1c70:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    1c74:	20 93 74 00 	sts	0x0074, r18	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1c78:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1c7c:	87 ff       	sbrs	r24, 7
    1c7e:	fc cf       	rjmp	.-8      	; 0x1c78 <TWI_Write+0x60>
    1c80:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    1c84:	31 96       	adiw	r30, 0x01	; 1
    1c86:	88 7f       	andi	r24, 0xF8	; 248
    1c88:	88 32       	cpi	r24, 0x28	; 40
    1c8a:	29 f0       	breq	.+10     	; 0x1c96 <TWI_Write+0x7e>
    1c8c:	84 e9       	ldi	r24, 0x94	; 148
    1c8e:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1c92:	84 e0       	ldi	r24, 0x04	; 4
    1c94:	0e c0       	rjmp	.+28     	; 0x1cb2 <TWI_Write+0x9a>
    1c96:	9f 5f       	subi	r25, 0xFF	; 255
    1c98:	9e 15       	cp	r25, r14
    1c9a:	48 f3       	brcs	.-46     	; 0x1c6e <TWI_Write+0x56>
    1c9c:	81 e0       	ldi	r24, 0x01	; 1
    1c9e:	8e 15       	cp	r24, r14
    1ca0:	20 f4       	brcc	.+8      	; 0x1caa <TWI_Write+0x92>
    1ca2:	84 e9       	ldi	r24, 0x94	; 148
    1ca4:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1ca8:	03 c0       	rjmp	.+6      	; 0x1cb0 <TWI_Write+0x98>
    1caa:	81 e0       	ldi	r24, 0x01	; 1
    1cac:	80 93 d9 01 	sts	0x01D9, r24	; 0x8001d9 <write_to_read>
    1cb0:	80 e0       	ldi	r24, 0x00	; 0
    1cb2:	1f 91       	pop	r17
    1cb4:	0f 91       	pop	r16
    1cb6:	ff 90       	pop	r15
    1cb8:	ef 90       	pop	r14
    1cba:	08 95       	ret

00001cbc <TWI_Read>:
    1cbc:	0f 93       	push	r16
    1cbe:	1f 93       	push	r17
    1cc0:	cf 93       	push	r28
    1cc2:	df 93       	push	r29
    1cc4:	08 2f       	mov	r16, r24
    1cc6:	eb 01       	movw	r28, r22
    1cc8:	14 2f       	mov	r17, r20
    1cca:	80 91 d9 01 	lds	r24, 0x01D9	; 0x8001d9 <write_to_read>
    1cce:	81 30       	cpi	r24, 0x01	; 1
    1cd0:	39 f4       	brne	.+14     	; 0x1ce0 <TWI_Read+0x24>
    1cd2:	05 df       	rcall	.-502    	; 0x1ade <TWI_ReStart>
    1cd4:	82 30       	cpi	r24, 0x02	; 2
    1cd6:	09 f4       	brne	.+2      	; 0x1cda <TWI_Read+0x1e>
    1cd8:	73 c0       	rjmp	.+230    	; 0x1dc0 <TWI_Read+0x104>
    1cda:	10 92 d9 01 	sts	0x01D9, r1	; 0x8001d9 <write_to_read>
    1cde:	01 c0       	rjmp	.+2      	; 0x1ce2 <TWI_Read+0x26>
    1ce0:	e7 de       	rcall	.-562    	; 0x1ab0 <TWI_Start>
    1ce2:	81 30       	cpi	r24, 0x01	; 1
    1ce4:	09 f4       	brne	.+2      	; 0x1ce8 <TWI_Read+0x2c>
    1ce6:	6c c0       	rjmp	.+216    	; 0x1dc0 <TWI_Read+0x104>
    1ce8:	80 2f       	mov	r24, r16
    1cea:	90 e0       	ldi	r25, 0x00	; 0
    1cec:	88 0f       	add	r24, r24
    1cee:	99 1f       	adc	r25, r25
    1cf0:	81 60       	ori	r24, 0x01	; 1
    1cf2:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    1cf6:	84 e8       	ldi	r24, 0x84	; 132
    1cf8:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1cfc:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1d00:	87 ff       	sbrs	r24, 7
    1d02:	fc cf       	rjmp	.-8      	; 0x1cfc <TWI_Read+0x40>
    1d04:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    1d08:	88 7f       	andi	r24, 0xF8	; 248
    1d0a:	80 34       	cpi	r24, 0x40	; 64
    1d0c:	29 f0       	breq	.+10     	; 0x1d18 <TWI_Read+0x5c>
    1d0e:	84 e9       	ldi	r24, 0x94	; 148
    1d10:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1d14:	85 e0       	ldi	r24, 0x05	; 5
    1d16:	54 c0       	rjmp	.+168    	; 0x1dc0 <TWI_Read+0x104>
    1d18:	12 30       	cpi	r17, 0x02	; 2
    1d1a:	d0 f1       	brcs	.+116    	; 0x1d90 <TWI_Read+0xd4>
    1d1c:	40 e0       	ldi	r20, 0x00	; 0
    1d1e:	21 2f       	mov	r18, r17
    1d20:	30 e0       	ldi	r19, 0x00	; 0
    1d22:	21 50       	subi	r18, 0x01	; 1
    1d24:	30 40       	sbci	r19, 0x00	; 0
    1d26:	54 ec       	ldi	r21, 0xC4	; 196
    1d28:	17 c0       	rjmp	.+46     	; 0x1d58 <TWI_Read+0x9c>
    1d2a:	50 93 74 00 	sts	0x0074, r21	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1d2e:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1d32:	87 ff       	sbrs	r24, 7
    1d34:	fc cf       	rjmp	.-8      	; 0x1d2e <TWI_Read+0x72>
    1d36:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    1d3a:	88 7f       	andi	r24, 0xF8	; 248
    1d3c:	80 35       	cpi	r24, 0x50	; 80
    1d3e:	29 f0       	breq	.+10     	; 0x1d4a <TWI_Read+0x8e>
    1d40:	84 e9       	ldi	r24, 0x94	; 148
    1d42:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1d46:	86 e0       	ldi	r24, 0x06	; 6
    1d48:	3b c0       	rjmp	.+118    	; 0x1dc0 <TWI_Read+0x104>
    1d4a:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    1d4e:	fe 01       	movw	r30, r28
    1d50:	e4 0f       	add	r30, r20
    1d52:	f1 1d       	adc	r31, r1
    1d54:	80 83       	st	Z, r24
    1d56:	4f 5f       	subi	r20, 0xFF	; 255
    1d58:	84 2f       	mov	r24, r20
    1d5a:	90 e0       	ldi	r25, 0x00	; 0
    1d5c:	82 17       	cp	r24, r18
    1d5e:	93 07       	cpc	r25, r19
    1d60:	24 f3       	brlt	.-56     	; 0x1d2a <TWI_Read+0x6e>
    1d62:	84 e8       	ldi	r24, 0x84	; 132
    1d64:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1d68:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1d6c:	87 ff       	sbrs	r24, 7
    1d6e:	fc cf       	rjmp	.-8      	; 0x1d68 <TWI_Read+0xac>
    1d70:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    1d74:	88 7f       	andi	r24, 0xF8	; 248
    1d76:	88 35       	cpi	r24, 0x58	; 88
    1d78:	29 f0       	breq	.+10     	; 0x1d84 <TWI_Read+0xc8>
    1d7a:	84 e9       	ldi	r24, 0x94	; 148
    1d7c:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1d80:	87 e0       	ldi	r24, 0x07	; 7
    1d82:	1e c0       	rjmp	.+60     	; 0x1dc0 <TWI_Read+0x104>
    1d84:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    1d88:	c1 0f       	add	r28, r17
    1d8a:	d1 1d       	adc	r29, r1
    1d8c:	21 97       	sbiw	r28, 0x01	; 1
    1d8e:	13 c0       	rjmp	.+38     	; 0x1db6 <TWI_Read+0xfa>
    1d90:	84 e8       	ldi	r24, 0x84	; 132
    1d92:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1d96:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1d9a:	87 ff       	sbrs	r24, 7
    1d9c:	fc cf       	rjmp	.-8      	; 0x1d96 <TWI_Read+0xda>
    1d9e:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    1da2:	88 7f       	andi	r24, 0xF8	; 248
    1da4:	88 35       	cpi	r24, 0x58	; 88
    1da6:	29 f0       	breq	.+10     	; 0x1db2 <TWI_Read+0xf6>
    1da8:	84 e9       	ldi	r24, 0x94	; 148
    1daa:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1dae:	88 e0       	ldi	r24, 0x08	; 8
    1db0:	07 c0       	rjmp	.+14     	; 0x1dc0 <TWI_Read+0x104>
    1db2:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    1db6:	88 83       	st	Y, r24
    1db8:	84 e9       	ldi	r24, 0x94	; 148
    1dba:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1dbe:	80 e0       	ldi	r24, 0x00	; 0
    1dc0:	df 91       	pop	r29
    1dc2:	cf 91       	pop	r28
    1dc4:	1f 91       	pop	r17
    1dc6:	0f 91       	pop	r16
    1dc8:	08 95       	ret

00001dca <keyresoure>:
    }
}

void keyresoure(char key_in,char *a,char *b){
	int x=0,y=0;
	switch(key_in){
    1dca:	90 e0       	ldi	r25, 0x00	; 0
    1dcc:	fc 01       	movw	r30, r24
    1dce:	f1 97       	sbiw	r30, 0x31	; 49
    1dd0:	e6 31       	cpi	r30, 0x16	; 22
    1dd2:	f1 05       	cpc	r31, r1
    1dd4:	80 f5       	brcc	.+96     	; 0x1e36 <keyresoure+0x6c>
    1dd6:	ea 5b       	subi	r30, 0xBA	; 186
    1dd8:	ff 4f       	sbci	r31, 0xFF	; 255
    1dda:	b2 c4       	rjmp	.+2404   	; 0x2740 <__tablejump2__>
		case 48:{x=0;y=0;break;}
		case 49:{x=1;y=0;break;}
    1ddc:	80 e0       	ldi	r24, 0x00	; 0
    1dde:	91 e0       	ldi	r25, 0x01	; 1
    1de0:	2c c0       	rjmp	.+88     	; 0x1e3a <keyresoure+0x70>
		case 50:{x=2;y=0;break;}
    1de2:	80 e0       	ldi	r24, 0x00	; 0
    1de4:	92 e0       	ldi	r25, 0x02	; 2
    1de6:	29 c0       	rjmp	.+82     	; 0x1e3a <keyresoure+0x70>
		case 51:{x=3;y=0;break;}
    1de8:	80 e0       	ldi	r24, 0x00	; 0
    1dea:	93 e0       	ldi	r25, 0x03	; 3
    1dec:	26 c0       	rjmp	.+76     	; 0x1e3a <keyresoure+0x70>
		case 52:{x=4;y=0;break;}
    1dee:	80 e0       	ldi	r24, 0x00	; 0
    1df0:	94 e0       	ldi	r25, 0x04	; 4
    1df2:	23 c0       	rjmp	.+70     	; 0x1e3a <keyresoure+0x70>
		case 53:{x=5;y=0;break;}
    1df4:	80 e0       	ldi	r24, 0x00	; 0
    1df6:	95 e0       	ldi	r25, 0x05	; 5
    1df8:	20 c0       	rjmp	.+64     	; 0x1e3a <keyresoure+0x70>
		case 54:{x=6;y=0;break;}
    1dfa:	80 e0       	ldi	r24, 0x00	; 0
    1dfc:	96 e0       	ldi	r25, 0x06	; 6
    1dfe:	1d c0       	rjmp	.+58     	; 0x1e3a <keyresoure+0x70>
		case 55:{x=7;y=0;break;}
    1e00:	80 e0       	ldi	r24, 0x00	; 0
    1e02:	97 e0       	ldi	r25, 0x07	; 7
    1e04:	1a c0       	rjmp	.+52     	; 0x1e3a <keyresoure+0x70>
		case 56:{x=8;y=0;break;}
    1e06:	80 e0       	ldi	r24, 0x00	; 0
    1e08:	98 e0       	ldi	r25, 0x08	; 8
    1e0a:	17 c0       	rjmp	.+46     	; 0x1e3a <keyresoure+0x70>
		case 57:{x=9;y=0;break;}
    1e0c:	80 e0       	ldi	r24, 0x00	; 0
    1e0e:	99 e0       	ldi	r25, 0x09	; 9
    1e10:	14 c0       	rjmp	.+40     	; 0x1e3a <keyresoure+0x70>
		case 65:{x=10;y=1;break;}  //A"clr"
    1e12:	81 e0       	ldi	r24, 0x01	; 1
    1e14:	9a e0       	ldi	r25, 0x0A	; 10
    1e16:	11 c0       	rjmp	.+34     	; 0x1e3a <keyresoure+0x70>
		case 66:{x=10;y=2;break;}  //B"="
    1e18:	82 e0       	ldi	r24, 0x02	; 2
    1e1a:	9a e0       	ldi	r25, 0x0A	; 10
    1e1c:	0e c0       	rjmp	.+28     	; 0x1e3a <keyresoure+0x70>
		case 67:{x=10;y=3;break;}  //C"/"
    1e1e:	83 e0       	ldi	r24, 0x03	; 3
    1e20:	9a e0       	ldi	r25, 0x0A	; 10
    1e22:	0b c0       	rjmp	.+22     	; 0x1e3a <keyresoure+0x70>
		case 68:{x=10;y=4;break;}  //D"*"
    1e24:	84 e0       	ldi	r24, 0x04	; 4
    1e26:	9a e0       	ldi	r25, 0x0A	; 10
    1e28:	08 c0       	rjmp	.+16     	; 0x1e3a <keyresoure+0x70>
		case 69:{x=10;y=5;break;}  //E"-"
    1e2a:	85 e0       	ldi	r24, 0x05	; 5
    1e2c:	9a e0       	ldi	r25, 0x0A	; 10
    1e2e:	05 c0       	rjmp	.+10     	; 0x1e3a <keyresoure+0x70>
		case 70:{x=10;y=6;break;}  //F"+"
    1e30:	86 e0       	ldi	r24, 0x06	; 6
    1e32:	9a e0       	ldi	r25, 0x0A	; 10
    1e34:	02 c0       	rjmp	.+4      	; 0x1e3a <keyresoure+0x70>
		
    }
}

void keyresoure(char key_in,char *a,char *b){
	int x=0,y=0;
    1e36:	80 e0       	ldi	r24, 0x00	; 0
    1e38:	90 e0       	ldi	r25, 0x00	; 0
		case 67:{x=10;y=3;break;}  //C"/"
		case 68:{x=10;y=4;break;}  //D"*"
		case 69:{x=10;y=5;break;}  //E"-"
		case 70:{x=10;y=6;break;}  //F"+"
	}
	*a=x;
    1e3a:	fb 01       	movw	r30, r22
    1e3c:	90 83       	st	Z, r25
	*b=y;
    1e3e:	fa 01       	movw	r30, r20
    1e40:	80 83       	st	Z, r24
    1e42:	08 95       	ret

00001e44 <counting>:
}

void counting(char number,char sign,long int *a){
    1e44:	0f 93       	push	r16
    1e46:	1f 93       	push	r17
    1e48:	78 2f       	mov	r23, r24
	static long int counter=0;
	static int s_flag=0;
	
	if (number==10)
    1e4a:	8a 30       	cpi	r24, 0x0A	; 10
    1e4c:	b1 f4       	brne	.+44     	; 0x1e7a <counting+0x36>
	{
		if (sign==1)
    1e4e:	61 30       	cpi	r22, 0x01	; 1
    1e50:	69 f4       	brne	.+26     	; 0x1e6c <counting+0x28>
		{
			counter=0;
    1e52:	10 92 e4 01 	sts	0x01E4, r1	; 0x8001e4 <counter.2398>
    1e56:	10 92 e5 01 	sts	0x01E5, r1	; 0x8001e5 <counter.2398+0x1>
    1e5a:	10 92 e6 01 	sts	0x01E6, r1	; 0x8001e6 <counter.2398+0x2>
    1e5e:	10 92 e7 01 	sts	0x01E7, r1	; 0x8001e7 <counter.2398+0x3>
			s_flag=0;
    1e62:	10 92 e3 01 	sts	0x01E3, r1	; 0x8001e3 <s_flag.2399+0x1>
    1e66:	10 92 e2 01 	sts	0x01E2, r1	; 0x8001e2 <s_flag.2399>
    1e6a:	44 c0       	rjmp	.+136    	; 0x1ef4 <counting+0xb0>
			
		}
		else 
		{
			s_flag=1;
    1e6c:	81 e0       	ldi	r24, 0x01	; 1
    1e6e:	90 e0       	ldi	r25, 0x00	; 0
    1e70:	90 93 e3 01 	sts	0x01E3, r25	; 0x8001e3 <s_flag.2399+0x1>
    1e74:	80 93 e2 01 	sts	0x01E2, r24	; 0x8001e2 <s_flag.2399>
    1e78:	3d c0       	rjmp	.+122    	; 0x1ef4 <counting+0xb0>
		}
	}
	else{
		if (s_flag==1)
    1e7a:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <s_flag.2399>
    1e7e:	90 91 e3 01 	lds	r25, 0x01E3	; 0x8001e3 <s_flag.2399+0x1>
    1e82:	01 97       	sbiw	r24, 0x01	; 1
    1e84:	61 f4       	brne	.+24     	; 0x1e9e <counting+0x5a>
		{
			counter=0;
    1e86:	10 92 e4 01 	sts	0x01E4, r1	; 0x8001e4 <counter.2398>
    1e8a:	10 92 e5 01 	sts	0x01E5, r1	; 0x8001e5 <counter.2398+0x1>
    1e8e:	10 92 e6 01 	sts	0x01E6, r1	; 0x8001e6 <counter.2398+0x2>
    1e92:	10 92 e7 01 	sts	0x01E7, r1	; 0x8001e7 <counter.2398+0x3>
			s_flag=0;
    1e96:	10 92 e3 01 	sts	0x01E3, r1	; 0x8001e3 <s_flag.2399+0x1>
    1e9a:	10 92 e2 01 	sts	0x01E2, r1	; 0x8001e2 <s_flag.2399>
		}
		counter=(counter*10+number);
    1e9e:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <counter.2398>
    1ea2:	90 91 e5 01 	lds	r25, 0x01E5	; 0x8001e5 <counter.2398+0x1>
    1ea6:	a0 91 e6 01 	lds	r26, 0x01E6	; 0x8001e6 <counter.2398+0x2>
    1eaa:	b0 91 e7 01 	lds	r27, 0x01E7	; 0x8001e7 <counter.2398+0x3>
    1eae:	88 0f       	add	r24, r24
    1eb0:	99 1f       	adc	r25, r25
    1eb2:	aa 1f       	adc	r26, r26
    1eb4:	bb 1f       	adc	r27, r27
    1eb6:	8c 01       	movw	r16, r24
    1eb8:	9d 01       	movw	r18, r26
    1eba:	00 0f       	add	r16, r16
    1ebc:	11 1f       	adc	r17, r17
    1ebe:	22 1f       	adc	r18, r18
    1ec0:	33 1f       	adc	r19, r19
    1ec2:	00 0f       	add	r16, r16
    1ec4:	11 1f       	adc	r17, r17
    1ec6:	22 1f       	adc	r18, r18
    1ec8:	33 1f       	adc	r19, r19
    1eca:	80 0f       	add	r24, r16
    1ecc:	91 1f       	adc	r25, r17
    1ece:	a2 1f       	adc	r26, r18
    1ed0:	b3 1f       	adc	r27, r19
    1ed2:	87 0f       	add	r24, r23
    1ed4:	91 1d       	adc	r25, r1
    1ed6:	a1 1d       	adc	r26, r1
    1ed8:	b1 1d       	adc	r27, r1
    1eda:	80 93 e4 01 	sts	0x01E4, r24	; 0x8001e4 <counter.2398>
    1ede:	90 93 e5 01 	sts	0x01E5, r25	; 0x8001e5 <counter.2398+0x1>
    1ee2:	a0 93 e6 01 	sts	0x01E6, r26	; 0x8001e6 <counter.2398+0x2>
    1ee6:	b0 93 e7 01 	sts	0x01E7, r27	; 0x8001e7 <counter.2398+0x3>
		*a=counter;
    1eea:	fa 01       	movw	r30, r20
    1eec:	80 83       	st	Z, r24
    1eee:	91 83       	std	Z+1, r25	; 0x01
    1ef0:	a2 83       	std	Z+2, r26	; 0x02
    1ef2:	b3 83       	std	Z+3, r27	; 0x03
	}
}
    1ef4:	1f 91       	pop	r17
    1ef6:	0f 91       	pop	r16
    1ef8:	08 95       	ret

00001efa <calculate>:

void calculate(long int cal,char number,char sign,long int *a,long int *b){
    1efa:	8f 92       	push	r8
    1efc:	9f 92       	push	r9
    1efe:	af 92       	push	r10
    1f00:	bf 92       	push	r11
    1f02:	ef 92       	push	r14
    1f04:	ff 92       	push	r15
    1f06:	0f 93       	push	r16
    1f08:	1f 93       	push	r17
    1f0a:	4b 01       	movw	r8, r22
    1f0c:	5c 01       	movw	r10, r24
	static int cal_f2=0,cal_f3=0,cal_f4=0;//f2:運算子f3:等號旗標f4:運算旗標
	static int cal_n1=0;  //暫存器1
	static int cal_n2=0;  //暫存器2
	if (number==10){                
    1f0e:	4a 30       	cpi	r20, 0x0A	; 10
    1f10:	09 f0       	breq	.+2      	; 0x1f14 <calculate+0x1a>
    1f12:	6d c1       	rjmp	.+730    	; 0x21ee <calculate+0x2f4>
		if (sign==1)
    1f14:	21 30       	cpi	r18, 0x01	; 1
    1f16:	89 f4       	brne	.+34     	; 0x1f3a <calculate+0x40>
		{
			cal_n1=0;cal_n2=0;cal_f2=0;cal_f3=0;cal_f4=0;
    1f18:	10 92 e1 01 	sts	0x01E1, r1	; 0x8001e1 <cal_n1.2410+0x1>
    1f1c:	10 92 e0 01 	sts	0x01E0, r1	; 0x8001e0 <cal_n1.2410>
    1f20:	10 92 df 01 	sts	0x01DF, r1	; 0x8001df <cal_f2.2407+0x1>
    1f24:	10 92 de 01 	sts	0x01DE, r1	; 0x8001de <cal_f2.2407>
    1f28:	10 92 dd 01 	sts	0x01DD, r1	; 0x8001dd <cal_f3.2408+0x1>
    1f2c:	10 92 dc 01 	sts	0x01DC, r1	; 0x8001dc <cal_f3.2408>
    1f30:	10 92 db 01 	sts	0x01DB, r1	; 0x8001db <cal_f4.2409+0x1>
    1f34:	10 92 da 01 	sts	0x01DA, r1	; 0x8001da <cal_f4.2409>
    1f38:	79 c1       	rjmp	.+754    	; 0x222c <calculate+0x332>
		}
		else if (sign==2)
    1f3a:	22 30       	cpi	r18, 0x02	; 2
    1f3c:	09 f0       	breq	.+2      	; 0x1f40 <calculate+0x46>
    1f3e:	8a c0       	rjmp	.+276    	; 0x2054 <calculate+0x15a>
		{
			cal_f3=1;
    1f40:	81 e0       	ldi	r24, 0x01	; 1
    1f42:	90 e0       	ldi	r25, 0x00	; 0
    1f44:	90 93 dd 01 	sts	0x01DD, r25	; 0x8001dd <cal_f3.2408+0x1>
    1f48:	80 93 dc 01 	sts	0x01DC, r24	; 0x8001dc <cal_f3.2408>
			cal_n2=cal;
    1f4c:	b4 01       	movw	r22, r8
			switch(cal_f2){   //最後運算
    1f4e:	80 91 de 01 	lds	r24, 0x01DE	; 0x8001de <cal_f2.2407>
    1f52:	90 91 df 01 	lds	r25, 0x01DF	; 0x8001df <cal_f2.2407+0x1>
    1f56:	84 30       	cpi	r24, 0x04	; 4
    1f58:	91 05       	cpc	r25, r1
    1f5a:	09 f4       	brne	.+2      	; 0x1f5e <calculate+0x64>
    1f5c:	41 c0       	rjmp	.+130    	; 0x1fe0 <calculate+0xe6>
    1f5e:	34 f4       	brge	.+12     	; 0x1f6c <calculate+0x72>
    1f60:	00 97       	sbiw	r24, 0x00	; 0
    1f62:	51 f0       	breq	.+20     	; 0x1f78 <calculate+0x7e>
    1f64:	03 97       	sbiw	r24, 0x03	; 3
    1f66:	09 f4       	brne	.+2      	; 0x1f6a <calculate+0x70>
    1f68:	55 c0       	rjmp	.+170    	; 0x2014 <calculate+0x11a>
    1f6a:	60 c1       	rjmp	.+704    	; 0x222c <calculate+0x332>
    1f6c:	85 30       	cpi	r24, 0x05	; 5
    1f6e:	91 05       	cpc	r25, r1
    1f70:	11 f1       	breq	.+68     	; 0x1fb6 <calculate+0xbc>
    1f72:	06 97       	sbiw	r24, 0x06	; 6
    1f74:	59 f0       	breq	.+22     	; 0x1f8c <calculate+0x92>
    1f76:	5a c1       	rjmp	.+692    	; 0x222c <calculate+0x332>
			case 0:{*a=cal_n2;break;}	
    1f78:	09 2c       	mov	r0, r9
    1f7a:	00 0c       	add	r0, r0
    1f7c:	aa 08       	sbc	r10, r10
    1f7e:	bb 08       	sbc	r11, r11
    1f80:	f8 01       	movw	r30, r16
    1f82:	80 82       	st	Z, r8
    1f84:	91 82       	std	Z+1, r9	; 0x01
    1f86:	a2 82       	std	Z+2, r10	; 0x02
    1f88:	b3 82       	std	Z+3, r11	; 0x03
    1f8a:	50 c1       	rjmp	.+672    	; 0x222c <calculate+0x332>
				case 6:{*a=cal_n1+cal_n2;cal_n1=*a;break;}
    1f8c:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <cal_n1.2410>
    1f90:	90 91 e1 01 	lds	r25, 0x01E1	; 0x8001e1 <cal_n1.2410+0x1>
    1f94:	88 0e       	add	r8, r24
    1f96:	99 1e       	adc	r9, r25
    1f98:	c4 01       	movw	r24, r8
    1f9a:	09 2c       	mov	r0, r9
    1f9c:	00 0c       	add	r0, r0
    1f9e:	aa 0b       	sbc	r26, r26
    1fa0:	bb 0b       	sbc	r27, r27
    1fa2:	f8 01       	movw	r30, r16
    1fa4:	80 83       	st	Z, r24
    1fa6:	91 83       	std	Z+1, r25	; 0x01
    1fa8:	a2 83       	std	Z+2, r26	; 0x02
    1faa:	b3 83       	std	Z+3, r27	; 0x03
    1fac:	90 92 e1 01 	sts	0x01E1, r9	; 0x8001e1 <cal_n1.2410+0x1>
    1fb0:	80 92 e0 01 	sts	0x01E0, r8	; 0x8001e0 <cal_n1.2410>
    1fb4:	3b c1       	rjmp	.+630    	; 0x222c <calculate+0x332>
					case 5:{*a=cal_n1-cal_n2;cal_n1=*a;break;}
    1fb6:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <cal_n1.2410>
    1fba:	90 91 e1 01 	lds	r25, 0x01E1	; 0x8001e1 <cal_n1.2410+0x1>
    1fbe:	88 19       	sub	r24, r8
    1fc0:	99 09       	sbc	r25, r9
    1fc2:	ac 01       	movw	r20, r24
    1fc4:	09 2e       	mov	r0, r25
    1fc6:	00 0c       	add	r0, r0
    1fc8:	66 0b       	sbc	r22, r22
    1fca:	77 0b       	sbc	r23, r23
    1fcc:	f8 01       	movw	r30, r16
    1fce:	40 83       	st	Z, r20
    1fd0:	51 83       	std	Z+1, r21	; 0x01
    1fd2:	62 83       	std	Z+2, r22	; 0x02
    1fd4:	73 83       	std	Z+3, r23	; 0x03
    1fd6:	90 93 e1 01 	sts	0x01E1, r25	; 0x8001e1 <cal_n1.2410+0x1>
    1fda:	80 93 e0 01 	sts	0x01E0, r24	; 0x8001e0 <cal_n1.2410>
    1fde:	26 c1       	rjmp	.+588    	; 0x222c <calculate+0x332>
						case 4:{*a=cal_n2*cal_n1;cal_n1=*a;break;}
    1fe0:	20 91 e0 01 	lds	r18, 0x01E0	; 0x8001e0 <cal_n1.2410>
    1fe4:	30 91 e1 01 	lds	r19, 0x01E1	; 0x8001e1 <cal_n1.2410+0x1>
    1fe8:	28 9d       	mul	r18, r8
    1fea:	c0 01       	movw	r24, r0
    1fec:	29 9d       	mul	r18, r9
    1fee:	90 0d       	add	r25, r0
    1ff0:	38 9d       	mul	r19, r8
    1ff2:	90 0d       	add	r25, r0
    1ff4:	11 24       	eor	r1, r1
    1ff6:	ac 01       	movw	r20, r24
    1ff8:	09 2e       	mov	r0, r25
    1ffa:	00 0c       	add	r0, r0
    1ffc:	66 0b       	sbc	r22, r22
    1ffe:	77 0b       	sbc	r23, r23
    2000:	f8 01       	movw	r30, r16
    2002:	40 83       	st	Z, r20
    2004:	51 83       	std	Z+1, r21	; 0x01
    2006:	62 83       	std	Z+2, r22	; 0x02
    2008:	73 83       	std	Z+3, r23	; 0x03
    200a:	90 93 e1 01 	sts	0x01E1, r25	; 0x8001e1 <cal_n1.2410+0x1>
    200e:	80 93 e0 01 	sts	0x01E0, r24	; 0x8001e0 <cal_n1.2410>
    2012:	0c c1       	rjmp	.+536    	; 0x222c <calculate+0x332>
							case 3:{
								if (cal_n2==0)
    2014:	89 28       	or	r8, r9
    2016:	51 f4       	brne	.+20     	; 0x202c <calculate+0x132>
								{
									*a=100000;
    2018:	80 ea       	ldi	r24, 0xA0	; 160
    201a:	96 e8       	ldi	r25, 0x86	; 134
    201c:	a1 e0       	ldi	r26, 0x01	; 1
    201e:	b0 e0       	ldi	r27, 0x00	; 0
    2020:	f8 01       	movw	r30, r16
    2022:	80 83       	st	Z, r24
    2024:	91 83       	std	Z+1, r25	; 0x01
    2026:	a2 83       	std	Z+2, r26	; 0x02
    2028:	b3 83       	std	Z+3, r27	; 0x03
    202a:	00 c1       	rjmp	.+512    	; 0x222c <calculate+0x332>
								}
								else{*a=cal_n1/cal_n2;cal_n1=*a;}
    202c:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <cal_n1.2410>
    2030:	90 91 e1 01 	lds	r25, 0x01E1	; 0x8001e1 <cal_n1.2410+0x1>
    2034:	72 d3       	rcall	.+1764   	; 0x271a <__divmodhi4>
    2036:	cb 01       	movw	r24, r22
    2038:	07 2e       	mov	r0, r23
    203a:	00 0c       	add	r0, r0
    203c:	aa 0b       	sbc	r26, r26
    203e:	bb 0b       	sbc	r27, r27
    2040:	f8 01       	movw	r30, r16
    2042:	80 83       	st	Z, r24
    2044:	91 83       	std	Z+1, r25	; 0x01
    2046:	a2 83       	std	Z+2, r26	; 0x02
    2048:	b3 83       	std	Z+3, r27	; 0x03
    204a:	70 93 e1 01 	sts	0x01E1, r23	; 0x8001e1 <cal_n1.2410+0x1>
    204e:	60 93 e0 01 	sts	0x01E0, r22	; 0x8001e0 <cal_n1.2410>
    2052:	ec c0       	rjmp	.+472    	; 0x222c <calculate+0x332>
									break;}
			}
		}
		else 
		{
			if (cal_f3==0 && cal_f4==0){
    2054:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <cal_f3.2408>
    2058:	90 91 dd 01 	lds	r25, 0x01DD	; 0x8001dd <cal_f3.2408+0x1>
    205c:	00 97       	sbiw	r24, 0x00	; 0
    205e:	09 f0       	breq	.+2      	; 0x2062 <calculate+0x168>
    2060:	99 c0       	rjmp	.+306    	; 0x2194 <calculate+0x29a>
    2062:	40 91 da 01 	lds	r20, 0x01DA	; 0x8001da <cal_f4.2409>
    2066:	50 91 db 01 	lds	r21, 0x01DB	; 0x8001db <cal_f4.2409+0x1>
    206a:	45 2b       	or	r20, r21
    206c:	09 f0       	breq	.+2      	; 0x2070 <calculate+0x176>
    206e:	d6 c0       	rjmp	.+428    	; 0x221c <calculate+0x322>
			switch(cal_f2){
    2070:	80 91 de 01 	lds	r24, 0x01DE	; 0x8001de <cal_f2.2407>
    2074:	90 91 df 01 	lds	r25, 0x01DF	; 0x8001df <cal_f2.2407+0x1>
    2078:	84 30       	cpi	r24, 0x04	; 4
    207a:	91 05       	cpc	r25, r1
    207c:	09 f4       	brne	.+2      	; 0x2080 <calculate+0x186>
    207e:	46 c0       	rjmp	.+140    	; 0x210c <calculate+0x212>
    2080:	34 f4       	brge	.+12     	; 0x208e <calculate+0x194>
    2082:	00 97       	sbiw	r24, 0x00	; 0
    2084:	51 f0       	breq	.+20     	; 0x209a <calculate+0x1a0>
    2086:	03 97       	sbiw	r24, 0x03	; 3
    2088:	09 f4       	brne	.+2      	; 0x208c <calculate+0x192>
    208a:	5f c0       	rjmp	.+190    	; 0x214a <calculate+0x250>
    208c:	77 c0       	rjmp	.+238    	; 0x217c <calculate+0x282>
    208e:	85 30       	cpi	r24, 0x05	; 5
    2090:	91 05       	cpc	r25, r1
    2092:	11 f1       	breq	.+68     	; 0x20d8 <calculate+0x1de>
    2094:	06 97       	sbiw	r24, 0x06	; 6
    2096:	31 f0       	breq	.+12     	; 0x20a4 <calculate+0x1aa>
    2098:	71 c0       	rjmp	.+226    	; 0x217c <calculate+0x282>
				case 0:{
					cal_n1=cal;
    209a:	90 92 e1 01 	sts	0x01E1, r9	; 0x8001e1 <cal_n1.2410+0x1>
    209e:	80 92 e0 01 	sts	0x01E0, r8	; 0x8001e0 <cal_n1.2410>
					break;
    20a2:	6c c0       	rjmp	.+216    	; 0x217c <calculate+0x282>
					}
				case 6:{
					cal_n2=cal;
					*a=cal_n1+cal_n2;
    20a4:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <cal_n1.2410>
    20a8:	90 91 e1 01 	lds	r25, 0x01E1	; 0x8001e1 <cal_n1.2410+0x1>
    20ac:	88 0e       	add	r8, r24
    20ae:	99 1e       	adc	r9, r25
    20b0:	c4 01       	movw	r24, r8
    20b2:	09 2c       	mov	r0, r9
    20b4:	00 0c       	add	r0, r0
    20b6:	aa 0b       	sbc	r26, r26
    20b8:	bb 0b       	sbc	r27, r27
    20ba:	f8 01       	movw	r30, r16
    20bc:	80 83       	st	Z, r24
    20be:	91 83       	std	Z+1, r25	; 0x01
    20c0:	a2 83       	std	Z+2, r26	; 0x02
    20c2:	b3 83       	std	Z+3, r27	; 0x03
					cal_n1=*a;
    20c4:	90 92 e1 01 	sts	0x01E1, r9	; 0x8001e1 <cal_n1.2410+0x1>
    20c8:	80 92 e0 01 	sts	0x01E0, r8	; 0x8001e0 <cal_n1.2410>
					*b=*a;
    20cc:	f7 01       	movw	r30, r14
    20ce:	80 83       	st	Z, r24
    20d0:	91 83       	std	Z+1, r25	; 0x01
    20d2:	a2 83       	std	Z+2, r26	; 0x02
    20d4:	b3 83       	std	Z+3, r27	; 0x03
					break;
    20d6:	52 c0       	rjmp	.+164    	; 0x217c <calculate+0x282>
					}
				case 5:{
					cal_n2=cal;
					*a=cal_n1-cal_n2;
    20d8:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <cal_n1.2410>
    20dc:	90 91 e1 01 	lds	r25, 0x01E1	; 0x8001e1 <cal_n1.2410+0x1>
    20e0:	88 19       	sub	r24, r8
    20e2:	99 09       	sbc	r25, r9
    20e4:	ac 01       	movw	r20, r24
    20e6:	09 2e       	mov	r0, r25
    20e8:	00 0c       	add	r0, r0
    20ea:	66 0b       	sbc	r22, r22
    20ec:	77 0b       	sbc	r23, r23
    20ee:	f8 01       	movw	r30, r16
    20f0:	40 83       	st	Z, r20
    20f2:	51 83       	std	Z+1, r21	; 0x01
    20f4:	62 83       	std	Z+2, r22	; 0x02
    20f6:	73 83       	std	Z+3, r23	; 0x03
					cal_n1=*a;
    20f8:	90 93 e1 01 	sts	0x01E1, r25	; 0x8001e1 <cal_n1.2410+0x1>
    20fc:	80 93 e0 01 	sts	0x01E0, r24	; 0x8001e0 <cal_n1.2410>
					*b=*a;
    2100:	f7 01       	movw	r30, r14
    2102:	40 83       	st	Z, r20
    2104:	51 83       	std	Z+1, r21	; 0x01
    2106:	62 83       	std	Z+2, r22	; 0x02
    2108:	73 83       	std	Z+3, r23	; 0x03
					break;
    210a:	38 c0       	rjmp	.+112    	; 0x217c <calculate+0x282>
					}
				case 4:{
					cal_n2=cal;
					*a=cal_n1*cal_n2;
    210c:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <cal_n1.2410>
    2110:	90 91 e1 01 	lds	r25, 0x01E1	; 0x8001e1 <cal_n1.2410+0x1>
    2114:	88 9d       	mul	r24, r8
    2116:	a0 01       	movw	r20, r0
    2118:	89 9d       	mul	r24, r9
    211a:	50 0d       	add	r21, r0
    211c:	98 9d       	mul	r25, r8
    211e:	50 0d       	add	r21, r0
    2120:	11 24       	eor	r1, r1
    2122:	ca 01       	movw	r24, r20
    2124:	05 2e       	mov	r0, r21
    2126:	00 0c       	add	r0, r0
    2128:	aa 0b       	sbc	r26, r26
    212a:	bb 0b       	sbc	r27, r27
    212c:	f8 01       	movw	r30, r16
    212e:	80 83       	st	Z, r24
    2130:	91 83       	std	Z+1, r25	; 0x01
    2132:	a2 83       	std	Z+2, r26	; 0x02
    2134:	b3 83       	std	Z+3, r27	; 0x03
					cal_n1=*a;
    2136:	50 93 e1 01 	sts	0x01E1, r21	; 0x8001e1 <cal_n1.2410+0x1>
    213a:	40 93 e0 01 	sts	0x01E0, r20	; 0x8001e0 <cal_n1.2410>
					*b=*a;
    213e:	f7 01       	movw	r30, r14
    2140:	80 83       	st	Z, r24
    2142:	91 83       	std	Z+1, r25	; 0x01
    2144:	a2 83       	std	Z+2, r26	; 0x02
    2146:	b3 83       	std	Z+3, r27	; 0x03
					break;
    2148:	19 c0       	rjmp	.+50     	; 0x217c <calculate+0x282>
					}
				case 3:{cal_n2=cal;
					*a=cal_n1/cal_n2;
    214a:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <cal_n1.2410>
    214e:	90 91 e1 01 	lds	r25, 0x01E1	; 0x8001e1 <cal_n1.2410+0x1>
    2152:	b4 01       	movw	r22, r8
    2154:	e2 d2       	rcall	.+1476   	; 0x271a <__divmodhi4>
    2156:	cb 01       	movw	r24, r22
    2158:	07 2e       	mov	r0, r23
    215a:	00 0c       	add	r0, r0
    215c:	aa 0b       	sbc	r26, r26
    215e:	bb 0b       	sbc	r27, r27
    2160:	f8 01       	movw	r30, r16
    2162:	80 83       	st	Z, r24
    2164:	91 83       	std	Z+1, r25	; 0x01
    2166:	a2 83       	std	Z+2, r26	; 0x02
    2168:	b3 83       	std	Z+3, r27	; 0x03
					cal_n1=*a;
    216a:	70 93 e1 01 	sts	0x01E1, r23	; 0x8001e1 <cal_n1.2410+0x1>
    216e:	60 93 e0 01 	sts	0x01E0, r22	; 0x8001e0 <cal_n1.2410>
					*b=*a;
    2172:	f7 01       	movw	r30, r14
    2174:	80 83       	st	Z, r24
    2176:	91 83       	std	Z+1, r25	; 0x01
    2178:	a2 83       	std	Z+2, r26	; 0x02
    217a:	b3 83       	std	Z+3, r27	; 0x03
					break;
					}
				}
				cal_f2=sign;
    217c:	30 e0       	ldi	r19, 0x00	; 0
    217e:	30 93 df 01 	sts	0x01DF, r19	; 0x8001df <cal_f2.2407+0x1>
    2182:	20 93 de 01 	sts	0x01DE, r18	; 0x8001de <cal_f2.2407>
				cal_f4=1;
    2186:	81 e0       	ldi	r24, 0x01	; 1
    2188:	90 e0       	ldi	r25, 0x00	; 0
    218a:	90 93 db 01 	sts	0x01DB, r25	; 0x8001db <cal_f4.2409+0x1>
    218e:	80 93 da 01 	sts	0x01DA, r24	; 0x8001da <cal_f4.2409>
    2192:	4c c0       	rjmp	.+152    	; 0x222c <calculate+0x332>
		}
		else {
			if(cal_f4==1){
    2194:	40 91 da 01 	lds	r20, 0x01DA	; 0x8001da <cal_f4.2409>
    2198:	50 91 db 01 	lds	r21, 0x01DB	; 0x8001db <cal_f4.2409+0x1>
    219c:	41 30       	cpi	r20, 0x01	; 1
    219e:	51 05       	cpc	r21, r1
    21a0:	31 f4       	brne	.+12     	; 0x21ae <calculate+0x2b4>
				cal_f2=sign;
    21a2:	42 2f       	mov	r20, r18
    21a4:	50 e0       	ldi	r21, 0x00	; 0
    21a6:	50 93 df 01 	sts	0x01DF, r21	; 0x8001df <cal_f2.2407+0x1>
    21aa:	40 93 de 01 	sts	0x01DE, r20	; 0x8001de <cal_f2.2407>
			}
			if (cal_f3==1)
    21ae:	01 97       	sbiw	r24, 0x01	; 1
    21b0:	e9 f5       	brne	.+122    	; 0x222c <calculate+0x332>
			{
				cal_n1=*a;
    21b2:	f8 01       	movw	r30, r16
    21b4:	80 81       	ld	r24, Z
    21b6:	91 81       	ldd	r25, Z+1	; 0x01
    21b8:	a2 81       	ldd	r26, Z+2	; 0x02
    21ba:	b3 81       	ldd	r27, Z+3	; 0x03
    21bc:	90 93 e1 01 	sts	0x01E1, r25	; 0x8001e1 <cal_n1.2410+0x1>
    21c0:	80 93 e0 01 	sts	0x01E0, r24	; 0x8001e0 <cal_n1.2410>
				*b=*a;
    21c4:	f7 01       	movw	r30, r14
    21c6:	80 83       	st	Z, r24
    21c8:	91 83       	std	Z+1, r25	; 0x01
    21ca:	a2 83       	std	Z+2, r26	; 0x02
    21cc:	b3 83       	std	Z+3, r27	; 0x03
				cal_f2=sign;
    21ce:	30 e0       	ldi	r19, 0x00	; 0
    21d0:	30 93 df 01 	sts	0x01DF, r19	; 0x8001df <cal_f2.2407+0x1>
    21d4:	20 93 de 01 	sts	0x01DE, r18	; 0x8001de <cal_f2.2407>
				cal_f3=0;
    21d8:	10 92 dd 01 	sts	0x01DD, r1	; 0x8001dd <cal_f3.2408+0x1>
    21dc:	10 92 dc 01 	sts	0x01DC, r1	; 0x8001dc <cal_f3.2408>
				cal_f4=1;
    21e0:	81 e0       	ldi	r24, 0x01	; 1
    21e2:	90 e0       	ldi	r25, 0x00	; 0
    21e4:	90 93 db 01 	sts	0x01DB, r25	; 0x8001db <cal_f4.2409+0x1>
    21e8:	80 93 da 01 	sts	0x01DA, r24	; 0x8001da <cal_f4.2409>
    21ec:	1f c0       	rjmp	.+62     	; 0x222c <calculate+0x332>
		}
	}
}
    if (number!=10)
	{
		cal_f4=0;
    21ee:	10 92 db 01 	sts	0x01DB, r1	; 0x8001db <cal_f4.2409+0x1>
    21f2:	10 92 da 01 	sts	0x01DA, r1	; 0x8001da <cal_f4.2409>
		if (cal_f3==1)
    21f6:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <cal_f3.2408>
    21fa:	90 91 dd 01 	lds	r25, 0x01DD	; 0x8001dd <cal_f3.2408+0x1>
    21fe:	01 97       	sbiw	r24, 0x01	; 1
    2200:	a9 f4       	brne	.+42     	; 0x222c <calculate+0x332>
		{
			cal_n1=0;cal_n2=0;cal_f2=0;cal_f3=0;cal_f4=0;
    2202:	10 92 e1 01 	sts	0x01E1, r1	; 0x8001e1 <cal_n1.2410+0x1>
    2206:	10 92 e0 01 	sts	0x01E0, r1	; 0x8001e0 <cal_n1.2410>
    220a:	10 92 df 01 	sts	0x01DF, r1	; 0x8001df <cal_f2.2407+0x1>
    220e:	10 92 de 01 	sts	0x01DE, r1	; 0x8001de <cal_f2.2407>
    2212:	10 92 dd 01 	sts	0x01DD, r1	; 0x8001dd <cal_f3.2408+0x1>
    2216:	10 92 dc 01 	sts	0x01DC, r1	; 0x8001dc <cal_f3.2408>
		}
	}
  }
    221a:	08 c0       	rjmp	.+16     	; 0x222c <calculate+0x332>
				}
				cal_f2=sign;
				cal_f4=1;
		}
		else {
			if(cal_f4==1){
    221c:	40 91 da 01 	lds	r20, 0x01DA	; 0x8001da <cal_f4.2409>
    2220:	50 91 db 01 	lds	r21, 0x01DB	; 0x8001db <cal_f4.2409+0x1>
    2224:	41 30       	cpi	r20, 0x01	; 1
    2226:	51 05       	cpc	r21, r1
    2228:	09 f4       	brne	.+2      	; 0x222c <calculate+0x332>
    222a:	bb cf       	rjmp	.-138    	; 0x21a2 <calculate+0x2a8>
		if (cal_f3==1)
		{
			cal_n1=0;cal_n2=0;cal_f2=0;cal_f3=0;cal_f4=0;
		}
	}
  }
    222c:	1f 91       	pop	r17
    222e:	0f 91       	pop	r16
    2230:	ff 90       	pop	r15
    2232:	ef 90       	pop	r14
    2234:	bf 90       	pop	r11
    2236:	af 90       	pop	r10
    2238:	9f 90       	pop	r9
    223a:	8f 90       	pop	r8
    223c:	08 95       	ret

0000223e <printfdata>:
  
  
		
void printfdata(int cal,int ans,int number,int sign,char *a){
    223e:	8f 92       	push	r8
    2240:	9f 92       	push	r9
    2242:	af 92       	push	r10
    2244:	bf 92       	push	r11
    2246:	cf 92       	push	r12
    2248:	df 92       	push	r13
    224a:	ef 92       	push	r14
    224c:	ff 92       	push	r15
    224e:	0f 93       	push	r16
    2250:	1f 93       	push	r17
    2252:	cf 93       	push	r28
    2254:	df 93       	push	r29
    2256:	fb 01       	movw	r30, r22
	int print,x,y,i;
	int prm=0,neg=0;
	*a=*(a+1)=*(a+2)=*(a+3)=0;
    2258:	d8 01       	movw	r26, r16
    225a:	13 96       	adiw	r26, 0x03	; 3
    225c:	1c 92       	st	X, r1
    225e:	13 97       	sbiw	r26, 0x03	; 3
    2260:	12 96       	adiw	r26, 0x02	; 2
    2262:	1c 92       	st	X, r1
    2264:	12 97       	sbiw	r26, 0x02	; 2
    2266:	11 96       	adiw	r26, 0x01	; 1
    2268:	1c 92       	st	X, r1
    226a:	11 97       	sbiw	r26, 0x01	; 1
    226c:	1c 92       	st	X, r1
		if (sign==2)
    226e:	22 30       	cpi	r18, 0x02	; 2
    2270:	31 05       	cpc	r19, r1
    2272:	29 f0       	breq	.+10     	; 0x227e <printfdata+0x40>
		{
			print=ans;
		}
		else if (sign==1)
    2274:	21 30       	cpi	r18, 0x01	; 1
    2276:	31 05       	cpc	r19, r1
    2278:	21 f0       	breq	.+8      	; 0x2282 <printfdata+0x44>
		{
			print=0;
		}
		else{
			print=cal;
    227a:	e8 2f       	mov	r30, r24
    227c:	f9 2f       	mov	r31, r25
		}
		
		if (print==0)
    227e:	30 97       	sbiw	r30, 0x00	; 0
    2280:	21 f4       	brne	.+8      	; 0x228a <printfdata+0x4c>
		{
			*a=*(a+1)=*(a+2)=0;
			*(a+3)=48;
    2282:	80 e3       	ldi	r24, 0x30	; 48
    2284:	f8 01       	movw	r30, r16
    2286:	83 83       	std	Z+3, r24	; 0x03
    2288:	a0 c0       	rjmp	.+320    	; 0x23ca <printfdata+0x18c>
		}
		else
		{
			if (print>0){
    228a:	1e 16       	cp	r1, r30
    228c:	1f 06       	cpc	r1, r31
    228e:	0c f0       	brlt	.+2      	; 0x2292 <printfdata+0x54>
    2290:	85 c0       	rjmp	.+266    	; 0x239c <printfdata+0x15e>
				if (print/10){
    2292:	9f 01       	movw	r18, r30
    2294:	cf 01       	movw	r24, r30
    2296:	09 96       	adiw	r24, 0x09	; 9
    2298:	83 31       	cpi	r24, 0x13	; 19
    229a:	91 05       	cpc	r25, r1
    229c:	08 f4       	brcc	.+2      	; 0x22a0 <printfdata+0x62>
    229e:	8a c0       	rjmp	.+276    	; 0x23b4 <printfdata+0x176>
					if (print/100){
    22a0:	86 5a       	subi	r24, 0xA6	; 166
    22a2:	9f 4f       	sbci	r25, 0xFF	; 255
    22a4:	87 3c       	cpi	r24, 0xC7	; 199
    22a6:	91 05       	cpc	r25, r1
    22a8:	08 f4       	brcc	.+2      	; 0x22ac <printfdata+0x6e>
    22aa:	87 c0       	rjmp	.+270    	; 0x23ba <printfdata+0x17c>
						if (print/1000){
    22ac:	29 51       	subi	r18, 0x19	; 25
    22ae:	3c 4f       	sbci	r19, 0xFC	; 252
    22b0:	2f 3c       	cpi	r18, 0xCF	; 207
    22b2:	37 40       	sbci	r19, 0x07	; 7
    22b4:	08 f0       	brcs	.+2      	; 0x22b8 <printfdata+0x7a>
    22b6:	84 c0       	rjmp	.+264    	; 0x23c0 <printfdata+0x182>
							prm=4;
						}
						else prm=3;
    22b8:	83 e0       	ldi	r24, 0x03	; 3
    22ba:	90 e0       	ldi	r25, 0x00	; 0
    22bc:	83 c0       	rjmp	.+262    	; 0x23c4 <printfdata+0x186>
  
  
		
void printfdata(int cal,int ans,int number,int sign,char *a){
	int print,x,y,i;
	int prm=0,neg=0;
    22be:	80 e0       	ldi	r24, 0x00	; 0
    22c0:	90 e0       	ldi	r25, 0x00	; 0
				}
				else prm=1;
			}
			if (print<0)
			{
				print=print*(-1);
    22c2:	44 27       	eor	r20, r20
    22c4:	55 27       	eor	r21, r21
    22c6:	4e 1b       	sub	r20, r30
    22c8:	5f 0b       	sbc	r21, r31
				neg=1;
				if (print/10)
    22ca:	29 e0       	ldi	r18, 0x09	; 9
    22cc:	30 e0       	ldi	r19, 0x00	; 0
    22ce:	2e 1b       	sub	r18, r30
    22d0:	3f 0b       	sbc	r19, r31
    22d2:	23 31       	cpi	r18, 0x13	; 19
    22d4:	31 05       	cpc	r19, r1
    22d6:	08 f4       	brcc	.+2      	; 0x22da <printfdata+0x9c>
    22d8:	4f c0       	rjmp	.+158    	; 0x2378 <printfdata+0x13a>
				{
					if (print/100)
    22da:	23 e6       	ldi	r18, 0x63	; 99
    22dc:	30 e0       	ldi	r19, 0x00	; 0
    22de:	2e 1b       	sub	r18, r30
    22e0:	3f 0b       	sbc	r19, r31
    22e2:	27 3c       	cpi	r18, 0xC7	; 199
    22e4:	31 05       	cpc	r19, r1
    22e6:	08 f4       	brcc	.+2      	; 0x22ea <printfdata+0xac>
    22e8:	4a c0       	rjmp	.+148    	; 0x237e <printfdata+0x140>
					{
						if (print/1000)
    22ea:	27 ee       	ldi	r18, 0xE7	; 231
    22ec:	33 e0       	ldi	r19, 0x03	; 3
    22ee:	2e 1b       	sub	r18, r30
    22f0:	3f 0b       	sbc	r19, r31
    22f2:	2f 3c       	cpi	r18, 0xCF	; 207
    22f4:	37 40       	sbci	r19, 0x07	; 7
    22f6:	08 f4       	brcc	.+2      	; 0x22fa <printfdata+0xbc>
    22f8:	45 c0       	rjmp	.+138    	; 0x2384 <printfdata+0x146>
				}
				else prm=1;
			}
			x=print;
			y=0;
			for (i=3;i>=4-prm;i--)
    22fa:	24 e0       	ldi	r18, 0x04	; 4
    22fc:	30 e0       	ldi	r19, 0x00	; 0
    22fe:	59 01       	movw	r10, r18
    2300:	a8 1a       	sub	r10, r24
    2302:	b9 0a       	sbc	r11, r25
    2304:	b4 e0       	ldi	r27, 0x04	; 4
    2306:	ab 16       	cp	r10, r27
    2308:	b1 04       	cpc	r11, r1
    230a:	7c f5       	brge	.+94     	; 0x236a <printfdata+0x12c>
				}
				else prm=1;
			}
			if (print<0)
			{
				print=print*(-1);
    230c:	fa 01       	movw	r30, r20
				{
					if (print/100)
					{
						if (print/1000)
						{
							neg=2;
    230e:	68 94       	set
    2310:	88 24       	eor	r8, r8
    2312:	81 f8       	bld	r8, 1
    2314:	91 2c       	mov	r9, r1
    2316:	e8 01       	movw	r28, r16
  
  
		
void printfdata(int cal,int ans,int number,int sign,char *a){
	int print,x,y,i;
	int prm=0,neg=0;
    2318:	0f 2e       	mov	r0, r31
    231a:	f3 e0       	ldi	r31, 0x03	; 3
    231c:	ef 2e       	mov	r14, r31
    231e:	f1 2c       	mov	r15, r1
    2320:	f0 2d       	mov	r31, r0
			}
			x=print;
			y=0;
			for (i=3;i>=4-prm;i--)
			{
				y=x-(x/10)*10;
    2322:	0f 2e       	mov	r0, r31
    2324:	fa e0       	ldi	r31, 0x0A	; 10
    2326:	cf 2e       	mov	r12, r31
    2328:	d1 2c       	mov	r13, r1
    232a:	f0 2d       	mov	r31, r0
				x=(x-y)/10;
				*(a+i)=y+48;
				if (neg==1)
				{
					*(a+i-1)=45;
    232c:	4d e2       	ldi	r20, 0x2D	; 45
			}
			x=print;
			y=0;
			for (i=3;i>=4-prm;i--)
			{
				y=x-(x/10)*10;
    232e:	cf 01       	movw	r24, r30
    2330:	b6 01       	movw	r22, r12
    2332:	f3 d1       	rcall	.+998    	; 0x271a <__divmodhi4>
    2334:	9c 01       	movw	r18, r24
				x=(x-y)/10;
    2336:	cf 01       	movw	r24, r30
    2338:	82 1b       	sub	r24, r18
    233a:	93 0b       	sbc	r25, r19
    233c:	b6 01       	movw	r22, r12
    233e:	ed d1       	rcall	.+986    	; 0x271a <__divmodhi4>
    2340:	fb 01       	movw	r30, r22
				*(a+i)=y+48;
    2342:	20 5d       	subi	r18, 0xD0	; 208
    2344:	2b 83       	std	Y+3, r18	; 0x03
				if (neg==1)
    2346:	61 e0       	ldi	r22, 0x01	; 1
    2348:	86 16       	cp	r8, r22
    234a:	91 04       	cpc	r9, r1
    234c:	09 f4       	brne	.+2      	; 0x2350 <printfdata+0x112>
				{
					*(a+i-1)=45;
    234e:	4a 83       	std	Y+2, r20	; 0x02
				}
				else prm=1;
			}
			x=print;
			y=0;
			for (i=3;i>=4-prm;i--)
    2350:	81 e0       	ldi	r24, 0x01	; 1
    2352:	e8 1a       	sub	r14, r24
    2354:	f1 08       	sbc	r15, r1
    2356:	21 97       	sbiw	r28, 0x01	; 1
    2358:	ea 14       	cp	r14, r10
    235a:	fb 04       	cpc	r15, r11
    235c:	44 f7       	brge	.-48     	; 0x232e <printfdata+0xf0>
				if (neg==1)
				{
					*(a+i-1)=45;
				}
			}
			if (x!=0||neg==2)
    235e:	ef 2b       	or	r30, r31
    2360:	21 f4       	brne	.+8      	; 0x236a <printfdata+0x12c>
    2362:	a2 e0       	ldi	r26, 0x02	; 2
    2364:	8a 16       	cp	r8, r26
    2366:	91 04       	cpc	r9, r1
    2368:	81 f5       	brne	.+96     	; 0x23ca <printfdata+0x18c>
			{
				*a=*(a+1)=*(a+2)=*(a+3)=45;
    236a:	8d e2       	ldi	r24, 0x2D	; 45
    236c:	f8 01       	movw	r30, r16
    236e:	83 83       	std	Z+3, r24	; 0x03
    2370:	82 83       	std	Z+2, r24	; 0x02
    2372:	81 83       	std	Z+1, r24	; 0x01
    2374:	80 83       	st	Z, r24
			}
		}
    
}
    2376:	29 c0       	rjmp	.+82     	; 0x23ca <printfdata+0x18c>
						}
						else prm=3;
					}
					else prm=2;
				}
				else prm=1;
    2378:	81 e0       	ldi	r24, 0x01	; 1
    237a:	90 e0       	ldi	r25, 0x00	; 0
    237c:	05 c0       	rjmp	.+10     	; 0x2388 <printfdata+0x14a>
						{
							neg=2;
						}
						else prm=3;
					}
					else prm=2;
    237e:	82 e0       	ldi	r24, 0x02	; 2
    2380:	90 e0       	ldi	r25, 0x00	; 0
    2382:	02 c0       	rjmp	.+4      	; 0x2388 <printfdata+0x14a>
					{
						if (print/1000)
						{
							neg=2;
						}
						else prm=3;
    2384:	83 e0       	ldi	r24, 0x03	; 3
    2386:	90 e0       	ldi	r25, 0x00	; 0
				}
				else prm=1;
			}
			x=print;
			y=0;
			for (i=3;i>=4-prm;i--)
    2388:	24 e0       	ldi	r18, 0x04	; 4
    238a:	30 e0       	ldi	r19, 0x00	; 0
    238c:	59 01       	movw	r10, r18
    238e:	a8 1a       	sub	r10, r24
    2390:	b9 0a       	sbc	r11, r25
    2392:	fa 01       	movw	r30, r20
    2394:	88 24       	eor	r8, r8
    2396:	83 94       	inc	r8
    2398:	91 2c       	mov	r9, r1
    239a:	bd cf       	rjmp	.-134    	; 0x2316 <printfdata+0xd8>
					}
					else prm=2;
				}
				else prm=1;
			}
			if (print<0)
    239c:	ff 23       	and	r31, r31
    239e:	0c f4       	brge	.+2      	; 0x23a2 <printfdata+0x164>
    23a0:	8e cf       	rjmp	.-228    	; 0x22be <printfdata+0x80>
    23a2:	e3 cf       	rjmp	.-58     	; 0x236a <printfdata+0x12c>
				}
				else prm=1;
			}
			x=print;
			y=0;
			for (i=3;i>=4-prm;i--)
    23a4:	24 e0       	ldi	r18, 0x04	; 4
    23a6:	30 e0       	ldi	r19, 0x00	; 0
    23a8:	59 01       	movw	r10, r18
    23aa:	a8 1a       	sub	r10, r24
    23ac:	b9 0a       	sbc	r11, r25
  
  
		
void printfdata(int cal,int ans,int number,int sign,char *a){
	int print,x,y,i;
	int prm=0,neg=0;
    23ae:	81 2c       	mov	r8, r1
    23b0:	91 2c       	mov	r9, r1
    23b2:	b1 cf       	rjmp	.-158    	; 0x2316 <printfdata+0xd8>
						}
						else prm=3;
					}
					else prm=2;
				}
				else prm=1;
    23b4:	81 e0       	ldi	r24, 0x01	; 1
    23b6:	90 e0       	ldi	r25, 0x00	; 0
    23b8:	05 c0       	rjmp	.+10     	; 0x23c4 <printfdata+0x186>
						if (print/1000){
							prm=4;
						}
						else prm=3;
					}
					else prm=2;
    23ba:	82 e0       	ldi	r24, 0x02	; 2
    23bc:	90 e0       	ldi	r25, 0x00	; 0
    23be:	02 c0       	rjmp	.+4      	; 0x23c4 <printfdata+0x186>
		{
			if (print>0){
				if (print/10){
					if (print/100){
						if (print/1000){
							prm=4;
    23c0:	84 e0       	ldi	r24, 0x04	; 4
    23c2:	90 e0       	ldi	r25, 0x00	; 0
					}
					else prm=2;
				}
				else prm=1;
			}
			if (print<0)
    23c4:	ff 23       	and	r31, r31
    23c6:	74 f7       	brge	.-36     	; 0x23a4 <printfdata+0x166>
    23c8:	7c cf       	rjmp	.-264    	; 0x22c2 <printfdata+0x84>
			{
				*a=*(a+1)=*(a+2)=*(a+3)=45;
			}
		}
    
}
    23ca:	df 91       	pop	r29
    23cc:	cf 91       	pop	r28
    23ce:	1f 91       	pop	r17
    23d0:	0f 91       	pop	r16
    23d2:	ff 90       	pop	r15
    23d4:	ef 90       	pop	r14
    23d6:	df 90       	pop	r13
    23d8:	cf 90       	pop	r12
    23da:	bf 90       	pop	r11
    23dc:	af 90       	pop	r10
    23de:	9f 90       	pop	r9
    23e0:	8f 90       	pop	r8
    23e2:	08 95       	ret

000023e4 <kb_get>:

void kb_get(char *a){
    23e4:	8f 92       	push	r8
    23e6:	9f 92       	push	r9
    23e8:	bf 92       	push	r11
    23ea:	cf 92       	push	r12
    23ec:	df 92       	push	r13
    23ee:	ef 92       	push	r14
    23f0:	ff 92       	push	r15
    23f2:	0f 93       	push	r16
    23f4:	1f 93       	push	r17
    23f6:	cf 93       	push	r28
    23f8:	df 93       	push	r29
    23fa:	cd b7       	in	r28, 0x3d	; 61
    23fc:	de b7       	in	r29, 0x3e	; 62
    23fe:	68 97       	sbiw	r28, 0x18	; 24
    2400:	0f b6       	in	r0, 0x3f	; 63
    2402:	f8 94       	cli
    2404:	de bf       	out	0x3e, r29	; 62
    2406:	0f be       	out	0x3f, r0	; 63
    2408:	cd bf       	out	0x3d, r28	; 61
    240a:	4c 01       	movw	r8, r24
	char num[4][4]={{48,65,66,70},{49,50,51,69},{52,53,54,68},{55,56,57,67}};
    240c:	20 e1       	ldi	r18, 0x10	; 16
    240e:	ec e5       	ldi	r30, 0x5C	; 92
    2410:	f1 e0       	ldi	r31, 0x01	; 1
    2412:	de 01       	movw	r26, r28
    2414:	11 96       	adiw	r26, 0x01	; 1
    2416:	01 90       	ld	r0, Z+
    2418:	0d 92       	st	X+, r0
    241a:	2a 95       	dec	r18
    241c:	e1 f7       	brne	.-8      	; 0x2416 <kb_get+0x32>
	char port[4]={0x70,0xb0,0xd0,0xe0},pin[4]={1,2,4,8};
    241e:	20 e7       	ldi	r18, 0x70	; 112
    2420:	29 8b       	std	Y+17, r18	; 0x11
    2422:	20 eb       	ldi	r18, 0xB0	; 176
    2424:	2a 8b       	std	Y+18, r18	; 0x12
    2426:	20 ed       	ldi	r18, 0xD0	; 208
    2428:	2b 8b       	std	Y+19, r18	; 0x13
    242a:	20 ee       	ldi	r18, 0xE0	; 224
    242c:	2c 8b       	std	Y+20, r18	; 0x14
    242e:	21 e0       	ldi	r18, 0x01	; 1
    2430:	2d 8b       	std	Y+21, r18	; 0x15
    2432:	22 e0       	ldi	r18, 0x02	; 2
    2434:	2e 8b       	std	Y+22, r18	; 0x16
    2436:	24 e0       	ldi	r18, 0x04	; 4
    2438:	2f 8b       	std	Y+23, r18	; 0x17
    243a:	28 e0       	ldi	r18, 0x08	; 8
    243c:	28 8f       	std	Y+24, r18	; 0x18
	int i=0,k=0,flg_1=1,hold=0,print_num=0;
	
	if (*a==0)
    243e:	fc 01       	movw	r30, r24
    2440:	20 81       	ld	r18, Z
    2442:	21 11       	cpse	r18, r1
    2444:	66 c0       	rjmp	.+204    	; 0x2512 <kb_get+0x12e>
    2446:	7e 01       	movw	r14, r28
    2448:	f1 e1       	ldi	r31, 0x11	; 17
    244a:	ef 0e       	add	r14, r31
    244c:	f1 1c       	adc	r15, r1
    244e:	8e 01       	movw	r16, r28
    2450:	0f 5f       	subi	r16, 0xFF	; 255
    2452:	1f 4f       	sbci	r17, 0xFF	; 255
    2454:	67 01       	movw	r12, r14
	{
	for (i=0;i<4;i++)
	{
		DDRC =0xf0;
    2456:	0f 2e       	mov	r0, r31
    2458:	f0 ef       	ldi	r31, 0xF0	; 240
    245a:	bf 2e       	mov	r11, r31
    245c:	f0 2d       	mov	r31, r0
    245e:	b4 ba       	out	0x14, r11	; 20
		PORTC=port[i];
    2460:	f7 01       	movw	r30, r14
    2462:	21 91       	ld	r18, Z+
    2464:	7f 01       	movw	r14, r30
    2466:	25 bb       	out	0x15, r18	; 21
    2468:	de 01       	movw	r26, r28
    246a:	55 96       	adiw	r26, 0x15	; 21
    246c:	b8 01       	movw	r22, r16
		for (k=0;k<4;k++)
    246e:	40 e0       	ldi	r20, 0x00	; 0
    2470:	50 e0       	ldi	r21, 0x00	; 0
		{
			DDRC=0xf0;
    2472:	b4 ba       	out	0x14, r11	; 20
			flg_1=((PINC&pin[k])>>k);
    2474:	33 b3       	in	r19, 0x13	; 19
    2476:	fd 01       	movw	r30, r26
			if (flg_1==0)
    2478:	2c 91       	ld	r18, X
    247a:	23 23       	and	r18, r19
    247c:	30 e0       	ldi	r19, 0x00	; 0
    247e:	04 2e       	mov	r0, r20
    2480:	02 c0       	rjmp	.+4      	; 0x2486 <kb_get+0xa2>
    2482:	35 95       	asr	r19
    2484:	27 95       	ror	r18
    2486:	0a 94       	dec	r0
    2488:	e2 f7       	brpl	.-8      	; 0x2482 <kb_get+0x9e>
    248a:	23 2b       	or	r18, r19
    248c:	91 f5       	brne	.+100    	; 0x24f2 <kb_get+0x10e>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    248e:	2f ee       	ldi	r18, 0xEF	; 239
    2490:	3a e9       	ldi	r19, 0x9A	; 154
    2492:	81 e0       	ldi	r24, 0x01	; 1
    2494:	21 50       	subi	r18, 0x01	; 1
    2496:	30 40       	sbci	r19, 0x00	; 0
    2498:	80 40       	sbci	r24, 0x00	; 0
    249a:	e1 f7       	brne	.-8      	; 0x2494 <kb_get+0xb0>
    249c:	00 c0       	rjmp	.+0      	; 0x249e <kb_get+0xba>
    249e:	00 00       	nop
			{
				_delay_ms(50);
				hold=0;
				while (hold==0)
				{
					DDRC=0xf0;
    24a0:	b4 ba       	out	0x14, r11	; 20
					flg_1=((PINC&pin[k])>>k);
    24a2:	33 b3       	in	r19, 0x13	; 19
					if (flg_1>0)
    24a4:	2c 91       	ld	r18, X
    24a6:	23 23       	and	r18, r19
    24a8:	30 e0       	ldi	r19, 0x00	; 0
    24aa:	04 2e       	mov	r0, r20
    24ac:	02 c0       	rjmp	.+4      	; 0x24b2 <kb_get+0xce>
    24ae:	35 95       	asr	r19
    24b0:	27 95       	ror	r18
    24b2:	0a 94       	dec	r0
    24b4:	e2 f7       	brpl	.-8      	; 0x24ae <kb_get+0xca>
    24b6:	12 16       	cp	r1, r18
    24b8:	13 06       	cpc	r1, r19
    24ba:	74 f0       	brlt	.+28     	; 0x24d8 <kb_get+0xf4>
			{
				_delay_ms(50);
				hold=0;
				while (hold==0)
				{
					DDRC=0xf0;
    24bc:	b4 ba       	out	0x14, r11	; 20
					flg_1=((PINC&pin[k])>>k);
    24be:	33 b3       	in	r19, 0x13	; 19
					if (flg_1>0)
    24c0:	20 81       	ld	r18, Z
    24c2:	23 23       	and	r18, r19
    24c4:	30 e0       	ldi	r19, 0x00	; 0
    24c6:	04 2e       	mov	r0, r20
    24c8:	02 c0       	rjmp	.+4      	; 0x24ce <kb_get+0xea>
    24ca:	35 95       	asr	r19
    24cc:	27 95       	ror	r18
    24ce:	0a 94       	dec	r0
    24d0:	e2 f7       	brpl	.-8      	; 0x24ca <kb_get+0xe6>
    24d2:	12 16       	cp	r1, r18
    24d4:	13 06       	cpc	r1, r19
    24d6:	94 f7       	brge	.-28     	; 0x24bc <kb_get+0xd8>
    24d8:	9f ee       	ldi	r25, 0xEF	; 239
    24da:	ea e9       	ldi	r30, 0x9A	; 154
    24dc:	f1 e0       	ldi	r31, 0x01	; 1
    24de:	91 50       	subi	r25, 0x01	; 1
    24e0:	e0 40       	sbci	r30, 0x00	; 0
    24e2:	f0 40       	sbci	r31, 0x00	; 0
    24e4:	e1 f7       	brne	.-8      	; 0x24de <kb_get+0xfa>
    24e6:	00 c0       	rjmp	.+0      	; 0x24e8 <kb_get+0x104>
    24e8:	00 00       	nop
					{
						_delay_ms(50);
						print_num=num[i][k];
						//printf("%d\n",print_num);
						*a=print_num;
    24ea:	fb 01       	movw	r30, r22
    24ec:	20 81       	ld	r18, Z
    24ee:	f4 01       	movw	r30, r8
    24f0:	20 83       	st	Z, r18
	{
	for (i=0;i<4;i++)
	{
		DDRC =0xf0;
		PORTC=port[i];
		for (k=0;k<4;k++)
    24f2:	4f 5f       	subi	r20, 0xFF	; 255
    24f4:	5f 4f       	sbci	r21, 0xFF	; 255
    24f6:	11 96       	adiw	r26, 0x01	; 1
    24f8:	6f 5f       	subi	r22, 0xFF	; 255
    24fa:	7f 4f       	sbci	r23, 0xFF	; 255
    24fc:	44 30       	cpi	r20, 0x04	; 4
    24fe:	51 05       	cpc	r21, r1
    2500:	09 f0       	breq	.+2      	; 0x2504 <kb_get+0x120>
    2502:	b7 cf       	rjmp	.-146    	; 0x2472 <kb_get+0x8e>
    2504:	0c 5f       	subi	r16, 0xFC	; 252
    2506:	1f 4f       	sbci	r17, 0xFF	; 255
	char port[4]={0x70,0xb0,0xd0,0xe0},pin[4]={1,2,4,8};
	int i=0,k=0,flg_1=1,hold=0,print_num=0;
	
	if (*a==0)
	{
	for (i=0;i<4;i++)
    2508:	0c 15       	cp	r16, r12
    250a:	1d 05       	cpc	r17, r13
    250c:	09 f0       	breq	.+2      	; 0x2510 <kb_get+0x12c>
    250e:	a7 cf       	rjmp	.-178    	; 0x245e <kb_get+0x7a>
    2510:	02 c0       	rjmp	.+4      	; 0x2516 <kb_get+0x132>
			}
		}
	}
}
else {
	*a=0;
    2512:	fc 01       	movw	r30, r24
    2514:	10 82       	st	Z, r1
}
    2516:	68 96       	adiw	r28, 0x18	; 24
    2518:	0f b6       	in	r0, 0x3f	; 63
    251a:	f8 94       	cli
    251c:	de bf       	out	0x3e, r29	; 62
    251e:	0f be       	out	0x3f, r0	; 63
    2520:	cd bf       	out	0x3d, r28	; 61
    2522:	df 91       	pop	r29
    2524:	cf 91       	pop	r28
    2526:	1f 91       	pop	r17
    2528:	0f 91       	pop	r16
    252a:	ff 90       	pop	r15
    252c:	ef 90       	pop	r14
    252e:	df 90       	pop	r13
    2530:	cf 90       	pop	r12
    2532:	bf 90       	pop	r11
    2534:	9f 90       	pop	r9
    2536:	8f 90       	pop	r8
    2538:	08 95       	ret

0000253a <main>:
void counting(char number,char sign,long int *a);
void calculate(long int cal,char number,char sign,long int *a,long int *b);
void printfdata(int cal,int ans,int number,int sing,char *a);
void kb_get(char *a);
int main(void)
{
    253a:	cf 93       	push	r28
    253c:	df 93       	push	r29
    253e:	cd b7       	in	r28, 0x3d	; 61
    2540:	de b7       	in	r29, 0x3e	; 62
    2542:	2f 97       	sbiw	r28, 0x0f	; 15
    2544:	0f b6       	in	r0, 0x3f	; 63
    2546:	f8 94       	cli
    2548:	de bf       	out	0x3e, r29	; 62
    254a:	0f be       	out	0x3f, r0	; 63
    254c:	cd bf       	out	0x3d, r28	; 61
	ASA_M128_set();
    254e:	0e 94 a3 02 	call	0x546	; 0x546 <ASA_M128_set>
    /* Replace with your application code */
	char n=0,a,b;
    2552:	19 82       	std	Y+1, r1	; 0x01
	long int m=0,ans=0;
    2554:	1c 82       	std	Y+4, r1	; 0x04
    2556:	1d 82       	std	Y+5, r1	; 0x05
    2558:	1e 82       	std	Y+6, r1	; 0x06
    255a:	1f 82       	std	Y+7, r1	; 0x07
    255c:	18 86       	std	Y+8, r1	; 0x08
    255e:	19 86       	std	Y+9, r1	; 0x09
    2560:	1a 86       	std	Y+10, r1	; 0x0a
    2562:	1b 86       	std	Y+11, r1	; 0x0b
	char p[4]={0,0,0,48};
    2564:	1c 86       	std	Y+12, r1	; 0x0c
    2566:	1d 86       	std	Y+13, r1	; 0x0d
    2568:	1e 86       	std	Y+14, r1	; 0x0e
    256a:	80 e3       	ldi	r24, 0x30	; 48
    256c:	8f 87       	std	Y+15, r24	; 0x0f
	ASA_7S00_set(1,200,0xFF,0,0);
    256e:	00 e0       	ldi	r16, 0x00	; 0
    2570:	20 e0       	ldi	r18, 0x00	; 0
    2572:	4f ef       	ldi	r20, 0xFF	; 255
    2574:	68 ec       	ldi	r22, 0xC8	; 200
    2576:	81 e0       	ldi	r24, 0x01	; 1
    2578:	0e 94 73 04 	call	0x8e6	; 0x8e6 <ASA_7S00_set>
    257c:	2f ed       	ldi	r18, 0xDF	; 223
    257e:	35 e3       	ldi	r19, 0x35	; 53
    2580:	83 e0       	ldi	r24, 0x03	; 3
    2582:	21 50       	subi	r18, 0x01	; 1
    2584:	30 40       	sbci	r19, 0x00	; 0
    2586:	80 40       	sbci	r24, 0x00	; 0
    2588:	e1 f7       	brne	.-8      	; 0x2582 <main+0x48>
    258a:	00 c0       	rjmp	.+0      	; 0x258c <main+0x52>
    258c:	00 00       	nop
	_delay_ms(100);
	
	ASA_7S00_put(1,0,4,p);
    258e:	9e 01       	movw	r18, r28
    2590:	24 5f       	subi	r18, 0xF4	; 244
    2592:	3f 4f       	sbci	r19, 0xFF	; 255
    2594:	44 e0       	ldi	r20, 0x04	; 4
    2596:	60 e0       	ldi	r22, 0x00	; 0
    2598:	81 e0       	ldi	r24, 0x01	; 1
    259a:	0e 94 11 04 	call	0x822	; 0x822 <ASA_7S00_put>
    259e:	9f ed       	ldi	r25, 0xDF	; 223
    25a0:	25 e3       	ldi	r18, 0x35	; 53
    25a2:	33 e0       	ldi	r19, 0x03	; 3
    25a4:	91 50       	subi	r25, 0x01	; 1
    25a6:	20 40       	sbci	r18, 0x00	; 0
    25a8:	30 40       	sbci	r19, 0x00	; 0
    25aa:	e1 f7       	brne	.-8      	; 0x25a4 <main+0x6a>
    25ac:	00 c0       	rjmp	.+0      	; 0x25ae <main+0x74>
    25ae:	00 00       	nop
			while(n!=65){
				kb_get(&n);
			}
		}
		keyresoure(n,&a,&b);
		printf("%d\t%d\n",a,b);
    25b0:	0f 2e       	mov	r0, r31
    25b2:	fc e6       	ldi	r31, 0x6C	; 108
    25b4:	8f 2e       	mov	r8, r31
    25b6:	f1 e0       	ldi	r31, 0x01	; 1
    25b8:	9f 2e       	mov	r9, r31
    25ba:	f0 2d       	mov	r31, r0
		if (a==10 && b==1)
		{
			m=ans=0;
		}
		counting(a,b,&m);
		printf("%d\n",m);
    25bc:	0f 2e       	mov	r0, r31
    25be:	ff e6       	ldi	r31, 0x6F	; 111
    25c0:	af 2e       	mov	r10, r31
    25c2:	f1 e0       	ldi	r31, 0x01	; 1
    25c4:	bf 2e       	mov	r11, r31
    25c6:	f0 2d       	mov	r31, r0
		calculate(m,a,b,&ans,&m);
			
		printfdata(m,ans,a,b,p);
		printf("%d\t",p[0]);
    25c8:	0f 2e       	mov	r0, r31
    25ca:	f3 e7       	ldi	r31, 0x73	; 115
    25cc:	cf 2e       	mov	r12, r31
    25ce:	f1 e0       	ldi	r31, 0x01	; 1
    25d0:	df 2e       	mov	r13, r31
    25d2:	f0 2d       	mov	r31, r0
    25d4:	03 c0       	rjmp	.+6      	; 0x25dc <main+0xa2>
	ASA_7S00_put(1,0,4,p);
	_delay_ms(100);
    while (1) 
    {
		while(n==0){
			kb_get(&n);
    25d6:	ce 01       	movw	r24, r28
    25d8:	01 96       	adiw	r24, 0x01	; 1
    25da:	04 df       	rcall	.-504    	; 0x23e4 <kb_get>
	
	ASA_7S00_put(1,0,4,p);
	_delay_ms(100);
    while (1) 
    {
		while(n==0){
    25dc:	89 81       	ldd	r24, Y+1	; 0x01
    25de:	88 23       	and	r24, r24
    25e0:	d1 f3       	breq	.-12     	; 0x25d6 <main+0x9c>
			kb_get(&n);
		}
		
		if (p[0]==45 && p[1]==45 && p[2]==45 && p[3]==45){
    25e2:	9c 85       	ldd	r25, Y+12	; 0x0c
    25e4:	9d 32       	cpi	r25, 0x2D	; 45
    25e6:	89 f4       	brne	.+34     	; 0x260a <main+0xd0>
    25e8:	9d 85       	ldd	r25, Y+13	; 0x0d
    25ea:	9d 32       	cpi	r25, 0x2D	; 45
    25ec:	71 f4       	brne	.+28     	; 0x260a <main+0xd0>
    25ee:	9e 85       	ldd	r25, Y+14	; 0x0e
    25f0:	9d 32       	cpi	r25, 0x2D	; 45
    25f2:	59 f4       	brne	.+22     	; 0x260a <main+0xd0>
    25f4:	9f 85       	ldd	r25, Y+15	; 0x0f
    25f6:	9d 32       	cpi	r25, 0x2D	; 45
    25f8:	41 f4       	brne	.+16     	; 0x260a <main+0xd0>
			while(n!=65){
    25fa:	81 34       	cpi	r24, 0x41	; 65
    25fc:	31 f0       	breq	.+12     	; 0x260a <main+0xd0>
				kb_get(&n);
    25fe:	ce 01       	movw	r24, r28
    2600:	01 96       	adiw	r24, 0x01	; 1
    2602:	f0 de       	rcall	.-544    	; 0x23e4 <kb_get>
		while(n==0){
			kb_get(&n);
		}
		
		if (p[0]==45 && p[1]==45 && p[2]==45 && p[3]==45){
			while(n!=65){
    2604:	89 81       	ldd	r24, Y+1	; 0x01
    2606:	81 34       	cpi	r24, 0x41	; 65
    2608:	d1 f7       	brne	.-12     	; 0x25fe <main+0xc4>
				kb_get(&n);
			}
		}
		keyresoure(n,&a,&b);
    260a:	ae 01       	movw	r20, r28
    260c:	4d 5f       	subi	r20, 0xFD	; 253
    260e:	5f 4f       	sbci	r21, 0xFF	; 255
    2610:	be 01       	movw	r22, r28
    2612:	6e 5f       	subi	r22, 0xFE	; 254
    2614:	7f 4f       	sbci	r23, 0xFF	; 255
    2616:	89 81       	ldd	r24, Y+1	; 0x01
    2618:	d8 db       	rcall	.-2128   	; 0x1dca <keyresoure>
		printf("%d\t%d\n",a,b);
    261a:	8b 81       	ldd	r24, Y+3	; 0x03
    261c:	1f 92       	push	r1
    261e:	8f 93       	push	r24
    2620:	8a 81       	ldd	r24, Y+2	; 0x02
    2622:	1f 92       	push	r1
    2624:	8f 93       	push	r24
    2626:	9f 92       	push	r9
    2628:	8f 92       	push	r8
    262a:	a7 d0       	rcall	.+334    	; 0x277a <printf>
		if (a==10 && b==1)
    262c:	8a 81       	ldd	r24, Y+2	; 0x02
    262e:	0f 90       	pop	r0
    2630:	0f 90       	pop	r0
    2632:	0f 90       	pop	r0
    2634:	0f 90       	pop	r0
    2636:	0f 90       	pop	r0
    2638:	0f 90       	pop	r0
    263a:	8a 30       	cpi	r24, 0x0A	; 10
    263c:	59 f4       	brne	.+22     	; 0x2654 <main+0x11a>
    263e:	9b 81       	ldd	r25, Y+3	; 0x03
    2640:	91 30       	cpi	r25, 0x01	; 1
    2642:	41 f4       	brne	.+16     	; 0x2654 <main+0x11a>
		{
			m=ans=0;
    2644:	18 86       	std	Y+8, r1	; 0x08
    2646:	19 86       	std	Y+9, r1	; 0x09
    2648:	1a 86       	std	Y+10, r1	; 0x0a
    264a:	1b 86       	std	Y+11, r1	; 0x0b
    264c:	1c 82       	std	Y+4, r1	; 0x04
    264e:	1d 82       	std	Y+5, r1	; 0x05
    2650:	1e 82       	std	Y+6, r1	; 0x06
    2652:	1f 82       	std	Y+7, r1	; 0x07
		}
		counting(a,b,&m);
    2654:	ae 01       	movw	r20, r28
    2656:	4c 5f       	subi	r20, 0xFC	; 252
    2658:	5f 4f       	sbci	r21, 0xFF	; 255
    265a:	6b 81       	ldd	r22, Y+3	; 0x03
    265c:	f3 db       	rcall	.-2074   	; 0x1e44 <counting>
		printf("%d\n",m);
    265e:	8f 81       	ldd	r24, Y+7	; 0x07
    2660:	8f 93       	push	r24
    2662:	8e 81       	ldd	r24, Y+6	; 0x06
    2664:	8f 93       	push	r24
    2666:	8d 81       	ldd	r24, Y+5	; 0x05
    2668:	8f 93       	push	r24
    266a:	8c 81       	ldd	r24, Y+4	; 0x04
    266c:	8f 93       	push	r24
    266e:	bf 92       	push	r11
    2670:	af 92       	push	r10
    2672:	83 d0       	rcall	.+262    	; 0x277a <printf>
		calculate(m,a,b,&ans,&m);
    2674:	6c 81       	ldd	r22, Y+4	; 0x04
    2676:	7d 81       	ldd	r23, Y+5	; 0x05
    2678:	8e 81       	ldd	r24, Y+6	; 0x06
    267a:	9f 81       	ldd	r25, Y+7	; 0x07
    267c:	9e 01       	movw	r18, r28
    267e:	2c 5f       	subi	r18, 0xFC	; 252
    2680:	3f 4f       	sbci	r19, 0xFF	; 255
    2682:	79 01       	movw	r14, r18
    2684:	8e 01       	movw	r16, r28
    2686:	08 5f       	subi	r16, 0xF8	; 248
    2688:	1f 4f       	sbci	r17, 0xFF	; 255
    268a:	2b 81       	ldd	r18, Y+3	; 0x03
    268c:	4a 81       	ldd	r20, Y+2	; 0x02
    268e:	35 dc       	rcall	.-1942   	; 0x1efa <calculate>
			
		printfdata(m,ans,a,b,p);
    2690:	2b 81       	ldd	r18, Y+3	; 0x03
    2692:	30 e0       	ldi	r19, 0x00	; 0
    2694:	4a 81       	ldd	r20, Y+2	; 0x02
    2696:	50 e0       	ldi	r21, 0x00	; 0
    2698:	68 85       	ldd	r22, Y+8	; 0x08
    269a:	79 85       	ldd	r23, Y+9	; 0x09
    269c:	0c 5f       	subi	r16, 0xFC	; 252
    269e:	1f 4f       	sbci	r17, 0xFF	; 255
    26a0:	8c 81       	ldd	r24, Y+4	; 0x04
    26a2:	9d 81       	ldd	r25, Y+5	; 0x05
		printf("%d\t",p[0]);
    26a4:	cc dd       	rcall	.-1128   	; 0x223e <printfdata>
    26a6:	8c 85       	ldd	r24, Y+12	; 0x0c
    26a8:	1f 92       	push	r1
    26aa:	8f 93       	push	r24
    26ac:	df 92       	push	r13
    26ae:	cf 92       	push	r12
		printf("%d\t",p[1]);
    26b0:	64 d0       	rcall	.+200    	; 0x277a <printf>
    26b2:	8d 85       	ldd	r24, Y+13	; 0x0d
    26b4:	1f 92       	push	r1
    26b6:	8f 93       	push	r24
    26b8:	df 92       	push	r13
    26ba:	cf 92       	push	r12
		printf("%d\t",p[2]);
    26bc:	5e d0       	rcall	.+188    	; 0x277a <printf>
    26be:	8e 85       	ldd	r24, Y+14	; 0x0e
    26c0:	1f 92       	push	r1
    26c2:	8f 93       	push	r24
    26c4:	df 92       	push	r13
    26c6:	cf 92       	push	r12
		printf("%d\n",p[3]);
    26c8:	58 d0       	rcall	.+176    	; 0x277a <printf>
    26ca:	8f 85       	ldd	r24, Y+15	; 0x0f
    26cc:	1f 92       	push	r1
    26ce:	8f 93       	push	r24
    26d0:	bf 92       	push	r11
    26d2:	af 92       	push	r10
    26d4:	52 d0       	rcall	.+164    	; 0x277a <printf>
		ASA_7S00_put(1,0,4,p);
    26d6:	98 01       	movw	r18, r16
    26d8:	44 e0       	ldi	r20, 0x04	; 4
    26da:	60 e0       	ldi	r22, 0x00	; 0
    26dc:	81 e0       	ldi	r24, 0x01	; 1
    26de:	0e 94 11 04 	call	0x822	; 0x822 <ASA_7S00_put>
    26e2:	3f ed       	ldi	r19, 0xDF	; 223
    26e4:	85 e3       	ldi	r24, 0x35	; 53
    26e6:	93 e0       	ldi	r25, 0x03	; 3
    26e8:	31 50       	subi	r19, 0x01	; 1
    26ea:	80 40       	sbci	r24, 0x00	; 0
    26ec:	90 40       	sbci	r25, 0x00	; 0
    26ee:	e1 f7       	brne	.-8      	; 0x26e8 <main+0x1ae>
    26f0:	00 c0       	rjmp	.+0      	; 0x26f2 <main+0x1b8>
		_delay_ms(100);
		while(n!=0){
    26f2:	00 00       	nop
    26f4:	0f b6       	in	r0, 0x3f	; 63
    26f6:	f8 94       	cli
    26f8:	de bf       	out	0x3e, r29	; 62
    26fa:	0f be       	out	0x3f, r0	; 63
    26fc:	cd bf       	out	0x3d, r28	; 61
    26fe:	89 81       	ldd	r24, Y+1	; 0x01
    2700:	88 23       	and	r24, r24
			kb_get(&n);
    2702:	09 f4       	brne	.+2      	; 0x2706 <main+0x1cc>
    2704:	6b cf       	rjmp	.-298    	; 0x25dc <main+0xa2>
    2706:	ce 01       	movw	r24, r28
    2708:	01 96       	adiw	r24, 0x01	; 1
			printf("inwhile!!\n");
    270a:	6c de       	rcall	.-808    	; 0x23e4 <kb_get>
    270c:	87 e7       	ldi	r24, 0x77	; 119
    270e:	91 e0       	ldi	r25, 0x01	; 1
    2710:	47 d0       	rcall	.+142    	; 0x27a0 <puts>
		printf("%d\t",p[1]);
		printf("%d\t",p[2]);
		printf("%d\n",p[3]);
		ASA_7S00_put(1,0,4,p);
		_delay_ms(100);
		while(n!=0){
    2712:	89 81       	ldd	r24, Y+1	; 0x01
    2714:	81 11       	cpse	r24, r1
    2716:	f7 cf       	rjmp	.-18     	; 0x2706 <main+0x1cc>
    2718:	61 cf       	rjmp	.-318    	; 0x25dc <main+0xa2>

0000271a <__divmodhi4>:
    271a:	97 fb       	bst	r25, 7
    271c:	07 2e       	mov	r0, r23
    271e:	16 f4       	brtc	.+4      	; 0x2724 <__divmodhi4+0xa>
    2720:	00 94       	com	r0
    2722:	06 d0       	rcall	.+12     	; 0x2730 <__divmodhi4_neg1>
    2724:	77 fd       	sbrc	r23, 7
    2726:	08 d0       	rcall	.+16     	; 0x2738 <__divmodhi4_neg2>
    2728:	14 d0       	rcall	.+40     	; 0x2752 <__udivmodhi4>
    272a:	07 fc       	sbrc	r0, 7
    272c:	05 d0       	rcall	.+10     	; 0x2738 <__divmodhi4_neg2>
    272e:	3e f4       	brtc	.+14     	; 0x273e <__divmodhi4_exit>

00002730 <__divmodhi4_neg1>:
    2730:	90 95       	com	r25
    2732:	81 95       	neg	r24
    2734:	9f 4f       	sbci	r25, 0xFF	; 255
    2736:	08 95       	ret

00002738 <__divmodhi4_neg2>:
    2738:	70 95       	com	r23
    273a:	61 95       	neg	r22
    273c:	7f 4f       	sbci	r23, 0xFF	; 255

0000273e <__divmodhi4_exit>:
    273e:	08 95       	ret

00002740 <__tablejump2__>:
    2740:	ee 0f       	add	r30, r30
    2742:	ff 1f       	adc	r31, r31
    2744:	00 24       	eor	r0, r0
    2746:	00 1c       	adc	r0, r0
    2748:	0b be       	out	0x3b, r0	; 59
    274a:	07 90       	elpm	r0, Z+
    274c:	f6 91       	elpm	r31, Z
    274e:	e0 2d       	mov	r30, r0
    2750:	09 94       	ijmp

00002752 <__udivmodhi4>:
    2752:	aa 1b       	sub	r26, r26
    2754:	bb 1b       	sub	r27, r27
    2756:	51 e1       	ldi	r21, 0x11	; 17
    2758:	07 c0       	rjmp	.+14     	; 0x2768 <__udivmodhi4_ep>

0000275a <__udivmodhi4_loop>:
    275a:	aa 1f       	adc	r26, r26
    275c:	bb 1f       	adc	r27, r27
    275e:	a6 17       	cp	r26, r22
    2760:	b7 07       	cpc	r27, r23
    2762:	10 f0       	brcs	.+4      	; 0x2768 <__udivmodhi4_ep>
    2764:	a6 1b       	sub	r26, r22
    2766:	b7 0b       	sbc	r27, r23

00002768 <__udivmodhi4_ep>:
    2768:	88 1f       	adc	r24, r24
    276a:	99 1f       	adc	r25, r25
    276c:	5a 95       	dec	r21
    276e:	a9 f7       	brne	.-22     	; 0x275a <__udivmodhi4_loop>
    2770:	80 95       	com	r24
    2772:	90 95       	com	r25
    2774:	bc 01       	movw	r22, r24
    2776:	cd 01       	movw	r24, r26
    2778:	08 95       	ret

0000277a <printf>:
    277a:	cf 93       	push	r28
    277c:	df 93       	push	r29
    277e:	cd b7       	in	r28, 0x3d	; 61
    2780:	de b7       	in	r29, 0x3e	; 62
    2782:	ae 01       	movw	r20, r28
    2784:	4b 5f       	subi	r20, 0xFB	; 251
    2786:	5f 4f       	sbci	r21, 0xFF	; 255
    2788:	fa 01       	movw	r30, r20
    278a:	61 91       	ld	r22, Z+
    278c:	71 91       	ld	r23, Z+
    278e:	af 01       	movw	r20, r30
    2790:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <__iob+0x2>
    2794:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <__iob+0x3>
    2798:	33 d0       	rcall	.+102    	; 0x2800 <vfprintf>
    279a:	df 91       	pop	r29
    279c:	cf 91       	pop	r28
    279e:	08 95       	ret

000027a0 <puts>:
    27a0:	0f 93       	push	r16
    27a2:	1f 93       	push	r17
    27a4:	cf 93       	push	r28
    27a6:	df 93       	push	r29
    27a8:	e0 91 1e 02 	lds	r30, 0x021E	; 0x80021e <__iob+0x2>
    27ac:	f0 91 1f 02 	lds	r31, 0x021F	; 0x80021f <__iob+0x3>
    27b0:	23 81       	ldd	r18, Z+3	; 0x03
    27b2:	21 ff       	sbrs	r18, 1
    27b4:	1b c0       	rjmp	.+54     	; 0x27ec <puts+0x4c>
    27b6:	8c 01       	movw	r16, r24
    27b8:	d0 e0       	ldi	r29, 0x00	; 0
    27ba:	c0 e0       	ldi	r28, 0x00	; 0
    27bc:	f8 01       	movw	r30, r16
    27be:	81 91       	ld	r24, Z+
    27c0:	8f 01       	movw	r16, r30
    27c2:	60 91 1e 02 	lds	r22, 0x021E	; 0x80021e <__iob+0x2>
    27c6:	70 91 1f 02 	lds	r23, 0x021F	; 0x80021f <__iob+0x3>
    27ca:	db 01       	movw	r26, r22
    27cc:	18 96       	adiw	r26, 0x08	; 8
    27ce:	ed 91       	ld	r30, X+
    27d0:	fc 91       	ld	r31, X
    27d2:	19 97       	sbiw	r26, 0x09	; 9
    27d4:	88 23       	and	r24, r24
    27d6:	31 f0       	breq	.+12     	; 0x27e4 <puts+0x44>
    27d8:	09 95       	icall
    27da:	89 2b       	or	r24, r25
    27dc:	79 f3       	breq	.-34     	; 0x27bc <puts+0x1c>
    27de:	df ef       	ldi	r29, 0xFF	; 255
    27e0:	cf ef       	ldi	r28, 0xFF	; 255
    27e2:	ec cf       	rjmp	.-40     	; 0x27bc <puts+0x1c>
    27e4:	8a e0       	ldi	r24, 0x0A	; 10
    27e6:	09 95       	icall
    27e8:	89 2b       	or	r24, r25
    27ea:	19 f0       	breq	.+6      	; 0x27f2 <puts+0x52>
    27ec:	8f ef       	ldi	r24, 0xFF	; 255
    27ee:	9f ef       	ldi	r25, 0xFF	; 255
    27f0:	02 c0       	rjmp	.+4      	; 0x27f6 <puts+0x56>
    27f2:	8d 2f       	mov	r24, r29
    27f4:	9c 2f       	mov	r25, r28
    27f6:	df 91       	pop	r29
    27f8:	cf 91       	pop	r28
    27fa:	1f 91       	pop	r17
    27fc:	0f 91       	pop	r16
    27fe:	08 95       	ret

00002800 <vfprintf>:
    2800:	2f 92       	push	r2
    2802:	3f 92       	push	r3
    2804:	4f 92       	push	r4
    2806:	5f 92       	push	r5
    2808:	6f 92       	push	r6
    280a:	7f 92       	push	r7
    280c:	8f 92       	push	r8
    280e:	9f 92       	push	r9
    2810:	af 92       	push	r10
    2812:	bf 92       	push	r11
    2814:	cf 92       	push	r12
    2816:	df 92       	push	r13
    2818:	ef 92       	push	r14
    281a:	ff 92       	push	r15
    281c:	0f 93       	push	r16
    281e:	1f 93       	push	r17
    2820:	cf 93       	push	r28
    2822:	df 93       	push	r29
    2824:	cd b7       	in	r28, 0x3d	; 61
    2826:	de b7       	in	r29, 0x3e	; 62
    2828:	2b 97       	sbiw	r28, 0x0b	; 11
    282a:	0f b6       	in	r0, 0x3f	; 63
    282c:	f8 94       	cli
    282e:	de bf       	out	0x3e, r29	; 62
    2830:	0f be       	out	0x3f, r0	; 63
    2832:	cd bf       	out	0x3d, r28	; 61
    2834:	6c 01       	movw	r12, r24
    2836:	7b 01       	movw	r14, r22
    2838:	8a 01       	movw	r16, r20
    283a:	fc 01       	movw	r30, r24
    283c:	17 82       	std	Z+7, r1	; 0x07
    283e:	16 82       	std	Z+6, r1	; 0x06
    2840:	83 81       	ldd	r24, Z+3	; 0x03
    2842:	81 ff       	sbrs	r24, 1
    2844:	bf c1       	rjmp	.+894    	; 0x2bc4 <vfprintf+0x3c4>
    2846:	ce 01       	movw	r24, r28
    2848:	01 96       	adiw	r24, 0x01	; 1
    284a:	3c 01       	movw	r6, r24
    284c:	f6 01       	movw	r30, r12
    284e:	93 81       	ldd	r25, Z+3	; 0x03
    2850:	f7 01       	movw	r30, r14
    2852:	93 fd       	sbrc	r25, 3
    2854:	85 91       	lpm	r24, Z+
    2856:	93 ff       	sbrs	r25, 3
    2858:	81 91       	ld	r24, Z+
    285a:	7f 01       	movw	r14, r30
    285c:	88 23       	and	r24, r24
    285e:	09 f4       	brne	.+2      	; 0x2862 <vfprintf+0x62>
    2860:	ad c1       	rjmp	.+858    	; 0x2bbc <vfprintf+0x3bc>
    2862:	85 32       	cpi	r24, 0x25	; 37
    2864:	39 f4       	brne	.+14     	; 0x2874 <vfprintf+0x74>
    2866:	93 fd       	sbrc	r25, 3
    2868:	85 91       	lpm	r24, Z+
    286a:	93 ff       	sbrs	r25, 3
    286c:	81 91       	ld	r24, Z+
    286e:	7f 01       	movw	r14, r30
    2870:	85 32       	cpi	r24, 0x25	; 37
    2872:	21 f4       	brne	.+8      	; 0x287c <vfprintf+0x7c>
    2874:	b6 01       	movw	r22, r12
    2876:	90 e0       	ldi	r25, 0x00	; 0
    2878:	d6 d1       	rcall	.+940    	; 0x2c26 <fputc>
    287a:	e8 cf       	rjmp	.-48     	; 0x284c <vfprintf+0x4c>
    287c:	91 2c       	mov	r9, r1
    287e:	21 2c       	mov	r2, r1
    2880:	31 2c       	mov	r3, r1
    2882:	ff e1       	ldi	r31, 0x1F	; 31
    2884:	f3 15       	cp	r31, r3
    2886:	d8 f0       	brcs	.+54     	; 0x28be <vfprintf+0xbe>
    2888:	8b 32       	cpi	r24, 0x2B	; 43
    288a:	79 f0       	breq	.+30     	; 0x28aa <vfprintf+0xaa>
    288c:	38 f4       	brcc	.+14     	; 0x289c <vfprintf+0x9c>
    288e:	80 32       	cpi	r24, 0x20	; 32
    2890:	79 f0       	breq	.+30     	; 0x28b0 <vfprintf+0xb0>
    2892:	83 32       	cpi	r24, 0x23	; 35
    2894:	a1 f4       	brne	.+40     	; 0x28be <vfprintf+0xbe>
    2896:	23 2d       	mov	r18, r3
    2898:	20 61       	ori	r18, 0x10	; 16
    289a:	1d c0       	rjmp	.+58     	; 0x28d6 <vfprintf+0xd6>
    289c:	8d 32       	cpi	r24, 0x2D	; 45
    289e:	61 f0       	breq	.+24     	; 0x28b8 <vfprintf+0xb8>
    28a0:	80 33       	cpi	r24, 0x30	; 48
    28a2:	69 f4       	brne	.+26     	; 0x28be <vfprintf+0xbe>
    28a4:	23 2d       	mov	r18, r3
    28a6:	21 60       	ori	r18, 0x01	; 1
    28a8:	16 c0       	rjmp	.+44     	; 0x28d6 <vfprintf+0xd6>
    28aa:	83 2d       	mov	r24, r3
    28ac:	82 60       	ori	r24, 0x02	; 2
    28ae:	38 2e       	mov	r3, r24
    28b0:	e3 2d       	mov	r30, r3
    28b2:	e4 60       	ori	r30, 0x04	; 4
    28b4:	3e 2e       	mov	r3, r30
    28b6:	2a c0       	rjmp	.+84     	; 0x290c <vfprintf+0x10c>
    28b8:	f3 2d       	mov	r31, r3
    28ba:	f8 60       	ori	r31, 0x08	; 8
    28bc:	1d c0       	rjmp	.+58     	; 0x28f8 <vfprintf+0xf8>
    28be:	37 fc       	sbrc	r3, 7
    28c0:	2d c0       	rjmp	.+90     	; 0x291c <vfprintf+0x11c>
    28c2:	20 ed       	ldi	r18, 0xD0	; 208
    28c4:	28 0f       	add	r18, r24
    28c6:	2a 30       	cpi	r18, 0x0A	; 10
    28c8:	40 f0       	brcs	.+16     	; 0x28da <vfprintf+0xda>
    28ca:	8e 32       	cpi	r24, 0x2E	; 46
    28cc:	b9 f4       	brne	.+46     	; 0x28fc <vfprintf+0xfc>
    28ce:	36 fc       	sbrc	r3, 6
    28d0:	75 c1       	rjmp	.+746    	; 0x2bbc <vfprintf+0x3bc>
    28d2:	23 2d       	mov	r18, r3
    28d4:	20 64       	ori	r18, 0x40	; 64
    28d6:	32 2e       	mov	r3, r18
    28d8:	19 c0       	rjmp	.+50     	; 0x290c <vfprintf+0x10c>
    28da:	36 fe       	sbrs	r3, 6
    28dc:	06 c0       	rjmp	.+12     	; 0x28ea <vfprintf+0xea>
    28de:	8a e0       	ldi	r24, 0x0A	; 10
    28e0:	98 9e       	mul	r9, r24
    28e2:	20 0d       	add	r18, r0
    28e4:	11 24       	eor	r1, r1
    28e6:	92 2e       	mov	r9, r18
    28e8:	11 c0       	rjmp	.+34     	; 0x290c <vfprintf+0x10c>
    28ea:	ea e0       	ldi	r30, 0x0A	; 10
    28ec:	2e 9e       	mul	r2, r30
    28ee:	20 0d       	add	r18, r0
    28f0:	11 24       	eor	r1, r1
    28f2:	22 2e       	mov	r2, r18
    28f4:	f3 2d       	mov	r31, r3
    28f6:	f0 62       	ori	r31, 0x20	; 32
    28f8:	3f 2e       	mov	r3, r31
    28fa:	08 c0       	rjmp	.+16     	; 0x290c <vfprintf+0x10c>
    28fc:	8c 36       	cpi	r24, 0x6C	; 108
    28fe:	21 f4       	brne	.+8      	; 0x2908 <vfprintf+0x108>
    2900:	83 2d       	mov	r24, r3
    2902:	80 68       	ori	r24, 0x80	; 128
    2904:	38 2e       	mov	r3, r24
    2906:	02 c0       	rjmp	.+4      	; 0x290c <vfprintf+0x10c>
    2908:	88 36       	cpi	r24, 0x68	; 104
    290a:	41 f4       	brne	.+16     	; 0x291c <vfprintf+0x11c>
    290c:	f7 01       	movw	r30, r14
    290e:	93 fd       	sbrc	r25, 3
    2910:	85 91       	lpm	r24, Z+
    2912:	93 ff       	sbrs	r25, 3
    2914:	81 91       	ld	r24, Z+
    2916:	7f 01       	movw	r14, r30
    2918:	81 11       	cpse	r24, r1
    291a:	b3 cf       	rjmp	.-154    	; 0x2882 <vfprintf+0x82>
    291c:	98 2f       	mov	r25, r24
    291e:	9f 7d       	andi	r25, 0xDF	; 223
    2920:	95 54       	subi	r25, 0x45	; 69
    2922:	93 30       	cpi	r25, 0x03	; 3
    2924:	28 f4       	brcc	.+10     	; 0x2930 <vfprintf+0x130>
    2926:	0c 5f       	subi	r16, 0xFC	; 252
    2928:	1f 4f       	sbci	r17, 0xFF	; 255
    292a:	9f e3       	ldi	r25, 0x3F	; 63
    292c:	99 83       	std	Y+1, r25	; 0x01
    292e:	0d c0       	rjmp	.+26     	; 0x294a <vfprintf+0x14a>
    2930:	83 36       	cpi	r24, 0x63	; 99
    2932:	31 f0       	breq	.+12     	; 0x2940 <vfprintf+0x140>
    2934:	83 37       	cpi	r24, 0x73	; 115
    2936:	71 f0       	breq	.+28     	; 0x2954 <vfprintf+0x154>
    2938:	83 35       	cpi	r24, 0x53	; 83
    293a:	09 f0       	breq	.+2      	; 0x293e <vfprintf+0x13e>
    293c:	55 c0       	rjmp	.+170    	; 0x29e8 <vfprintf+0x1e8>
    293e:	20 c0       	rjmp	.+64     	; 0x2980 <vfprintf+0x180>
    2940:	f8 01       	movw	r30, r16
    2942:	80 81       	ld	r24, Z
    2944:	89 83       	std	Y+1, r24	; 0x01
    2946:	0e 5f       	subi	r16, 0xFE	; 254
    2948:	1f 4f       	sbci	r17, 0xFF	; 255
    294a:	88 24       	eor	r8, r8
    294c:	83 94       	inc	r8
    294e:	91 2c       	mov	r9, r1
    2950:	53 01       	movw	r10, r6
    2952:	12 c0       	rjmp	.+36     	; 0x2978 <vfprintf+0x178>
    2954:	28 01       	movw	r4, r16
    2956:	f2 e0       	ldi	r31, 0x02	; 2
    2958:	4f 0e       	add	r4, r31
    295a:	51 1c       	adc	r5, r1
    295c:	f8 01       	movw	r30, r16
    295e:	a0 80       	ld	r10, Z
    2960:	b1 80       	ldd	r11, Z+1	; 0x01
    2962:	36 fe       	sbrs	r3, 6
    2964:	03 c0       	rjmp	.+6      	; 0x296c <vfprintf+0x16c>
    2966:	69 2d       	mov	r22, r9
    2968:	70 e0       	ldi	r23, 0x00	; 0
    296a:	02 c0       	rjmp	.+4      	; 0x2970 <vfprintf+0x170>
    296c:	6f ef       	ldi	r22, 0xFF	; 255
    296e:	7f ef       	ldi	r23, 0xFF	; 255
    2970:	c5 01       	movw	r24, r10
    2972:	4e d1       	rcall	.+668    	; 0x2c10 <strnlen>
    2974:	4c 01       	movw	r8, r24
    2976:	82 01       	movw	r16, r4
    2978:	f3 2d       	mov	r31, r3
    297a:	ff 77       	andi	r31, 0x7F	; 127
    297c:	3f 2e       	mov	r3, r31
    297e:	15 c0       	rjmp	.+42     	; 0x29aa <vfprintf+0x1aa>
    2980:	28 01       	movw	r4, r16
    2982:	22 e0       	ldi	r18, 0x02	; 2
    2984:	42 0e       	add	r4, r18
    2986:	51 1c       	adc	r5, r1
    2988:	f8 01       	movw	r30, r16
    298a:	a0 80       	ld	r10, Z
    298c:	b1 80       	ldd	r11, Z+1	; 0x01
    298e:	36 fe       	sbrs	r3, 6
    2990:	03 c0       	rjmp	.+6      	; 0x2998 <vfprintf+0x198>
    2992:	69 2d       	mov	r22, r9
    2994:	70 e0       	ldi	r23, 0x00	; 0
    2996:	02 c0       	rjmp	.+4      	; 0x299c <vfprintf+0x19c>
    2998:	6f ef       	ldi	r22, 0xFF	; 255
    299a:	7f ef       	ldi	r23, 0xFF	; 255
    299c:	c5 01       	movw	r24, r10
    299e:	2d d1       	rcall	.+602    	; 0x2bfa <strnlen_P>
    29a0:	4c 01       	movw	r8, r24
    29a2:	f3 2d       	mov	r31, r3
    29a4:	f0 68       	ori	r31, 0x80	; 128
    29a6:	3f 2e       	mov	r3, r31
    29a8:	82 01       	movw	r16, r4
    29aa:	33 fc       	sbrc	r3, 3
    29ac:	19 c0       	rjmp	.+50     	; 0x29e0 <vfprintf+0x1e0>
    29ae:	82 2d       	mov	r24, r2
    29b0:	90 e0       	ldi	r25, 0x00	; 0
    29b2:	88 16       	cp	r8, r24
    29b4:	99 06       	cpc	r9, r25
    29b6:	a0 f4       	brcc	.+40     	; 0x29e0 <vfprintf+0x1e0>
    29b8:	b6 01       	movw	r22, r12
    29ba:	80 e2       	ldi	r24, 0x20	; 32
    29bc:	90 e0       	ldi	r25, 0x00	; 0
    29be:	33 d1       	rcall	.+614    	; 0x2c26 <fputc>
    29c0:	2a 94       	dec	r2
    29c2:	f5 cf       	rjmp	.-22     	; 0x29ae <vfprintf+0x1ae>
    29c4:	f5 01       	movw	r30, r10
    29c6:	37 fc       	sbrc	r3, 7
    29c8:	85 91       	lpm	r24, Z+
    29ca:	37 fe       	sbrs	r3, 7
    29cc:	81 91       	ld	r24, Z+
    29ce:	5f 01       	movw	r10, r30
    29d0:	b6 01       	movw	r22, r12
    29d2:	90 e0       	ldi	r25, 0x00	; 0
    29d4:	28 d1       	rcall	.+592    	; 0x2c26 <fputc>
    29d6:	21 10       	cpse	r2, r1
    29d8:	2a 94       	dec	r2
    29da:	21 e0       	ldi	r18, 0x01	; 1
    29dc:	82 1a       	sub	r8, r18
    29de:	91 08       	sbc	r9, r1
    29e0:	81 14       	cp	r8, r1
    29e2:	91 04       	cpc	r9, r1
    29e4:	79 f7       	brne	.-34     	; 0x29c4 <vfprintf+0x1c4>
    29e6:	e1 c0       	rjmp	.+450    	; 0x2baa <vfprintf+0x3aa>
    29e8:	84 36       	cpi	r24, 0x64	; 100
    29ea:	11 f0       	breq	.+4      	; 0x29f0 <vfprintf+0x1f0>
    29ec:	89 36       	cpi	r24, 0x69	; 105
    29ee:	39 f5       	brne	.+78     	; 0x2a3e <vfprintf+0x23e>
    29f0:	f8 01       	movw	r30, r16
    29f2:	37 fe       	sbrs	r3, 7
    29f4:	07 c0       	rjmp	.+14     	; 0x2a04 <vfprintf+0x204>
    29f6:	60 81       	ld	r22, Z
    29f8:	71 81       	ldd	r23, Z+1	; 0x01
    29fa:	82 81       	ldd	r24, Z+2	; 0x02
    29fc:	93 81       	ldd	r25, Z+3	; 0x03
    29fe:	0c 5f       	subi	r16, 0xFC	; 252
    2a00:	1f 4f       	sbci	r17, 0xFF	; 255
    2a02:	08 c0       	rjmp	.+16     	; 0x2a14 <vfprintf+0x214>
    2a04:	60 81       	ld	r22, Z
    2a06:	71 81       	ldd	r23, Z+1	; 0x01
    2a08:	07 2e       	mov	r0, r23
    2a0a:	00 0c       	add	r0, r0
    2a0c:	88 0b       	sbc	r24, r24
    2a0e:	99 0b       	sbc	r25, r25
    2a10:	0e 5f       	subi	r16, 0xFE	; 254
    2a12:	1f 4f       	sbci	r17, 0xFF	; 255
    2a14:	f3 2d       	mov	r31, r3
    2a16:	ff 76       	andi	r31, 0x6F	; 111
    2a18:	3f 2e       	mov	r3, r31
    2a1a:	97 ff       	sbrs	r25, 7
    2a1c:	09 c0       	rjmp	.+18     	; 0x2a30 <vfprintf+0x230>
    2a1e:	90 95       	com	r25
    2a20:	80 95       	com	r24
    2a22:	70 95       	com	r23
    2a24:	61 95       	neg	r22
    2a26:	7f 4f       	sbci	r23, 0xFF	; 255
    2a28:	8f 4f       	sbci	r24, 0xFF	; 255
    2a2a:	9f 4f       	sbci	r25, 0xFF	; 255
    2a2c:	f0 68       	ori	r31, 0x80	; 128
    2a2e:	3f 2e       	mov	r3, r31
    2a30:	2a e0       	ldi	r18, 0x0A	; 10
    2a32:	30 e0       	ldi	r19, 0x00	; 0
    2a34:	a3 01       	movw	r20, r6
    2a36:	33 d1       	rcall	.+614    	; 0x2c9e <__ultoa_invert>
    2a38:	88 2e       	mov	r8, r24
    2a3a:	86 18       	sub	r8, r6
    2a3c:	44 c0       	rjmp	.+136    	; 0x2ac6 <vfprintf+0x2c6>
    2a3e:	85 37       	cpi	r24, 0x75	; 117
    2a40:	31 f4       	brne	.+12     	; 0x2a4e <vfprintf+0x24e>
    2a42:	23 2d       	mov	r18, r3
    2a44:	2f 7e       	andi	r18, 0xEF	; 239
    2a46:	b2 2e       	mov	r11, r18
    2a48:	2a e0       	ldi	r18, 0x0A	; 10
    2a4a:	30 e0       	ldi	r19, 0x00	; 0
    2a4c:	25 c0       	rjmp	.+74     	; 0x2a98 <vfprintf+0x298>
    2a4e:	93 2d       	mov	r25, r3
    2a50:	99 7f       	andi	r25, 0xF9	; 249
    2a52:	b9 2e       	mov	r11, r25
    2a54:	8f 36       	cpi	r24, 0x6F	; 111
    2a56:	c1 f0       	breq	.+48     	; 0x2a88 <vfprintf+0x288>
    2a58:	18 f4       	brcc	.+6      	; 0x2a60 <vfprintf+0x260>
    2a5a:	88 35       	cpi	r24, 0x58	; 88
    2a5c:	79 f0       	breq	.+30     	; 0x2a7c <vfprintf+0x27c>
    2a5e:	ae c0       	rjmp	.+348    	; 0x2bbc <vfprintf+0x3bc>
    2a60:	80 37       	cpi	r24, 0x70	; 112
    2a62:	19 f0       	breq	.+6      	; 0x2a6a <vfprintf+0x26a>
    2a64:	88 37       	cpi	r24, 0x78	; 120
    2a66:	21 f0       	breq	.+8      	; 0x2a70 <vfprintf+0x270>
    2a68:	a9 c0       	rjmp	.+338    	; 0x2bbc <vfprintf+0x3bc>
    2a6a:	e9 2f       	mov	r30, r25
    2a6c:	e0 61       	ori	r30, 0x10	; 16
    2a6e:	be 2e       	mov	r11, r30
    2a70:	b4 fe       	sbrs	r11, 4
    2a72:	0d c0       	rjmp	.+26     	; 0x2a8e <vfprintf+0x28e>
    2a74:	fb 2d       	mov	r31, r11
    2a76:	f4 60       	ori	r31, 0x04	; 4
    2a78:	bf 2e       	mov	r11, r31
    2a7a:	09 c0       	rjmp	.+18     	; 0x2a8e <vfprintf+0x28e>
    2a7c:	34 fe       	sbrs	r3, 4
    2a7e:	0a c0       	rjmp	.+20     	; 0x2a94 <vfprintf+0x294>
    2a80:	29 2f       	mov	r18, r25
    2a82:	26 60       	ori	r18, 0x06	; 6
    2a84:	b2 2e       	mov	r11, r18
    2a86:	06 c0       	rjmp	.+12     	; 0x2a94 <vfprintf+0x294>
    2a88:	28 e0       	ldi	r18, 0x08	; 8
    2a8a:	30 e0       	ldi	r19, 0x00	; 0
    2a8c:	05 c0       	rjmp	.+10     	; 0x2a98 <vfprintf+0x298>
    2a8e:	20 e1       	ldi	r18, 0x10	; 16
    2a90:	30 e0       	ldi	r19, 0x00	; 0
    2a92:	02 c0       	rjmp	.+4      	; 0x2a98 <vfprintf+0x298>
    2a94:	20 e1       	ldi	r18, 0x10	; 16
    2a96:	32 e0       	ldi	r19, 0x02	; 2
    2a98:	f8 01       	movw	r30, r16
    2a9a:	b7 fe       	sbrs	r11, 7
    2a9c:	07 c0       	rjmp	.+14     	; 0x2aac <vfprintf+0x2ac>
    2a9e:	60 81       	ld	r22, Z
    2aa0:	71 81       	ldd	r23, Z+1	; 0x01
    2aa2:	82 81       	ldd	r24, Z+2	; 0x02
    2aa4:	93 81       	ldd	r25, Z+3	; 0x03
    2aa6:	0c 5f       	subi	r16, 0xFC	; 252
    2aa8:	1f 4f       	sbci	r17, 0xFF	; 255
    2aaa:	06 c0       	rjmp	.+12     	; 0x2ab8 <vfprintf+0x2b8>
    2aac:	60 81       	ld	r22, Z
    2aae:	71 81       	ldd	r23, Z+1	; 0x01
    2ab0:	80 e0       	ldi	r24, 0x00	; 0
    2ab2:	90 e0       	ldi	r25, 0x00	; 0
    2ab4:	0e 5f       	subi	r16, 0xFE	; 254
    2ab6:	1f 4f       	sbci	r17, 0xFF	; 255
    2ab8:	a3 01       	movw	r20, r6
    2aba:	f1 d0       	rcall	.+482    	; 0x2c9e <__ultoa_invert>
    2abc:	88 2e       	mov	r8, r24
    2abe:	86 18       	sub	r8, r6
    2ac0:	fb 2d       	mov	r31, r11
    2ac2:	ff 77       	andi	r31, 0x7F	; 127
    2ac4:	3f 2e       	mov	r3, r31
    2ac6:	36 fe       	sbrs	r3, 6
    2ac8:	0d c0       	rjmp	.+26     	; 0x2ae4 <vfprintf+0x2e4>
    2aca:	23 2d       	mov	r18, r3
    2acc:	2e 7f       	andi	r18, 0xFE	; 254
    2ace:	a2 2e       	mov	r10, r18
    2ad0:	89 14       	cp	r8, r9
    2ad2:	58 f4       	brcc	.+22     	; 0x2aea <vfprintf+0x2ea>
    2ad4:	34 fe       	sbrs	r3, 4
    2ad6:	0b c0       	rjmp	.+22     	; 0x2aee <vfprintf+0x2ee>
    2ad8:	32 fc       	sbrc	r3, 2
    2ada:	09 c0       	rjmp	.+18     	; 0x2aee <vfprintf+0x2ee>
    2adc:	83 2d       	mov	r24, r3
    2ade:	8e 7e       	andi	r24, 0xEE	; 238
    2ae0:	a8 2e       	mov	r10, r24
    2ae2:	05 c0       	rjmp	.+10     	; 0x2aee <vfprintf+0x2ee>
    2ae4:	b8 2c       	mov	r11, r8
    2ae6:	a3 2c       	mov	r10, r3
    2ae8:	03 c0       	rjmp	.+6      	; 0x2af0 <vfprintf+0x2f0>
    2aea:	b8 2c       	mov	r11, r8
    2aec:	01 c0       	rjmp	.+2      	; 0x2af0 <vfprintf+0x2f0>
    2aee:	b9 2c       	mov	r11, r9
    2af0:	a4 fe       	sbrs	r10, 4
    2af2:	0f c0       	rjmp	.+30     	; 0x2b12 <vfprintf+0x312>
    2af4:	fe 01       	movw	r30, r28
    2af6:	e8 0d       	add	r30, r8
    2af8:	f1 1d       	adc	r31, r1
    2afa:	80 81       	ld	r24, Z
    2afc:	80 33       	cpi	r24, 0x30	; 48
    2afe:	21 f4       	brne	.+8      	; 0x2b08 <vfprintf+0x308>
    2b00:	9a 2d       	mov	r25, r10
    2b02:	99 7e       	andi	r25, 0xE9	; 233
    2b04:	a9 2e       	mov	r10, r25
    2b06:	09 c0       	rjmp	.+18     	; 0x2b1a <vfprintf+0x31a>
    2b08:	a2 fe       	sbrs	r10, 2
    2b0a:	06 c0       	rjmp	.+12     	; 0x2b18 <vfprintf+0x318>
    2b0c:	b3 94       	inc	r11
    2b0e:	b3 94       	inc	r11
    2b10:	04 c0       	rjmp	.+8      	; 0x2b1a <vfprintf+0x31a>
    2b12:	8a 2d       	mov	r24, r10
    2b14:	86 78       	andi	r24, 0x86	; 134
    2b16:	09 f0       	breq	.+2      	; 0x2b1a <vfprintf+0x31a>
    2b18:	b3 94       	inc	r11
    2b1a:	a3 fc       	sbrc	r10, 3
    2b1c:	10 c0       	rjmp	.+32     	; 0x2b3e <vfprintf+0x33e>
    2b1e:	a0 fe       	sbrs	r10, 0
    2b20:	06 c0       	rjmp	.+12     	; 0x2b2e <vfprintf+0x32e>
    2b22:	b2 14       	cp	r11, r2
    2b24:	80 f4       	brcc	.+32     	; 0x2b46 <vfprintf+0x346>
    2b26:	28 0c       	add	r2, r8
    2b28:	92 2c       	mov	r9, r2
    2b2a:	9b 18       	sub	r9, r11
    2b2c:	0d c0       	rjmp	.+26     	; 0x2b48 <vfprintf+0x348>
    2b2e:	b2 14       	cp	r11, r2
    2b30:	58 f4       	brcc	.+22     	; 0x2b48 <vfprintf+0x348>
    2b32:	b6 01       	movw	r22, r12
    2b34:	80 e2       	ldi	r24, 0x20	; 32
    2b36:	90 e0       	ldi	r25, 0x00	; 0
    2b38:	76 d0       	rcall	.+236    	; 0x2c26 <fputc>
    2b3a:	b3 94       	inc	r11
    2b3c:	f8 cf       	rjmp	.-16     	; 0x2b2e <vfprintf+0x32e>
    2b3e:	b2 14       	cp	r11, r2
    2b40:	18 f4       	brcc	.+6      	; 0x2b48 <vfprintf+0x348>
    2b42:	2b 18       	sub	r2, r11
    2b44:	02 c0       	rjmp	.+4      	; 0x2b4a <vfprintf+0x34a>
    2b46:	98 2c       	mov	r9, r8
    2b48:	21 2c       	mov	r2, r1
    2b4a:	a4 fe       	sbrs	r10, 4
    2b4c:	0f c0       	rjmp	.+30     	; 0x2b6c <vfprintf+0x36c>
    2b4e:	b6 01       	movw	r22, r12
    2b50:	80 e3       	ldi	r24, 0x30	; 48
    2b52:	90 e0       	ldi	r25, 0x00	; 0
    2b54:	68 d0       	rcall	.+208    	; 0x2c26 <fputc>
    2b56:	a2 fe       	sbrs	r10, 2
    2b58:	16 c0       	rjmp	.+44     	; 0x2b86 <vfprintf+0x386>
    2b5a:	a1 fc       	sbrc	r10, 1
    2b5c:	03 c0       	rjmp	.+6      	; 0x2b64 <vfprintf+0x364>
    2b5e:	88 e7       	ldi	r24, 0x78	; 120
    2b60:	90 e0       	ldi	r25, 0x00	; 0
    2b62:	02 c0       	rjmp	.+4      	; 0x2b68 <vfprintf+0x368>
    2b64:	88 e5       	ldi	r24, 0x58	; 88
    2b66:	90 e0       	ldi	r25, 0x00	; 0
    2b68:	b6 01       	movw	r22, r12
    2b6a:	0c c0       	rjmp	.+24     	; 0x2b84 <vfprintf+0x384>
    2b6c:	8a 2d       	mov	r24, r10
    2b6e:	86 78       	andi	r24, 0x86	; 134
    2b70:	51 f0       	breq	.+20     	; 0x2b86 <vfprintf+0x386>
    2b72:	a1 fe       	sbrs	r10, 1
    2b74:	02 c0       	rjmp	.+4      	; 0x2b7a <vfprintf+0x37a>
    2b76:	8b e2       	ldi	r24, 0x2B	; 43
    2b78:	01 c0       	rjmp	.+2      	; 0x2b7c <vfprintf+0x37c>
    2b7a:	80 e2       	ldi	r24, 0x20	; 32
    2b7c:	a7 fc       	sbrc	r10, 7
    2b7e:	8d e2       	ldi	r24, 0x2D	; 45
    2b80:	b6 01       	movw	r22, r12
    2b82:	90 e0       	ldi	r25, 0x00	; 0
    2b84:	50 d0       	rcall	.+160    	; 0x2c26 <fputc>
    2b86:	89 14       	cp	r8, r9
    2b88:	30 f4       	brcc	.+12     	; 0x2b96 <vfprintf+0x396>
    2b8a:	b6 01       	movw	r22, r12
    2b8c:	80 e3       	ldi	r24, 0x30	; 48
    2b8e:	90 e0       	ldi	r25, 0x00	; 0
    2b90:	4a d0       	rcall	.+148    	; 0x2c26 <fputc>
    2b92:	9a 94       	dec	r9
    2b94:	f8 cf       	rjmp	.-16     	; 0x2b86 <vfprintf+0x386>
    2b96:	8a 94       	dec	r8
    2b98:	f3 01       	movw	r30, r6
    2b9a:	e8 0d       	add	r30, r8
    2b9c:	f1 1d       	adc	r31, r1
    2b9e:	80 81       	ld	r24, Z
    2ba0:	b6 01       	movw	r22, r12
    2ba2:	90 e0       	ldi	r25, 0x00	; 0
    2ba4:	40 d0       	rcall	.+128    	; 0x2c26 <fputc>
    2ba6:	81 10       	cpse	r8, r1
    2ba8:	f6 cf       	rjmp	.-20     	; 0x2b96 <vfprintf+0x396>
    2baa:	22 20       	and	r2, r2
    2bac:	09 f4       	brne	.+2      	; 0x2bb0 <vfprintf+0x3b0>
    2bae:	4e ce       	rjmp	.-868    	; 0x284c <vfprintf+0x4c>
    2bb0:	b6 01       	movw	r22, r12
    2bb2:	80 e2       	ldi	r24, 0x20	; 32
    2bb4:	90 e0       	ldi	r25, 0x00	; 0
    2bb6:	37 d0       	rcall	.+110    	; 0x2c26 <fputc>
    2bb8:	2a 94       	dec	r2
    2bba:	f7 cf       	rjmp	.-18     	; 0x2baa <vfprintf+0x3aa>
    2bbc:	f6 01       	movw	r30, r12
    2bbe:	86 81       	ldd	r24, Z+6	; 0x06
    2bc0:	97 81       	ldd	r25, Z+7	; 0x07
    2bc2:	02 c0       	rjmp	.+4      	; 0x2bc8 <vfprintf+0x3c8>
    2bc4:	8f ef       	ldi	r24, 0xFF	; 255
    2bc6:	9f ef       	ldi	r25, 0xFF	; 255
    2bc8:	2b 96       	adiw	r28, 0x0b	; 11
    2bca:	0f b6       	in	r0, 0x3f	; 63
    2bcc:	f8 94       	cli
    2bce:	de bf       	out	0x3e, r29	; 62
    2bd0:	0f be       	out	0x3f, r0	; 63
    2bd2:	cd bf       	out	0x3d, r28	; 61
    2bd4:	df 91       	pop	r29
    2bd6:	cf 91       	pop	r28
    2bd8:	1f 91       	pop	r17
    2bda:	0f 91       	pop	r16
    2bdc:	ff 90       	pop	r15
    2bde:	ef 90       	pop	r14
    2be0:	df 90       	pop	r13
    2be2:	cf 90       	pop	r12
    2be4:	bf 90       	pop	r11
    2be6:	af 90       	pop	r10
    2be8:	9f 90       	pop	r9
    2bea:	8f 90       	pop	r8
    2bec:	7f 90       	pop	r7
    2bee:	6f 90       	pop	r6
    2bf0:	5f 90       	pop	r5
    2bf2:	4f 90       	pop	r4
    2bf4:	3f 90       	pop	r3
    2bf6:	2f 90       	pop	r2
    2bf8:	08 95       	ret

00002bfa <strnlen_P>:
    2bfa:	fc 01       	movw	r30, r24
    2bfc:	05 90       	lpm	r0, Z+
    2bfe:	61 50       	subi	r22, 0x01	; 1
    2c00:	70 40       	sbci	r23, 0x00	; 0
    2c02:	01 10       	cpse	r0, r1
    2c04:	d8 f7       	brcc	.-10     	; 0x2bfc <strnlen_P+0x2>
    2c06:	80 95       	com	r24
    2c08:	90 95       	com	r25
    2c0a:	8e 0f       	add	r24, r30
    2c0c:	9f 1f       	adc	r25, r31
    2c0e:	08 95       	ret

00002c10 <strnlen>:
    2c10:	fc 01       	movw	r30, r24
    2c12:	61 50       	subi	r22, 0x01	; 1
    2c14:	70 40       	sbci	r23, 0x00	; 0
    2c16:	01 90       	ld	r0, Z+
    2c18:	01 10       	cpse	r0, r1
    2c1a:	d8 f7       	brcc	.-10     	; 0x2c12 <strnlen+0x2>
    2c1c:	80 95       	com	r24
    2c1e:	90 95       	com	r25
    2c20:	8e 0f       	add	r24, r30
    2c22:	9f 1f       	adc	r25, r31
    2c24:	08 95       	ret

00002c26 <fputc>:
    2c26:	0f 93       	push	r16
    2c28:	1f 93       	push	r17
    2c2a:	cf 93       	push	r28
    2c2c:	df 93       	push	r29
    2c2e:	fb 01       	movw	r30, r22
    2c30:	23 81       	ldd	r18, Z+3	; 0x03
    2c32:	21 fd       	sbrc	r18, 1
    2c34:	03 c0       	rjmp	.+6      	; 0x2c3c <fputc+0x16>
    2c36:	8f ef       	ldi	r24, 0xFF	; 255
    2c38:	9f ef       	ldi	r25, 0xFF	; 255
    2c3a:	2c c0       	rjmp	.+88     	; 0x2c94 <fputc+0x6e>
    2c3c:	22 ff       	sbrs	r18, 2
    2c3e:	16 c0       	rjmp	.+44     	; 0x2c6c <fputc+0x46>
    2c40:	46 81       	ldd	r20, Z+6	; 0x06
    2c42:	57 81       	ldd	r21, Z+7	; 0x07
    2c44:	24 81       	ldd	r18, Z+4	; 0x04
    2c46:	35 81       	ldd	r19, Z+5	; 0x05
    2c48:	42 17       	cp	r20, r18
    2c4a:	53 07       	cpc	r21, r19
    2c4c:	44 f4       	brge	.+16     	; 0x2c5e <fputc+0x38>
    2c4e:	a0 81       	ld	r26, Z
    2c50:	b1 81       	ldd	r27, Z+1	; 0x01
    2c52:	9d 01       	movw	r18, r26
    2c54:	2f 5f       	subi	r18, 0xFF	; 255
    2c56:	3f 4f       	sbci	r19, 0xFF	; 255
    2c58:	31 83       	std	Z+1, r19	; 0x01
    2c5a:	20 83       	st	Z, r18
    2c5c:	8c 93       	st	X, r24
    2c5e:	26 81       	ldd	r18, Z+6	; 0x06
    2c60:	37 81       	ldd	r19, Z+7	; 0x07
    2c62:	2f 5f       	subi	r18, 0xFF	; 255
    2c64:	3f 4f       	sbci	r19, 0xFF	; 255
    2c66:	37 83       	std	Z+7, r19	; 0x07
    2c68:	26 83       	std	Z+6, r18	; 0x06
    2c6a:	14 c0       	rjmp	.+40     	; 0x2c94 <fputc+0x6e>
    2c6c:	8b 01       	movw	r16, r22
    2c6e:	ec 01       	movw	r28, r24
    2c70:	fb 01       	movw	r30, r22
    2c72:	00 84       	ldd	r0, Z+8	; 0x08
    2c74:	f1 85       	ldd	r31, Z+9	; 0x09
    2c76:	e0 2d       	mov	r30, r0
    2c78:	09 95       	icall
    2c7a:	89 2b       	or	r24, r25
    2c7c:	e1 f6       	brne	.-72     	; 0x2c36 <fputc+0x10>
    2c7e:	d8 01       	movw	r26, r16
    2c80:	16 96       	adiw	r26, 0x06	; 6
    2c82:	8d 91       	ld	r24, X+
    2c84:	9c 91       	ld	r25, X
    2c86:	17 97       	sbiw	r26, 0x07	; 7
    2c88:	01 96       	adiw	r24, 0x01	; 1
    2c8a:	17 96       	adiw	r26, 0x07	; 7
    2c8c:	9c 93       	st	X, r25
    2c8e:	8e 93       	st	-X, r24
    2c90:	16 97       	sbiw	r26, 0x06	; 6
    2c92:	ce 01       	movw	r24, r28
    2c94:	df 91       	pop	r29
    2c96:	cf 91       	pop	r28
    2c98:	1f 91       	pop	r17
    2c9a:	0f 91       	pop	r16
    2c9c:	08 95       	ret

00002c9e <__ultoa_invert>:
    2c9e:	fa 01       	movw	r30, r20
    2ca0:	aa 27       	eor	r26, r26
    2ca2:	28 30       	cpi	r18, 0x08	; 8
    2ca4:	51 f1       	breq	.+84     	; 0x2cfa <__ultoa_invert+0x5c>
    2ca6:	20 31       	cpi	r18, 0x10	; 16
    2ca8:	81 f1       	breq	.+96     	; 0x2d0a <__ultoa_invert+0x6c>
    2caa:	e8 94       	clt
    2cac:	6f 93       	push	r22
    2cae:	6e 7f       	andi	r22, 0xFE	; 254
    2cb0:	6e 5f       	subi	r22, 0xFE	; 254
    2cb2:	7f 4f       	sbci	r23, 0xFF	; 255
    2cb4:	8f 4f       	sbci	r24, 0xFF	; 255
    2cb6:	9f 4f       	sbci	r25, 0xFF	; 255
    2cb8:	af 4f       	sbci	r26, 0xFF	; 255
    2cba:	b1 e0       	ldi	r27, 0x01	; 1
    2cbc:	3e d0       	rcall	.+124    	; 0x2d3a <__ultoa_invert+0x9c>
    2cbe:	b4 e0       	ldi	r27, 0x04	; 4
    2cc0:	3c d0       	rcall	.+120    	; 0x2d3a <__ultoa_invert+0x9c>
    2cc2:	67 0f       	add	r22, r23
    2cc4:	78 1f       	adc	r23, r24
    2cc6:	89 1f       	adc	r24, r25
    2cc8:	9a 1f       	adc	r25, r26
    2cca:	a1 1d       	adc	r26, r1
    2ccc:	68 0f       	add	r22, r24
    2cce:	79 1f       	adc	r23, r25
    2cd0:	8a 1f       	adc	r24, r26
    2cd2:	91 1d       	adc	r25, r1
    2cd4:	a1 1d       	adc	r26, r1
    2cd6:	6a 0f       	add	r22, r26
    2cd8:	71 1d       	adc	r23, r1
    2cda:	81 1d       	adc	r24, r1
    2cdc:	91 1d       	adc	r25, r1
    2cde:	a1 1d       	adc	r26, r1
    2ce0:	20 d0       	rcall	.+64     	; 0x2d22 <__ultoa_invert+0x84>
    2ce2:	09 f4       	brne	.+2      	; 0x2ce6 <__ultoa_invert+0x48>
    2ce4:	68 94       	set
    2ce6:	3f 91       	pop	r19
    2ce8:	2a e0       	ldi	r18, 0x0A	; 10
    2cea:	26 9f       	mul	r18, r22
    2cec:	11 24       	eor	r1, r1
    2cee:	30 19       	sub	r19, r0
    2cf0:	30 5d       	subi	r19, 0xD0	; 208
    2cf2:	31 93       	st	Z+, r19
    2cf4:	de f6       	brtc	.-74     	; 0x2cac <__ultoa_invert+0xe>
    2cf6:	cf 01       	movw	r24, r30
    2cf8:	08 95       	ret
    2cfa:	46 2f       	mov	r20, r22
    2cfc:	47 70       	andi	r20, 0x07	; 7
    2cfe:	40 5d       	subi	r20, 0xD0	; 208
    2d00:	41 93       	st	Z+, r20
    2d02:	b3 e0       	ldi	r27, 0x03	; 3
    2d04:	0f d0       	rcall	.+30     	; 0x2d24 <__ultoa_invert+0x86>
    2d06:	c9 f7       	brne	.-14     	; 0x2cfa <__ultoa_invert+0x5c>
    2d08:	f6 cf       	rjmp	.-20     	; 0x2cf6 <__ultoa_invert+0x58>
    2d0a:	46 2f       	mov	r20, r22
    2d0c:	4f 70       	andi	r20, 0x0F	; 15
    2d0e:	40 5d       	subi	r20, 0xD0	; 208
    2d10:	4a 33       	cpi	r20, 0x3A	; 58
    2d12:	18 f0       	brcs	.+6      	; 0x2d1a <__ultoa_invert+0x7c>
    2d14:	49 5d       	subi	r20, 0xD9	; 217
    2d16:	31 fd       	sbrc	r19, 1
    2d18:	40 52       	subi	r20, 0x20	; 32
    2d1a:	41 93       	st	Z+, r20
    2d1c:	02 d0       	rcall	.+4      	; 0x2d22 <__ultoa_invert+0x84>
    2d1e:	a9 f7       	brne	.-22     	; 0x2d0a <__ultoa_invert+0x6c>
    2d20:	ea cf       	rjmp	.-44     	; 0x2cf6 <__ultoa_invert+0x58>
    2d22:	b4 e0       	ldi	r27, 0x04	; 4
    2d24:	a6 95       	lsr	r26
    2d26:	97 95       	ror	r25
    2d28:	87 95       	ror	r24
    2d2a:	77 95       	ror	r23
    2d2c:	67 95       	ror	r22
    2d2e:	ba 95       	dec	r27
    2d30:	c9 f7       	brne	.-14     	; 0x2d24 <__ultoa_invert+0x86>
    2d32:	00 97       	sbiw	r24, 0x00	; 0
    2d34:	61 05       	cpc	r22, r1
    2d36:	71 05       	cpc	r23, r1
    2d38:	08 95       	ret
    2d3a:	9b 01       	movw	r18, r22
    2d3c:	ac 01       	movw	r20, r24
    2d3e:	0a 2e       	mov	r0, r26
    2d40:	06 94       	lsr	r0
    2d42:	57 95       	ror	r21
    2d44:	47 95       	ror	r20
    2d46:	37 95       	ror	r19
    2d48:	27 95       	ror	r18
    2d4a:	ba 95       	dec	r27
    2d4c:	c9 f7       	brne	.-14     	; 0x2d40 <__ultoa_invert+0xa2>
    2d4e:	62 0f       	add	r22, r18
    2d50:	73 1f       	adc	r23, r19
    2d52:	84 1f       	adc	r24, r20
    2d54:	95 1f       	adc	r25, r21
    2d56:	a0 1d       	adc	r26, r0
    2d58:	08 95       	ret

00002d5a <_exit>:
    2d5a:	f8 94       	cli

00002d5c <__stop_program>:
    2d5c:	ff cf       	rjmp	.-2      	; 0x2d5c <__stop_program>
