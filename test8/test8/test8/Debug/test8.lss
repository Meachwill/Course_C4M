
test8.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000064  00800100  0000336e  00003402  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000336e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000163  00800164  00800164  00003466  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00003466  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000034c4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  00003500  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000615  00000000  00000000  00003608  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000034f3  00000000  00000000  00003c1d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001250  00000000  00000000  00007110  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00002919  00000000  00000000  00008360  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000620  00000000  00000000  0000ac7c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000c26  00000000  00000000  0000b29c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000030c3  00000000  00000000  0000bec2  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000ef85  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	93 c0       	rjmp	.+294    	; 0x128 <__ctors_end>
       2:	00 00       	nop
       4:	b0 c0       	rjmp	.+352    	; 0x166 <__bad_interrupt>
       6:	00 00       	nop
       8:	ae c0       	rjmp	.+348    	; 0x166 <__bad_interrupt>
       a:	00 00       	nop
       c:	ac c0       	rjmp	.+344    	; 0x166 <__bad_interrupt>
       e:	00 00       	nop
      10:	aa c0       	rjmp	.+340    	; 0x166 <__bad_interrupt>
      12:	00 00       	nop
      14:	a8 c0       	rjmp	.+336    	; 0x166 <__bad_interrupt>
      16:	00 00       	nop
      18:	0c 94 d4 15 	jmp	0x2ba8	; 0x2ba8 <__vector_6>
      1c:	a4 c0       	rjmp	.+328    	; 0x166 <__bad_interrupt>
      1e:	00 00       	nop
      20:	a2 c0       	rjmp	.+324    	; 0x166 <__bad_interrupt>
      22:	00 00       	nop
      24:	a0 c0       	rjmp	.+320    	; 0x166 <__bad_interrupt>
      26:	00 00       	nop
      28:	9e c0       	rjmp	.+316    	; 0x166 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	9c c0       	rjmp	.+312    	; 0x166 <__bad_interrupt>
      2e:	00 00       	nop
      30:	c1 c7       	rjmp	.+3970   	; 0xfb4 <__vector_12>
      32:	00 00       	nop
      34:	98 c0       	rjmp	.+304    	; 0x166 <__bad_interrupt>
      36:	00 00       	nop
      38:	96 c0       	rjmp	.+300    	; 0x166 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	94 c0       	rjmp	.+296    	; 0x166 <__bad_interrupt>
      3e:	00 00       	nop
      40:	92 c0       	rjmp	.+292    	; 0x166 <__bad_interrupt>
      42:	00 00       	nop
      44:	90 c0       	rjmp	.+288    	; 0x166 <__bad_interrupt>
      46:	00 00       	nop
      48:	8e c0       	rjmp	.+284    	; 0x166 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	8c c0       	rjmp	.+280    	; 0x166 <__bad_interrupt>
      4e:	00 00       	nop
      50:	8a c0       	rjmp	.+276    	; 0x166 <__bad_interrupt>
      52:	00 00       	nop
      54:	88 c0       	rjmp	.+272    	; 0x166 <__bad_interrupt>
      56:	00 00       	nop
      58:	86 c0       	rjmp	.+268    	; 0x166 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	84 c0       	rjmp	.+264    	; 0x166 <__bad_interrupt>
      5e:	00 00       	nop
      60:	82 c0       	rjmp	.+260    	; 0x166 <__bad_interrupt>
      62:	00 00       	nop
      64:	80 c0       	rjmp	.+256    	; 0x166 <__bad_interrupt>
      66:	00 00       	nop
      68:	7e c0       	rjmp	.+252    	; 0x166 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	7c c0       	rjmp	.+248    	; 0x166 <__bad_interrupt>
      6e:	00 00       	nop
      70:	7a c0       	rjmp	.+244    	; 0x166 <__bad_interrupt>
      72:	00 00       	nop
      74:	78 c0       	rjmp	.+240    	; 0x166 <__bad_interrupt>
      76:	00 00       	nop
      78:	e3 c6       	rjmp	.+3526   	; 0xe40 <__vector_30>
      7a:	00 00       	nop
      7c:	74 c0       	rjmp	.+232    	; 0x166 <__bad_interrupt>
      7e:	00 00       	nop
      80:	94 c6       	rjmp	.+3368   	; 0xdaa <__vector_32>
      82:	00 00       	nop
      84:	70 c0       	rjmp	.+224    	; 0x166 <__bad_interrupt>
      86:	00 00       	nop
      88:	6e c0       	rjmp	.+220    	; 0x166 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	d0 12       	cpse	r13, r16
      8e:	d3 12       	cpse	r13, r19
      90:	d6 12       	cpse	r13, r22
      92:	d9 12       	cpse	r13, r25
      94:	dc 12       	cpse	r13, r28
      96:	df 12       	cpse	r13, r31
      98:	e2 12       	cpse	r14, r18
      9a:	e5 12       	cpse	r14, r21
      9c:	e8 12       	cpse	r14, r24
      9e:	fd 12       	cpse	r15, r29
      a0:	fd 12       	cpse	r15, r29
      a2:	fd 12       	cpse	r15, r29
      a4:	fd 12       	cpse	r15, r29
      a6:	fd 12       	cpse	r15, r29
      a8:	fd 12       	cpse	r15, r29
      aa:	fd 12       	cpse	r15, r29
      ac:	eb 12       	cpse	r14, r27
      ae:	ee 12       	cpse	r14, r30
      b0:	f1 12       	cpse	r15, r17
      b2:	f4 12       	cpse	r15, r20
      b4:	f7 12       	cpse	r15, r23
      b6:	fa 12       	cpse	r15, r26

000000b8 <__trampolines_end>:
      b8:	1e ff       	.word	0xff1e	; ????
      ba:	ff ff       	.word	0xffff	; ????
      bc:	ff ff       	.word	0xffff	; ????
      be:	ff ff       	.word	0xffff	; ????
      c0:	ff ff       	.word	0xffff	; ????
      c2:	ff ff       	.word	0xffff	; ????
      c4:	ff ff       	.word	0xffff	; ????
      c6:	ff ff       	.word	0xffff	; ????
      c8:	ff ff       	.word	0xffff	; ????
      ca:	ff ff       	.word	0xffff	; ????
      cc:	ff ff       	.word	0xffff	; ????
      ce:	ff ff       	.word	0xffff	; ????
      d0:	ff ff       	.word	0xffff	; ????
      d2:	ff ff       	.word	0xffff	; ????
      d4:	ff ff       	.word	0xffff	; ????
      d6:	ff ff       	.word	0xffff	; ????
      d8:	ff ff       	.word	0xffff	; ????
      da:	ff ff       	.word	0xffff	; ????
      dc:	ff ff       	.word	0xffff	; ????
      de:	ff ff       	.word	0xffff	; ????
      e0:	ff ff       	.word	0xffff	; ????
      e2:	ff ff       	.word	0xffff	; ????
      e4:	ff 1b       	sub	r31, r31
      e6:	ff ff       	.word	0xffff	; ????
      e8:	00 01       	movw	r0, r0
      ea:	02 03       	mulsu	r16, r18
      ec:	04 05       	cpc	r16, r4
      ee:	06 07       	cpc	r16, r22
      f0:	08 09       	sbc	r16, r8
      f2:	ff ff       	.word	0xffff	; ????
      f4:	ff ff       	.word	0xffff	; ????
      f6:	ff ff       	.word	0xffff	; ????
      f8:	ff 0a       	sbc	r15, r31
      fa:	0b 0c       	add	r0, r11
      fc:	0d 0e       	add	r0, r29
      fe:	0f 10       	cpse	r0, r15
     100:	11 12       	cpse	r1, r17
     102:	13 ff       	sbrs	r17, 3
     104:	14 ff       	sbrs	r17, 4
     106:	15 16       	cp	r1, r21
     108:	17 ff       	sbrs	r17, 7
     10a:	ff ff       	.word	0xffff	; ????
     10c:	ff 18       	sub	r15, r15
     10e:	ff ff       	.word	0xffff	; ????
     110:	ff 19       	sub	r31, r15
     112:	ff ff       	.word	0xffff	; ????
     114:	ff ff       	.word	0xffff	; ????
     116:	ff 1a       	sub	r15, r31

00000118 <flash_KB00_ASCII_table>:
     118:	46 45 44 43 42 33 36 39 41 32 35 38 30 31 34 37     FEDCB369A2580147

00000128 <__ctors_end>:
     128:	11 24       	eor	r1, r1
     12a:	1f be       	out	0x3f, r1	; 63
     12c:	cf ef       	ldi	r28, 0xFF	; 255
     12e:	d0 e1       	ldi	r29, 0x10	; 16
     130:	de bf       	out	0x3e, r29	; 62
     132:	cd bf       	out	0x3d, r28	; 61

00000134 <__do_copy_data>:
     134:	11 e0       	ldi	r17, 0x01	; 1
     136:	a0 e0       	ldi	r26, 0x00	; 0
     138:	b1 e0       	ldi	r27, 0x01	; 1
     13a:	ee e6       	ldi	r30, 0x6E	; 110
     13c:	f3 e3       	ldi	r31, 0x33	; 51
     13e:	00 e0       	ldi	r16, 0x00	; 0
     140:	0b bf       	out	0x3b, r16	; 59
     142:	02 c0       	rjmp	.+4      	; 0x148 <__do_copy_data+0x14>
     144:	07 90       	elpm	r0, Z+
     146:	0d 92       	st	X+, r0
     148:	a4 36       	cpi	r26, 0x64	; 100
     14a:	b1 07       	cpc	r27, r17
     14c:	d9 f7       	brne	.-10     	; 0x144 <__do_copy_data+0x10>

0000014e <__do_clear_bss>:
     14e:	22 e0       	ldi	r18, 0x02	; 2
     150:	a4 e6       	ldi	r26, 0x64	; 100
     152:	b1 e0       	ldi	r27, 0x01	; 1
     154:	01 c0       	rjmp	.+2      	; 0x158 <.do_clear_bss_start>

00000156 <.do_clear_bss_loop>:
     156:	1d 92       	st	X+, r1

00000158 <.do_clear_bss_start>:
     158:	a7 3c       	cpi	r26, 0xC7	; 199
     15a:	b2 07       	cpc	r27, r18
     15c:	e1 f7       	brne	.-8      	; 0x156 <.do_clear_bss_loop>
     15e:	0e 94 80 12 	call	0x2500	; 0x2500 <main>
     162:	0c 94 b5 19 	jmp	0x336a	; 0x336a <_exit>

00000166 <__bad_interrupt>:
     166:	4c cf       	rjmp	.-360    	; 0x0 <__vectors>

00000168 <stdio_putchar>:
     168:	1f 93       	push	r17
     16a:	18 2f       	mov	r17, r24
     16c:	8a 30       	cpi	r24, 0x0A	; 10
     16e:	11 f4       	brne	.+4      	; 0x174 <stdio_putchar+0xc>
     170:	8d e0       	ldi	r24, 0x0D	; 13
     172:	fa df       	rcall	.-12     	; 0x168 <stdio_putchar>
     174:	5d 9b       	sbis	0x0b, 5	; 11
     176:	fe cf       	rjmp	.-4      	; 0x174 <stdio_putchar+0xc>
     178:	1c b9       	out	0x0c, r17	; 12
     17a:	80 e0       	ldi	r24, 0x00	; 0
     17c:	90 e0       	ldi	r25, 0x00	; 0
     17e:	1f 91       	pop	r17
     180:	08 95       	ret

00000182 <stdio_getchar>:
     182:	1f 93       	push	r17
     184:	bc 01       	movw	r22, r24
     186:	5f 9b       	sbis	0x0b, 7	; 11
     188:	fe cf       	rjmp	.-4      	; 0x186 <stdio_getchar+0x4>
     18a:	1c b1       	in	r17, 0x0c	; 12
     18c:	81 2f       	mov	r24, r17
     18e:	ec df       	rcall	.-40     	; 0x168 <stdio_putchar>
     190:	81 2f       	mov	r24, r17
     192:	90 e0       	ldi	r25, 0x00	; 0
     194:	1f 91       	pop	r17
     196:	08 95       	ret

00000198 <DIO_fpt>:
     198:	38 2f       	mov	r19, r24
     19a:	84 30       	cpi	r24, 0x04	; 4
     19c:	10 f0       	brcs	.+4      	; 0x1a2 <DIO_fpt+0xa>
     19e:	81 e0       	ldi	r24, 0x01	; 1
     1a0:	08 95       	ret
     1a2:	48 30       	cpi	r20, 0x08	; 8
     1a4:	10 f0       	brcs	.+4      	; 0x1aa <DIO_fpt+0x12>
     1a6:	82 e0       	ldi	r24, 0x02	; 2
     1a8:	08 95       	ret
     1aa:	82 2f       	mov	r24, r18
     1ac:	90 e0       	ldi	r25, 0x00	; 0
     1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <DIO_fpt+0x1c>
     1b0:	88 0f       	add	r24, r24
     1b2:	99 1f       	adc	r25, r25
     1b4:	4a 95       	dec	r20
     1b6:	e2 f7       	brpl	.-8      	; 0x1b0 <DIO_fpt+0x18>
     1b8:	28 2f       	mov	r18, r24
     1ba:	31 30       	cpi	r19, 0x01	; 1
     1bc:	89 f0       	breq	.+34     	; 0x1e0 <DIO_fpt+0x48>
     1be:	31 30       	cpi	r19, 0x01	; 1
     1c0:	28 f0       	brcs	.+10     	; 0x1cc <DIO_fpt+0x34>
     1c2:	32 30       	cpi	r19, 0x02	; 2
     1c4:	b9 f0       	breq	.+46     	; 0x1f4 <DIO_fpt+0x5c>
     1c6:	33 30       	cpi	r19, 0x03	; 3
     1c8:	f1 f4       	brne	.+60     	; 0x206 <DIO_fpt+0x6e>
     1ca:	1f c0       	rjmp	.+62     	; 0x20a <DIO_fpt+0x72>
     1cc:	8a b3       	in	r24, 0x1a	; 26
     1ce:	86 2b       	or	r24, r22
     1d0:	8a bb       	out	0x1a, r24	; 26
     1d2:	8b b3       	in	r24, 0x1b	; 27
     1d4:	26 23       	and	r18, r22
     1d6:	60 95       	com	r22
     1d8:	86 23       	and	r24, r22
     1da:	28 2b       	or	r18, r24
     1dc:	2b bb       	out	0x1b, r18	; 27
     1de:	13 c0       	rjmp	.+38     	; 0x206 <DIO_fpt+0x6e>
     1e0:	87 b3       	in	r24, 0x17	; 23
     1e2:	86 2b       	or	r24, r22
     1e4:	87 bb       	out	0x17, r24	; 23
     1e6:	88 b3       	in	r24, 0x18	; 24
     1e8:	26 23       	and	r18, r22
     1ea:	60 95       	com	r22
     1ec:	86 23       	and	r24, r22
     1ee:	28 2b       	or	r18, r24
     1f0:	28 bb       	out	0x18, r18	; 24
     1f2:	09 c0       	rjmp	.+18     	; 0x206 <DIO_fpt+0x6e>
     1f4:	84 b3       	in	r24, 0x14	; 20
     1f6:	86 2b       	or	r24, r22
     1f8:	84 bb       	out	0x14, r24	; 20
     1fa:	85 b3       	in	r24, 0x15	; 21
     1fc:	26 23       	and	r18, r22
     1fe:	60 95       	com	r22
     200:	86 23       	and	r24, r22
     202:	28 2b       	or	r18, r24
     204:	25 bb       	out	0x15, r18	; 21
     206:	80 e0       	ldi	r24, 0x00	; 0
     208:	08 95       	ret
     20a:	82 b1       	in	r24, 0x02	; 2
     20c:	86 2b       	or	r24, r22
     20e:	82 b9       	out	0x02, r24	; 2
     210:	83 b1       	in	r24, 0x03	; 3
     212:	26 23       	and	r18, r22
     214:	60 95       	com	r22
     216:	86 23       	and	r24, r22
     218:	28 2b       	or	r18, r24
     21a:	23 b9       	out	0x03, r18	; 3
     21c:	80 e0       	ldi	r24, 0x00	; 0
     21e:	08 95       	ret

00000220 <DIO_fgt>:
     220:	f9 01       	movw	r30, r18
     222:	84 30       	cpi	r24, 0x04	; 4
     224:	10 f0       	brcs	.+4      	; 0x22a <DIO_fgt+0xa>
     226:	81 e0       	ldi	r24, 0x01	; 1
     228:	08 95       	ret
     22a:	48 30       	cpi	r20, 0x08	; 8
     22c:	10 f0       	brcs	.+4      	; 0x232 <DIO_fgt+0x12>
     22e:	82 e0       	ldi	r24, 0x02	; 2
     230:	08 95       	ret
     232:	81 30       	cpi	r24, 0x01	; 1
     234:	b9 f0       	breq	.+46     	; 0x264 <DIO_fgt+0x44>
     236:	81 30       	cpi	r24, 0x01	; 1
     238:	28 f0       	brcs	.+10     	; 0x244 <DIO_fgt+0x24>
     23a:	82 30       	cpi	r24, 0x02	; 2
     23c:	19 f1       	breq	.+70     	; 0x284 <DIO_fgt+0x64>
     23e:	83 30       	cpi	r24, 0x03	; 3
     240:	c1 f5       	brne	.+112    	; 0x2b2 <DIO_fgt+0x92>
     242:	39 c0       	rjmp	.+114    	; 0x2b6 <DIO_fgt+0x96>
     244:	8a b3       	in	r24, 0x1a	; 26
     246:	88 23       	and	r24, r24
     248:	29 f0       	breq	.+10     	; 0x254 <DIO_fgt+0x34>
     24a:	9a b3       	in	r25, 0x1a	; 26
     24c:	86 2f       	mov	r24, r22
     24e:	80 95       	com	r24
     250:	89 23       	and	r24, r25
     252:	05 c0       	rjmp	.+10     	; 0x25e <DIO_fgt+0x3e>
     254:	8a b3       	in	r24, 0x1a	; 26
     256:	88 23       	and	r24, r24
     258:	19 f4       	brne	.+6      	; 0x260 <DIO_fgt+0x40>
     25a:	86 2f       	mov	r24, r22
     25c:	80 95       	com	r24
     25e:	8a bb       	out	0x1a, r24	; 26
     260:	89 b3       	in	r24, 0x19	; 25
     262:	1f c0       	rjmp	.+62     	; 0x2a2 <DIO_fgt+0x82>
     264:	87 b3       	in	r24, 0x17	; 23
     266:	88 23       	and	r24, r24
     268:	29 f0       	breq	.+10     	; 0x274 <DIO_fgt+0x54>
     26a:	97 b3       	in	r25, 0x17	; 23
     26c:	86 2f       	mov	r24, r22
     26e:	80 95       	com	r24
     270:	89 23       	and	r24, r25
     272:	05 c0       	rjmp	.+10     	; 0x27e <DIO_fgt+0x5e>
     274:	87 b3       	in	r24, 0x17	; 23
     276:	88 23       	and	r24, r24
     278:	19 f4       	brne	.+6      	; 0x280 <DIO_fgt+0x60>
     27a:	86 2f       	mov	r24, r22
     27c:	80 95       	com	r24
     27e:	87 bb       	out	0x17, r24	; 23
     280:	86 b3       	in	r24, 0x16	; 22
     282:	0f c0       	rjmp	.+30     	; 0x2a2 <DIO_fgt+0x82>
     284:	84 b3       	in	r24, 0x14	; 20
     286:	88 23       	and	r24, r24
     288:	29 f0       	breq	.+10     	; 0x294 <DIO_fgt+0x74>
     28a:	94 b3       	in	r25, 0x14	; 20
     28c:	86 2f       	mov	r24, r22
     28e:	80 95       	com	r24
     290:	89 23       	and	r24, r25
     292:	05 c0       	rjmp	.+10     	; 0x29e <DIO_fgt+0x7e>
     294:	84 b3       	in	r24, 0x14	; 20
     296:	88 23       	and	r24, r24
     298:	19 f4       	brne	.+6      	; 0x2a0 <DIO_fgt+0x80>
     29a:	86 2f       	mov	r24, r22
     29c:	80 95       	com	r24
     29e:	84 bb       	out	0x14, r24	; 20
     2a0:	83 b3       	in	r24, 0x13	; 19
     2a2:	86 23       	and	r24, r22
     2a4:	90 e0       	ldi	r25, 0x00	; 0
     2a6:	02 c0       	rjmp	.+4      	; 0x2ac <DIO_fgt+0x8c>
     2a8:	95 95       	asr	r25
     2aa:	87 95       	ror	r24
     2ac:	4a 95       	dec	r20
     2ae:	e2 f7       	brpl	.-8      	; 0x2a8 <DIO_fgt+0x88>
     2b0:	80 83       	st	Z, r24
     2b2:	80 e0       	ldi	r24, 0x00	; 0
     2b4:	08 95       	ret
     2b6:	82 b1       	in	r24, 0x02	; 2
     2b8:	88 23       	and	r24, r24
     2ba:	29 f0       	breq	.+10     	; 0x2c6 <DIO_fgt+0xa6>
     2bc:	92 b1       	in	r25, 0x02	; 2
     2be:	86 2f       	mov	r24, r22
     2c0:	80 95       	com	r24
     2c2:	89 23       	and	r24, r25
     2c4:	05 c0       	rjmp	.+10     	; 0x2d0 <DIO_fgt+0xb0>
     2c6:	82 b1       	in	r24, 0x02	; 2
     2c8:	88 23       	and	r24, r24
     2ca:	19 f4       	brne	.+6      	; 0x2d2 <DIO_fgt+0xb2>
     2cc:	86 2f       	mov	r24, r22
     2ce:	80 95       	com	r24
     2d0:	82 b9       	out	0x02, r24	; 2
     2d2:	81 b1       	in	r24, 0x01	; 1
     2d4:	86 23       	and	r24, r22
     2d6:	90 e0       	ldi	r25, 0x00	; 0
     2d8:	02 c0       	rjmp	.+4      	; 0x2de <DIO_fgt+0xbe>
     2da:	95 95       	asr	r25
     2dc:	87 95       	ror	r24
     2de:	4a 95       	dec	r20
     2e0:	e2 f7       	brpl	.-8      	; 0x2da <DIO_fgt+0xba>
     2e2:	80 83       	st	Z, r24
     2e4:	80 e0       	ldi	r24, 0x00	; 0
     2e6:	08 95       	ret

000002e8 <HMI_Transceiver_get>:
     2e8:	df 92       	push	r13
     2ea:	ef 92       	push	r14
     2ec:	ff 92       	push	r15
     2ee:	0f 93       	push	r16
     2f0:	1f 93       	push	r17
     2f2:	cf 93       	push	r28
     2f4:	df 93       	push	r29
     2f6:	08 2f       	mov	r16, r24
     2f8:	d6 2e       	mov	r13, r22
     2fa:	e7 2e       	mov	r14, r23
     2fc:	81 32       	cpi	r24, 0x21	; 33
     2fe:	10 f0       	brcs	.+4      	; 0x304 <HMI_Transceiver_get+0x1c>
     300:	81 e0       	ldi	r24, 0x01	; 1
     302:	2a c0       	rjmp	.+84     	; 0x358 <HMI_Transceiver_get+0x70>
     304:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <PC_getchar>
     308:	8b 3a       	cpi	r24, 0xAB	; 171
     30a:	29 f5       	brne	.+74     	; 0x356 <HMI_Transceiver_get+0x6e>
     30c:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <PC_getchar>
     310:	8b 3a       	cpi	r24, 0xAB	; 171
     312:	09 f5       	brne	.+66     	; 0x356 <HMI_Transceiver_get+0x6e>
     314:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <PC_getchar>
     318:	8b 3a       	cpi	r24, 0xAB	; 171
     31a:	e9 f4       	brne	.+58     	; 0x356 <HMI_Transceiver_get+0x6e>
     31c:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <PC_getchar>
     320:	f8 2e       	mov	r15, r24
     322:	18 2f       	mov	r17, r24
     324:	8d 2d       	mov	r24, r13
     326:	9e 2d       	mov	r25, r14
     328:	9c 01       	movw	r18, r24
     32a:	e9 01       	movw	r28, r18
     32c:	04 c0       	rjmp	.+8      	; 0x336 <HMI_Transceiver_get+0x4e>
     32e:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <PC_getchar>
     332:	89 93       	st	Y+, r24
     334:	18 0f       	add	r17, r24
     336:	9e 01       	movw	r18, r28
     338:	2d 19       	sub	r18, r13
     33a:	20 17       	cp	r18, r16
     33c:	c0 f3       	brcs	.-16     	; 0x32e <HMI_Transceiver_get+0x46>
     33e:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <PC_getchar>
     342:	f0 16       	cp	r15, r16
     344:	11 f0       	breq	.+4      	; 0x34a <HMI_Transceiver_get+0x62>
     346:	83 e0       	ldi	r24, 0x03	; 3
     348:	07 c0       	rjmp	.+14     	; 0x358 <HMI_Transceiver_get+0x70>
     34a:	81 17       	cp	r24, r17
     34c:	11 f4       	brne	.+4      	; 0x352 <HMI_Transceiver_get+0x6a>
     34e:	80 e0       	ldi	r24, 0x00	; 0
     350:	03 c0       	rjmp	.+6      	; 0x358 <HMI_Transceiver_get+0x70>
     352:	84 e0       	ldi	r24, 0x04	; 4
     354:	01 c0       	rjmp	.+2      	; 0x358 <HMI_Transceiver_get+0x70>
     356:	82 e0       	ldi	r24, 0x02	; 2
     358:	df 91       	pop	r29
     35a:	cf 91       	pop	r28
     35c:	1f 91       	pop	r17
     35e:	0f 91       	pop	r16
     360:	ff 90       	pop	r15
     362:	ef 90       	pop	r14
     364:	df 90       	pop	r13
     366:	08 95       	ret

00000368 <HMI_Structure_get>:
     368:	af 92       	push	r10
     36a:	bf 92       	push	r11
     36c:	cf 92       	push	r12
     36e:	df 92       	push	r13
     370:	ef 92       	push	r14
     372:	ff 92       	push	r15
     374:	0f 93       	push	r16
     376:	1f 93       	push	r17
     378:	cf 93       	push	r28
     37a:	df 93       	push	r29
     37c:	18 2f       	mov	r17, r24
     37e:	09 2f       	mov	r16, r25
     380:	e6 2e       	mov	r14, r22
     382:	b4 2e       	mov	r11, r20
     384:	a5 2e       	mov	r10, r21
     386:	2f ef       	ldi	r18, 0xFF	; 255
     388:	62 17       	cp	r22, r18
     38a:	11 f4       	brne	.+4      	; 0x390 <HMI_Structure_get+0x28>
     38c:	81 e0       	ldi	r24, 0x01	; 1
     38e:	45 c0       	rjmp	.+138    	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
     390:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <PC_getchar>
     394:	8b 3a       	cpi	r24, 0xAB	; 171
     396:	09 f0       	breq	.+2      	; 0x39a <HMI_Structure_get+0x32>
     398:	3f c0       	rjmp	.+126    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     39a:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <PC_getchar>
     39e:	8b 3a       	cpi	r24, 0xAB	; 171
     3a0:	d9 f5       	brne	.+118    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     3a2:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <PC_getchar>
     3a6:	8b 3a       	cpi	r24, 0xAB	; 171
     3a8:	b9 f5       	brne	.+110    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     3aa:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <PC_getchar>
     3ae:	f8 2e       	mov	r15, r24
     3b0:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <PC_getchar>
     3b4:	c8 2e       	mov	r12, r24
     3b6:	a1 2f       	mov	r26, r17
     3b8:	b0 2f       	mov	r27, r16
     3ba:	fd 01       	movw	r30, r26
     3bc:	01 90       	ld	r0, Z+
     3be:	00 20       	and	r0, r0
     3c0:	e9 f7       	brne	.-6      	; 0x3bc <HMI_Structure_get+0x54>
     3c2:	31 97       	sbiw	r30, 0x01	; 1
     3c4:	de 2e       	mov	r13, r30
     3c6:	d1 1a       	sub	r13, r17
     3c8:	21 2f       	mov	r18, r17
     3ca:	30 2f       	mov	r19, r16
     3cc:	c9 01       	movw	r24, r18
     3ce:	ec 01       	movw	r28, r24
     3d0:	0c 2d       	mov	r16, r12
     3d2:	10 e0       	ldi	r17, 0x00	; 0
     3d4:	05 c0       	rjmp	.+10     	; 0x3e0 <HMI_Structure_get+0x78>
     3d6:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <PC_getchar>
     3da:	89 93       	st	Y+, r24
     3dc:	08 0f       	add	r16, r24
     3de:	1f 5f       	subi	r17, 0xFF	; 255
     3e0:	1d 15       	cp	r17, r13
     3e2:	c8 f3       	brcs	.-14     	; 0x3d6 <HMI_Structure_get+0x6e>
     3e4:	8b 2d       	mov	r24, r11
     3e6:	9a 2d       	mov	r25, r10
     3e8:	9c 01       	movw	r18, r24
     3ea:	e9 01       	movw	r28, r18
     3ec:	04 c0       	rjmp	.+8      	; 0x3f6 <HMI_Structure_get+0x8e>
     3ee:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <PC_getchar>
     3f2:	89 93       	st	Y+, r24
     3f4:	08 0f       	add	r16, r24
     3f6:	9e 01       	movw	r18, r28
     3f8:	2b 19       	sub	r18, r11
     3fa:	2e 15       	cp	r18, r14
     3fc:	c0 f3       	brcs	.-16     	; 0x3ee <HMI_Structure_get+0x86>
     3fe:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <PC_getchar>
     402:	fc 18       	sub	r15, r12
     404:	fe 14       	cp	r15, r14
     406:	11 f0       	breq	.+4      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
     408:	83 e0       	ldi	r24, 0x03	; 3
     40a:	07 c0       	rjmp	.+14     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
     40c:	80 17       	cp	r24, r16
     40e:	11 f4       	brne	.+4      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
     410:	80 e0       	ldi	r24, 0x00	; 0
     412:	03 c0       	rjmp	.+6      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
     414:	84 e0       	ldi	r24, 0x04	; 4
     416:	01 c0       	rjmp	.+2      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
     418:	82 e0       	ldi	r24, 0x02	; 2
     41a:	df 91       	pop	r29
     41c:	cf 91       	pop	r28
     41e:	1f 91       	pop	r17
     420:	0f 91       	pop	r16
     422:	ff 90       	pop	r15
     424:	ef 90       	pop	r14
     426:	df 90       	pop	r13
     428:	cf 90       	pop	r12
     42a:	bf 90       	pop	r11
     42c:	af 90       	pop	r10
     42e:	08 95       	ret

00000430 <HMI_Structure_put>:
     430:	af 92       	push	r10
     432:	bf 92       	push	r11
     434:	cf 92       	push	r12
     436:	df 92       	push	r13
     438:	ef 92       	push	r14
     43a:	ff 92       	push	r15
     43c:	0f 93       	push	r16
     43e:	1f 93       	push	r17
     440:	cf 93       	push	r28
     442:	df 93       	push	r29
     444:	d8 2e       	mov	r13, r24
     446:	c9 2e       	mov	r12, r25
     448:	e6 2e       	mov	r14, r22
     44a:	b4 2e       	mov	r11, r20
     44c:	a5 2e       	mov	r10, r21
     44e:	8b eb       	ldi	r24, 0xBB	; 187
     450:	0e 94 b9 0e 	call	0x1d72	; 0x1d72 <PC_putchar>
     454:	8b eb       	ldi	r24, 0xBB	; 187
     456:	0e 94 b9 0e 	call	0x1d72	; 0x1d72 <PC_putchar>
     45a:	8b eb       	ldi	r24, 0xBB	; 187
     45c:	0e 94 b9 0e 	call	0x1d72	; 0x1d72 <PC_putchar>
     460:	ed 2d       	mov	r30, r13
     462:	fc 2d       	mov	r31, r12
     464:	ef 01       	movw	r28, r30
     466:	09 90       	ld	r0, Y+
     468:	00 20       	and	r0, r0
     46a:	e9 f7       	brne	.-6      	; 0x466 <HMI_Structure_put+0x36>
     46c:	21 97       	sbiw	r28, 0x01	; 1
     46e:	ce 1b       	sub	r28, r30
     470:	df 0b       	sbc	r29, r31
     472:	0c 2f       	mov	r16, r28
     474:	8c 2f       	mov	r24, r28
     476:	90 e0       	ldi	r25, 0x00	; 0
     478:	01 96       	adiw	r24, 0x01	; 1
     47a:	8e 0d       	add	r24, r14
     47c:	91 1d       	adc	r25, r1
     47e:	8f 3f       	cpi	r24, 0xFF	; 255
     480:	91 05       	cpc	r25, r1
     482:	19 f0       	breq	.+6      	; 0x48a <HMI_Structure_put+0x5a>
     484:	14 f0       	brlt	.+4      	; 0x48a <HMI_Structure_put+0x5a>
     486:	81 e0       	ldi	r24, 0x01	; 1
     488:	2c c0       	rjmp	.+88     	; 0x4e2 <HMI_Structure_put+0xb2>
     48a:	0f 5f       	subi	r16, 0xFF	; 255
     48c:	10 2f       	mov	r17, r16
     48e:	1e 0d       	add	r17, r14
     490:	01 50       	subi	r16, 0x01	; 1
     492:	81 2f       	mov	r24, r17
     494:	0e 94 b9 0e 	call	0x1d72	; 0x1d72 <PC_putchar>
     498:	8c 2f       	mov	r24, r28
     49a:	0e 94 b9 0e 	call	0x1d72	; 0x1d72 <PC_putchar>
     49e:	f1 2e       	mov	r15, r17
     4a0:	f0 0e       	add	r15, r16
     4a2:	2d 2d       	mov	r18, r13
     4a4:	3c 2d       	mov	r19, r12
     4a6:	c9 01       	movw	r24, r18
     4a8:	ec 01       	movw	r28, r24
     4aa:	10 e0       	ldi	r17, 0x00	; 0
     4ac:	06 c0       	rjmp	.+12     	; 0x4ba <HMI_Structure_put+0x8a>
     4ae:	88 81       	ld	r24, Y
     4b0:	0e 94 b9 0e 	call	0x1d72	; 0x1d72 <PC_putchar>
     4b4:	89 91       	ld	r24, Y+
     4b6:	f8 0e       	add	r15, r24
     4b8:	1f 5f       	subi	r17, 0xFF	; 255
     4ba:	10 17       	cp	r17, r16
     4bc:	c0 f3       	brcs	.-16     	; 0x4ae <HMI_Structure_put+0x7e>
     4be:	8b 2d       	mov	r24, r11
     4c0:	9a 2d       	mov	r25, r10
     4c2:	9c 01       	movw	r18, r24
     4c4:	e9 01       	movw	r28, r18
     4c6:	00 e0       	ldi	r16, 0x00	; 0
     4c8:	06 c0       	rjmp	.+12     	; 0x4d6 <HMI_Structure_put+0xa6>
     4ca:	88 81       	ld	r24, Y
     4cc:	0e 94 b9 0e 	call	0x1d72	; 0x1d72 <PC_putchar>
     4d0:	89 91       	ld	r24, Y+
     4d2:	f8 0e       	add	r15, r24
     4d4:	0f 5f       	subi	r16, 0xFF	; 255
     4d6:	0e 15       	cp	r16, r14
     4d8:	c0 f3       	brcs	.-16     	; 0x4ca <HMI_Structure_put+0x9a>
     4da:	8f 2d       	mov	r24, r15
     4dc:	0e 94 b9 0e 	call	0x1d72	; 0x1d72 <PC_putchar>
     4e0:	80 e0       	ldi	r24, 0x00	; 0
     4e2:	df 91       	pop	r29
     4e4:	cf 91       	pop	r28
     4e6:	1f 91       	pop	r17
     4e8:	0f 91       	pop	r16
     4ea:	ff 90       	pop	r15
     4ec:	ef 90       	pop	r14
     4ee:	df 90       	pop	r13
     4f0:	cf 90       	pop	r12
     4f2:	bf 90       	pop	r11
     4f4:	af 90       	pop	r10
     4f6:	08 95       	ret

000004f8 <HMI_Transceiver_put>:
     4f8:	ef 92       	push	r14
     4fa:	ff 92       	push	r15
     4fc:	0f 93       	push	r16
     4fe:	1f 93       	push	r17
     500:	cf 93       	push	r28
     502:	df 93       	push	r29
     504:	08 2f       	mov	r16, r24
     506:	7b 01       	movw	r14, r22
     508:	81 32       	cpi	r24, 0x21	; 33
     50a:	10 f0       	brcs	.+4      	; 0x510 <HMI_Transceiver_put+0x18>
     50c:	81 e0       	ldi	r24, 0x01	; 1
     50e:	1c c0       	rjmp	.+56     	; 0x548 <HMI_Transceiver_put+0x50>
     510:	8a ea       	ldi	r24, 0xAA	; 170
     512:	0e 94 b9 0e 	call	0x1d72	; 0x1d72 <PC_putchar>
     516:	8a ea       	ldi	r24, 0xAA	; 170
     518:	0e 94 b9 0e 	call	0x1d72	; 0x1d72 <PC_putchar>
     51c:	8a ea       	ldi	r24, 0xAA	; 170
     51e:	0e 94 b9 0e 	call	0x1d72	; 0x1d72 <PC_putchar>
     522:	80 2f       	mov	r24, r16
     524:	0e 94 b9 0e 	call	0x1d72	; 0x1d72 <PC_putchar>
     528:	10 2f       	mov	r17, r16
     52a:	e7 01       	movw	r28, r14
     52c:	05 c0       	rjmp	.+10     	; 0x538 <HMI_Transceiver_put+0x40>
     52e:	88 81       	ld	r24, Y
     530:	0e 94 b9 0e 	call	0x1d72	; 0x1d72 <PC_putchar>
     534:	89 91       	ld	r24, Y+
     536:	18 0f       	add	r17, r24
     538:	9e 01       	movw	r18, r28
     53a:	2e 19       	sub	r18, r14
     53c:	20 17       	cp	r18, r16
     53e:	b8 f3       	brcs	.-18     	; 0x52e <HMI_Transceiver_put+0x36>
     540:	81 2f       	mov	r24, r17
     542:	0e 94 b9 0e 	call	0x1d72	; 0x1d72 <PC_putchar>
     546:	80 e0       	ldi	r24, 0x00	; 0
     548:	df 91       	pop	r29
     54a:	cf 91       	pop	r28
     54c:	1f 91       	pop	r17
     54e:	0f 91       	pop	r16
     550:	ff 90       	pop	r15
     552:	ef 90       	pop	r14
     554:	08 95       	ret

00000556 <ASA_M128_set>:
     556:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
     55a:	91 e1       	ldi	r25, 0x11	; 17
     55c:	99 b9       	out	0x09, r25	; 9
     55e:	8a b1       	in	r24, 0x0a	; 10
     560:	88 61       	ori	r24, 0x18	; 24
     562:	8a b9       	out	0x0a, r24	; 10
     564:	e5 e9       	ldi	r30, 0x95	; 149
     566:	f0 e0       	ldi	r31, 0x00	; 0
     568:	80 81       	ld	r24, Z
     56a:	86 60       	ori	r24, 0x06	; 6
     56c:	80 83       	st	Z, r24
     56e:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
     572:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
     576:	ea e9       	ldi	r30, 0x9A	; 154
     578:	f0 e0       	ldi	r31, 0x00	; 0
     57a:	80 81       	ld	r24, Z
     57c:	88 61       	ori	r24, 0x18	; 24
     57e:	80 83       	st	Z, r24
     580:	ed e9       	ldi	r30, 0x9D	; 157
     582:	f0 e0       	ldi	r31, 0x00	; 0
     584:	80 81       	ld	r24, Z
     586:	86 60       	ori	r24, 0x06	; 6
     588:	80 83       	st	Z, r24
     58a:	80 e0       	ldi	r24, 0x00	; 0
     58c:	91 e0       	ldi	r25, 0x01	; 1
     58e:	90 93 c4 02 	sts	0x02C4, r25	; 0x8002c4 <__iob+0x3>
     592:	80 93 c3 02 	sts	0x02C3, r24	; 0x8002c3 <__iob+0x2>
     596:	90 93 c2 02 	sts	0x02C2, r25	; 0x8002c2 <__iob+0x1>
     59a:	80 93 c1 02 	sts	0x02C1, r24	; 0x8002c1 <__iob>
     59e:	87 b3       	in	r24, 0x17	; 23
     5a0:	80 6e       	ori	r24, 0xE0	; 224
     5a2:	87 bb       	out	0x17, r24	; 23
     5a4:	80 e0       	ldi	r24, 0x00	; 0
     5a6:	0e 94 5c 0e 	call	0x1cb8	; 0x1cb8 <ASA_ID_set>
     5aa:	54 d3       	rcall	.+1704   	; 0xc54 <timer1_set>
     5ac:	78 94       	sei
     5ae:	80 e0       	ldi	r24, 0x00	; 0
     5b0:	08 95       	ret

000005b2 <ASA_7S00_get>:
     5b2:	cf 93       	push	r28
     5b4:	df 93       	push	r29
     5b6:	e9 01       	movw	r28, r18
     5b8:	88 30       	cpi	r24, 0x08	; 8
     5ba:	10 f0       	brcs	.+4      	; 0x5c0 <ASA_7S00_get+0xe>
     5bc:	81 e0       	ldi	r24, 0x01	; 1
     5be:	34 c0       	rjmp	.+104    	; 0x628 <ASA_7S00_get+0x76>
     5c0:	64 30       	cpi	r22, 0x04	; 4
     5c2:	68 f0       	brcs	.+26     	; 0x5de <ASA_7S00_get+0x2c>
     5c4:	68 3c       	cpi	r22, 0xC8	; 200
     5c6:	11 f0       	breq	.+4      	; 0x5cc <ASA_7S00_get+0x1a>
     5c8:	82 e0       	ldi	r24, 0x02	; 2
     5ca:	2e c0       	rjmp	.+92     	; 0x628 <ASA_7S00_get+0x76>
     5cc:	41 30       	cpi	r20, 0x01	; 1
     5ce:	59 f5       	brne	.+86     	; 0x626 <ASA_7S00_get+0x74>
     5d0:	e8 2f       	mov	r30, r24
     5d2:	f0 e0       	ldi	r31, 0x00	; 0
     5d4:	ef 5d       	subi	r30, 0xDF	; 223
     5d6:	fd 4f       	sbci	r31, 0xFD	; 253
     5d8:	80 81       	ld	r24, Z
     5da:	88 83       	st	Y, r24
     5dc:	22 c0       	rjmp	.+68     	; 0x622 <ASA_7S00_get+0x70>
     5de:	70 e0       	ldi	r23, 0x00	; 0
     5e0:	9b 01       	movw	r18, r22
     5e2:	24 0f       	add	r18, r20
     5e4:	31 1d       	adc	r19, r1
     5e6:	a9 01       	movw	r20, r18
     5e8:	25 30       	cpi	r18, 0x05	; 5
     5ea:	31 05       	cpc	r19, r1
     5ec:	e4 f4       	brge	.+56     	; 0x626 <ASA_7S00_get+0x74>
     5ee:	a8 2f       	mov	r26, r24
     5f0:	b0 e0       	ldi	r27, 0x00	; 0
     5f2:	aa 0f       	add	r26, r26
     5f4:	bb 1f       	adc	r27, r27
     5f6:	aa 0f       	add	r26, r26
     5f8:	bb 1f       	adc	r27, r27
     5fa:	a6 0f       	add	r26, r22
     5fc:	b7 1f       	adc	r27, r23
     5fe:	af 5f       	subi	r26, 0xFF	; 255
     600:	bd 4f       	sbci	r27, 0xFD	; 253
     602:	20 e0       	ldi	r18, 0x00	; 0
     604:	30 e0       	ldi	r19, 0x00	; 0
     606:	07 c0       	rjmp	.+14     	; 0x616 <ASA_7S00_get+0x64>
     608:	fe 01       	movw	r30, r28
     60a:	e2 0f       	add	r30, r18
     60c:	f3 1f       	adc	r31, r19
     60e:	8d 91       	ld	r24, X+
     610:	80 83       	st	Z, r24
     612:	2f 5f       	subi	r18, 0xFF	; 255
     614:	3f 4f       	sbci	r19, 0xFF	; 255
     616:	c9 01       	movw	r24, r18
     618:	86 0f       	add	r24, r22
     61a:	97 1f       	adc	r25, r23
     61c:	84 17       	cp	r24, r20
     61e:	95 07       	cpc	r25, r21
     620:	9c f3       	brlt	.-26     	; 0x608 <ASA_7S00_get+0x56>
     622:	80 e0       	ldi	r24, 0x00	; 0
     624:	01 c0       	rjmp	.+2      	; 0x628 <ASA_7S00_get+0x76>
     626:	83 e0       	ldi	r24, 0x03	; 3
     628:	df 91       	pop	r29
     62a:	cf 91       	pop	r28
     62c:	08 95       	ret

0000062e <UART_7S00_Transfer>:
     62e:	af 92       	push	r10
     630:	bf 92       	push	r11
     632:	cf 92       	push	r12
     634:	df 92       	push	r13
     636:	ef 92       	push	r14
     638:	ff 92       	push	r15
     63a:	0f 93       	push	r16
     63c:	1f 93       	push	r17
     63e:	df 93       	push	r29
     640:	cf 93       	push	r28
     642:	cd b7       	in	r28, 0x3d	; 61
     644:	de b7       	in	r29, 0x3e	; 62
     646:	2d 97       	sbiw	r28, 0x0d	; 13
     648:	0f b6       	in	r0, 0x3f	; 63
     64a:	f8 94       	cli
     64c:	de bf       	out	0x3e, r29	; 62
     64e:	0f be       	out	0x3f, r0	; 63
     650:	cd bf       	out	0x3d, r28	; 61
     652:	e8 2e       	mov	r14, r24
     654:	de 01       	movw	r26, r28
     656:	12 96       	adiw	r26, 0x02	; 2
     658:	ee e0       	ldi	r30, 0x0E	; 14
     65a:	f1 e0       	ldi	r31, 0x01	; 1
     65c:	86 e0       	ldi	r24, 0x06	; 6
     65e:	01 90       	ld	r0, Z+
     660:	0d 92       	st	X+, r0
     662:	81 50       	subi	r24, 0x01	; 1
     664:	e1 f7       	brne	.-8      	; 0x65e <UART_7S00_Transfer+0x30>
     666:	2e 2d       	mov	r18, r14
     668:	30 e0       	ldi	r19, 0x00	; 0
     66a:	d9 01       	movw	r26, r18
     66c:	aa 0f       	add	r26, r26
     66e:	bb 1f       	adc	r27, r27
     670:	aa 0f       	add	r26, r26
     672:	bb 1f       	adc	r27, r27
     674:	af 5f       	subi	r26, 0xFF	; 255
     676:	bd 4f       	sbci	r27, 0xFD	; 253
     678:	8c 91       	ld	r24, X
     67a:	e8 2f       	mov	r30, r24
     67c:	f0 e0       	ldi	r31, 0x00	; 0
     67e:	e8 54       	subi	r30, 0x48	; 72
     680:	ff 4f       	sbci	r31, 0xFF	; 255
     682:	44 91       	lpm	r20, Z
     684:	11 96       	adiw	r26, 0x01	; 1
     686:	8c 91       	ld	r24, X
     688:	11 97       	sbiw	r26, 0x01	; 1
     68a:	e8 2f       	mov	r30, r24
     68c:	f0 e0       	ldi	r31, 0x00	; 0
     68e:	e8 54       	subi	r30, 0x48	; 72
     690:	ff 4f       	sbci	r31, 0xFF	; 255
     692:	54 91       	lpm	r21, Z
     694:	f9 01       	movw	r30, r18
     696:	ee 0f       	add	r30, r30
     698:	ff 1f       	adc	r31, r31
     69a:	ee 0f       	add	r30, r30
     69c:	ff 1f       	adc	r31, r31
     69e:	ed 5f       	subi	r30, 0xFD	; 253
     6a0:	fd 4f       	sbci	r31, 0xFD	; 253
     6a2:	e0 81       	ld	r30, Z
     6a4:	f0 e0       	ldi	r31, 0x00	; 0
     6a6:	e8 54       	subi	r30, 0x48	; 72
     6a8:	ff 4f       	sbci	r31, 0xFF	; 255
     6aa:	74 91       	lpm	r23, Z
     6ac:	13 96       	adiw	r26, 0x03	; 3
     6ae:	8c 91       	ld	r24, X
     6b0:	90 e0       	ldi	r25, 0x00	; 0
     6b2:	88 54       	subi	r24, 0x48	; 72
     6b4:	9f 4f       	sbci	r25, 0xFF	; 255
     6b6:	fc 01       	movw	r30, r24
     6b8:	64 91       	lpm	r22, Z
     6ba:	e8 e0       	ldi	r30, 0x08	; 8
     6bc:	ce 2e       	mov	r12, r30
     6be:	d1 2c       	mov	r13, r1
     6c0:	cc 0e       	add	r12, r28
     6c2:	dd 1e       	adc	r13, r29
     6c4:	86 e0       	ldi	r24, 0x06	; 6
     6c6:	f6 01       	movw	r30, r12
     6c8:	11 92       	st	Z+, r1
     6ca:	8a 95       	dec	r24
     6cc:	e9 f7       	brne	.-6      	; 0x6c8 <UART_7S00_Transfer+0x9a>
     6ce:	2f 5d       	subi	r18, 0xDF	; 223
     6d0:	3d 4f       	sbci	r19, 0xFD	; 253
     6d2:	f9 01       	movw	r30, r18
     6d4:	20 81       	ld	r18, Z
     6d6:	92 2f       	mov	r25, r18
     6d8:	90 78       	andi	r25, 0x80	; 128
     6da:	94 0f       	add	r25, r20
     6dc:	82 2f       	mov	r24, r18
     6de:	88 70       	andi	r24, 0x08	; 8
     6e0:	88 0f       	add	r24, r24
     6e2:	88 0f       	add	r24, r24
     6e4:	88 0f       	add	r24, r24
     6e6:	98 0f       	add	r25, r24
     6e8:	90 93 fd 01 	sts	0x01FD, r25	; 0x8001fd <_7S00_transmit_data>
     6ec:	82 2f       	mov	r24, r18
     6ee:	80 74       	andi	r24, 0x40	; 64
     6f0:	88 0f       	add	r24, r24
     6f2:	92 2f       	mov	r25, r18
     6f4:	94 70       	andi	r25, 0x04	; 4
     6f6:	92 95       	swap	r25
     6f8:	90 7f       	andi	r25, 0xF0	; 240
     6fa:	89 0f       	add	r24, r25
     6fc:	85 0f       	add	r24, r21
     6fe:	80 93 fe 01 	sts	0x01FE, r24	; 0x8001fe <_7S00_transmit_data+0x1>
     702:	82 2f       	mov	r24, r18
     704:	80 72       	andi	r24, 0x20	; 32
     706:	88 0f       	add	r24, r24
     708:	88 0f       	add	r24, r24
     70a:	92 2f       	mov	r25, r18
     70c:	92 70       	andi	r25, 0x02	; 2
     70e:	92 95       	swap	r25
     710:	99 0f       	add	r25, r25
     712:	90 7e       	andi	r25, 0xE0	; 224
     714:	89 0f       	add	r24, r25
     716:	87 0f       	add	r24, r23
     718:	80 93 ff 01 	sts	0x01FF, r24	; 0x8001ff <_7S00_transmit_data+0x2>
     71c:	82 2f       	mov	r24, r18
     71e:	80 71       	andi	r24, 0x10	; 16
     720:	88 0f       	add	r24, r24
     722:	88 0f       	add	r24, r24
     724:	88 0f       	add	r24, r24
     726:	21 70       	andi	r18, 0x01	; 1
     728:	22 95       	swap	r18
     72a:	22 0f       	add	r18, r18
     72c:	22 0f       	add	r18, r18
     72e:	20 7c       	andi	r18, 0xC0	; 192
     730:	82 0f       	add	r24, r18
     732:	86 0f       	add	r24, r22
     734:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_7S00_transmit_data+0x3>
     738:	19 82       	std	Y+1, r1	; 0x01
     73a:	8e 2d       	mov	r24, r14
     73c:	6d e7       	ldi	r22, 0x7D	; 125
     73e:	0e 94 87 0e 	call	0x1d0e	; 0x1d0e <ASA_putchar>
     742:	8e 2d       	mov	r24, r14
     744:	6d e7       	ldi	r22, 0x7D	; 125
     746:	0e 94 87 0e 	call	0x1d0e	; 0x1d0e <ASA_putchar>
     74a:	8e 2d       	mov	r24, r14
     74c:	6d e7       	ldi	r22, 0x7D	; 125
     74e:	0e 94 87 0e 	call	0x1d0e	; 0x1d0e <ASA_putchar>
     752:	8e 2d       	mov	r24, r14
     754:	61 e0       	ldi	r22, 0x01	; 1
     756:	0e 94 87 0e 	call	0x1d0e	; 0x1d0e <ASA_putchar>
     75a:	8e 2d       	mov	r24, r14
     75c:	64 e0       	ldi	r22, 0x04	; 4
     75e:	0e 94 87 0e 	call	0x1d0e	; 0x1d0e <ASA_putchar>
     762:	8e 2d       	mov	r24, r14
     764:	64 e0       	ldi	r22, 0x04	; 4
     766:	0e 94 87 0e 	call	0x1d0e	; 0x1d0e <ASA_putchar>
     76a:	8e 2d       	mov	r24, r14
     76c:	60 91 fd 01 	lds	r22, 0x01FD	; 0x8001fd <_7S00_transmit_data>
     770:	0e 94 87 0e 	call	0x1d0e	; 0x1d0e <ASA_putchar>
     774:	10 91 fd 01 	lds	r17, 0x01FD	; 0x8001fd <_7S00_transmit_data>
     778:	8e 2d       	mov	r24, r14
     77a:	60 91 fe 01 	lds	r22, 0x01FE	; 0x8001fe <_7S00_transmit_data+0x1>
     77e:	0e 94 87 0e 	call	0x1d0e	; 0x1d0e <ASA_putchar>
     782:	f0 90 fe 01 	lds	r15, 0x01FE	; 0x8001fe <_7S00_transmit_data+0x1>
     786:	8e 2d       	mov	r24, r14
     788:	60 91 ff 01 	lds	r22, 0x01FF	; 0x8001ff <_7S00_transmit_data+0x2>
     78c:	0e 94 87 0e 	call	0x1d0e	; 0x1d0e <ASA_putchar>
     790:	00 91 ff 01 	lds	r16, 0x01FF	; 0x8001ff <_7S00_transmit_data+0x2>
     794:	8e 2d       	mov	r24, r14
     796:	60 91 00 02 	lds	r22, 0x0200	; 0x800200 <_7S00_transmit_data+0x3>
     79a:	0e 94 87 0e 	call	0x1d0e	; 0x1d0e <ASA_putchar>
     79e:	1f 0d       	add	r17, r15
     7a0:	17 5f       	subi	r17, 0xF7	; 247
     7a2:	10 0f       	add	r17, r16
     7a4:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <_7S00_transmit_data+0x3>
     7a8:	18 0f       	add	r17, r24
     7aa:	8e 2d       	mov	r24, r14
     7ac:	61 2f       	mov	r22, r17
     7ae:	0e 94 87 0e 	call	0x1d0e	; 0x1d0e <ASA_putchar>
     7b2:	86 01       	movw	r16, r12
     7b4:	5e 01       	movw	r10, r28
     7b6:	08 94       	sec
     7b8:	a1 1c       	adc	r10, r1
     7ba:	b1 1c       	adc	r11, r1
     7bc:	9e e0       	ldi	r25, 0x0E	; 14
     7be:	c9 2e       	mov	r12, r25
     7c0:	d1 2c       	mov	r13, r1
     7c2:	cc 0e       	add	r12, r28
     7c4:	dd 1e       	adc	r13, r29
     7c6:	8e 2d       	mov	r24, r14
     7c8:	b5 01       	movw	r22, r10
     7ca:	0e 94 9b 0e 	call	0x1d36	; 0x1d36 <ASA_getchar>
     7ce:	89 81       	ldd	r24, Y+1	; 0x01
     7d0:	f8 01       	movw	r30, r16
     7d2:	81 93       	st	Z+, r24
     7d4:	8f 01       	movw	r16, r30
     7d6:	ec 15       	cp	r30, r12
     7d8:	fd 05       	cpc	r31, r13
     7da:	a9 f7       	brne	.-22     	; 0x7c6 <UART_7S00_Transfer+0x198>
     7dc:	20 e0       	ldi	r18, 0x00	; 0
     7de:	30 e0       	ldi	r19, 0x00	; 0
     7e0:	be 01       	movw	r22, r28
     7e2:	68 5f       	subi	r22, 0xF8	; 248
     7e4:	7f 4f       	sbci	r23, 0xFF	; 255
     7e6:	ae 01       	movw	r20, r28
     7e8:	4e 5f       	subi	r20, 0xFE	; 254
     7ea:	5f 4f       	sbci	r21, 0xFF	; 255
     7ec:	fb 01       	movw	r30, r22
     7ee:	e2 0f       	add	r30, r18
     7f0:	f3 1f       	adc	r31, r19
     7f2:	da 01       	movw	r26, r20
     7f4:	a2 0f       	add	r26, r18
     7f6:	b3 1f       	adc	r27, r19
     7f8:	90 81       	ld	r25, Z
     7fa:	8c 91       	ld	r24, X
     7fc:	98 17       	cp	r25, r24
     7fe:	11 f0       	breq	.+4      	; 0x804 <UART_7S00_Transfer+0x1d6>
     800:	84 e0       	ldi	r24, 0x04	; 4
     802:	06 c0       	rjmp	.+12     	; 0x810 <UART_7S00_Transfer+0x1e2>
     804:	2f 5f       	subi	r18, 0xFF	; 255
     806:	3f 4f       	sbci	r19, 0xFF	; 255
     808:	26 30       	cpi	r18, 0x06	; 6
     80a:	31 05       	cpc	r19, r1
     80c:	79 f7       	brne	.-34     	; 0x7ec <UART_7S00_Transfer+0x1be>
     80e:	80 e0       	ldi	r24, 0x00	; 0
     810:	2d 96       	adiw	r28, 0x0d	; 13
     812:	0f b6       	in	r0, 0x3f	; 63
     814:	f8 94       	cli
     816:	de bf       	out	0x3e, r29	; 62
     818:	0f be       	out	0x3f, r0	; 63
     81a:	cd bf       	out	0x3d, r28	; 61
     81c:	cf 91       	pop	r28
     81e:	df 91       	pop	r29
     820:	1f 91       	pop	r17
     822:	0f 91       	pop	r16
     824:	ff 90       	pop	r15
     826:	ef 90       	pop	r14
     828:	df 90       	pop	r13
     82a:	cf 90       	pop	r12
     82c:	bf 90       	pop	r11
     82e:	af 90       	pop	r10
     830:	08 95       	ret

00000832 <ASA_7S00_put>:
     832:	cf 92       	push	r12
     834:	df 92       	push	r13
     836:	ff 92       	push	r15
     838:	0f 93       	push	r16
     83a:	1f 93       	push	r17
     83c:	cf 93       	push	r28
     83e:	df 93       	push	r29
     840:	08 2f       	mov	r16, r24
     842:	16 2f       	mov	r17, r22
     844:	f4 2e       	mov	r15, r20
     846:	69 01       	movw	r12, r18
     848:	0e 94 5c 0e 	call	0x1cb8	; 0x1cb8 <ASA_ID_set>
     84c:	08 30       	cpi	r16, 0x08	; 8
     84e:	10 f0       	brcs	.+4      	; 0x854 <ASA_7S00_put+0x22>
     850:	11 e0       	ldi	r17, 0x01	; 1
     852:	48 c0       	rjmp	.+144    	; 0x8e4 <ASA_7S00_put+0xb2>
     854:	14 30       	cpi	r17, 0x04	; 4
     856:	10 f0       	brcs	.+4      	; 0x85c <ASA_7S00_put+0x2a>
     858:	12 e0       	ldi	r17, 0x02	; 2
     85a:	44 c0       	rjmp	.+136    	; 0x8e4 <ASA_7S00_put+0xb2>
     85c:	61 2f       	mov	r22, r17
     85e:	70 e0       	ldi	r23, 0x00	; 0
     860:	ab 01       	movw	r20, r22
     862:	4f 0d       	add	r20, r15
     864:	51 1d       	adc	r21, r1
     866:	45 30       	cpi	r20, 0x05	; 5
     868:	51 05       	cpc	r21, r1
     86a:	14 f0       	brlt	.+4      	; 0x870 <ASA_7S00_put+0x3e>
     86c:	13 e0       	ldi	r17, 0x03	; 3
     86e:	3a c0       	rjmp	.+116    	; 0x8e4 <ASA_7S00_put+0xb2>
     870:	20 e0       	ldi	r18, 0x00	; 0
     872:	30 e0       	ldi	r19, 0x00	; 0
     874:	eb 01       	movw	r28, r22
     876:	0e c0       	rjmp	.+28     	; 0x894 <ASA_7S00_put+0x62>
     878:	f6 01       	movw	r30, r12
     87a:	e2 0f       	add	r30, r18
     87c:	f3 1f       	adc	r31, r19
     87e:	e0 81       	ld	r30, Z
     880:	e0 36       	cpi	r30, 0x60	; 96
     882:	78 f5       	brcc	.+94     	; 0x8e2 <ASA_7S00_put+0xb0>
     884:	f0 e0       	ldi	r31, 0x00	; 0
     886:	e8 54       	subi	r30, 0x48	; 72
     888:	ff 4f       	sbci	r31, 0xFF	; 255
     88a:	e4 91       	lpm	r30, Z
     88c:	ef 3f       	cpi	r30, 0xFF	; 255
     88e:	49 f1       	breq	.+82     	; 0x8e2 <ASA_7S00_put+0xb0>
     890:	2f 5f       	subi	r18, 0xFF	; 255
     892:	3f 4f       	sbci	r19, 0xFF	; 255
     894:	c9 01       	movw	r24, r18
     896:	8c 0f       	add	r24, r28
     898:	9d 1f       	adc	r25, r29
     89a:	84 17       	cp	r24, r20
     89c:	95 07       	cpc	r25, r21
     89e:	64 f3       	brlt	.-40     	; 0x878 <ASA_7S00_put+0x46>
     8a0:	a0 2f       	mov	r26, r16
     8a2:	b0 e0       	ldi	r27, 0x00	; 0
     8a4:	aa 0f       	add	r26, r26
     8a6:	bb 1f       	adc	r27, r27
     8a8:	aa 0f       	add	r26, r26
     8aa:	bb 1f       	adc	r27, r27
     8ac:	a6 0f       	add	r26, r22
     8ae:	b7 1f       	adc	r27, r23
     8b0:	af 5f       	subi	r26, 0xFF	; 255
     8b2:	bd 4f       	sbci	r27, 0xFD	; 253
     8b4:	20 e0       	ldi	r18, 0x00	; 0
     8b6:	30 e0       	ldi	r19, 0x00	; 0
     8b8:	07 c0       	rjmp	.+14     	; 0x8c8 <ASA_7S00_put+0x96>
     8ba:	f6 01       	movw	r30, r12
     8bc:	e2 0f       	add	r30, r18
     8be:	f3 1f       	adc	r31, r19
     8c0:	80 81       	ld	r24, Z
     8c2:	8d 93       	st	X+, r24
     8c4:	2f 5f       	subi	r18, 0xFF	; 255
     8c6:	3f 4f       	sbci	r19, 0xFF	; 255
     8c8:	c9 01       	movw	r24, r18
     8ca:	8c 0f       	add	r24, r28
     8cc:	9d 1f       	adc	r25, r29
     8ce:	84 17       	cp	r24, r20
     8d0:	95 07       	cpc	r25, r21
     8d2:	9c f3       	brlt	.-26     	; 0x8ba <ASA_7S00_put+0x88>
     8d4:	80 2f       	mov	r24, r16
     8d6:	ab de       	rcall	.-682    	; 0x62e <UART_7S00_Transfer>
     8d8:	18 2f       	mov	r17, r24
     8da:	80 e0       	ldi	r24, 0x00	; 0
     8dc:	0e 94 5c 0e 	call	0x1cb8	; 0x1cb8 <ASA_ID_set>
     8e0:	01 c0       	rjmp	.+2      	; 0x8e4 <ASA_7S00_put+0xb2>
     8e2:	15 e0       	ldi	r17, 0x05	; 5
     8e4:	81 2f       	mov	r24, r17
     8e6:	df 91       	pop	r29
     8e8:	cf 91       	pop	r28
     8ea:	1f 91       	pop	r17
     8ec:	0f 91       	pop	r16
     8ee:	ff 90       	pop	r15
     8f0:	df 90       	pop	r13
     8f2:	cf 90       	pop	r12
     8f4:	08 95       	ret

000008f6 <ASA_7S00_set>:
     8f6:	df 92       	push	r13
     8f8:	ef 92       	push	r14
     8fa:	ff 92       	push	r15
     8fc:	0f 93       	push	r16
     8fe:	1f 93       	push	r17
     900:	f8 2e       	mov	r15, r24
     902:	d6 2e       	mov	r13, r22
     904:	14 2f       	mov	r17, r20
     906:	e2 2e       	mov	r14, r18
     908:	0e 94 5c 0e 	call	0x1cb8	; 0x1cb8 <ASA_ID_set>
     90c:	87 e0       	ldi	r24, 0x07	; 7
     90e:	8f 15       	cp	r24, r15
     910:	10 f4       	brcc	.+4      	; 0x916 <ASA_7S00_set+0x20>
     912:	01 e0       	ldi	r16, 0x01	; 1
     914:	22 c0       	rjmp	.+68     	; 0x95a <ASA_7S00_set+0x64>
     916:	88 ec       	ldi	r24, 0xC8	; 200
     918:	d8 16       	cp	r13, r24
     91a:	11 f0       	breq	.+4      	; 0x920 <ASA_7S00_set+0x2a>
     91c:	02 e0       	ldi	r16, 0x02	; 2
     91e:	1d c0       	rjmp	.+58     	; 0x95a <ASA_7S00_set+0x64>
     920:	87 e0       	ldi	r24, 0x07	; 7
     922:	8e 15       	cp	r24, r14
     924:	10 f4       	brcc	.+4      	; 0x92a <ASA_7S00_set+0x34>
     926:	03 e0       	ldi	r16, 0x03	; 3
     928:	18 c0       	rjmp	.+48     	; 0x95a <ASA_7S00_set+0x64>
     92a:	80 2f       	mov	r24, r16
     92c:	90 e0       	ldi	r25, 0x00	; 0
     92e:	02 c0       	rjmp	.+4      	; 0x934 <ASA_7S00_set+0x3e>
     930:	88 0f       	add	r24, r24
     932:	99 1f       	adc	r25, r25
     934:	ea 94       	dec	r14
     936:	e2 f7       	brpl	.-8      	; 0x930 <ASA_7S00_set+0x3a>
     938:	ef 2d       	mov	r30, r15
     93a:	f0 e0       	ldi	r31, 0x00	; 0
     93c:	ef 5d       	subi	r30, 0xDF	; 223
     93e:	fd 4f       	sbci	r31, 0xFD	; 253
     940:	91 2f       	mov	r25, r17
     942:	98 23       	and	r25, r24
     944:	10 95       	com	r17
     946:	80 81       	ld	r24, Z
     948:	81 23       	and	r24, r17
     94a:	98 2b       	or	r25, r24
     94c:	90 83       	st	Z, r25
     94e:	8f 2d       	mov	r24, r15
     950:	6e de       	rcall	.-804    	; 0x62e <UART_7S00_Transfer>
     952:	08 2f       	mov	r16, r24
     954:	80 e0       	ldi	r24, 0x00	; 0
     956:	0e 94 5c 0e 	call	0x1cb8	; 0x1cb8 <ASA_ID_set>
     95a:	80 2f       	mov	r24, r16
     95c:	1f 91       	pop	r17
     95e:	0f 91       	pop	r16
     960:	ff 90       	pop	r15
     962:	ef 90       	pop	r14
     964:	df 90       	pop	r13
     966:	08 95       	ret

00000968 <SPI_KB00_Init>:
     968:	87 ee       	ldi	r24, 0xE7	; 231
     96a:	87 bb       	out	0x17, r24	; 23
     96c:	83 e5       	ldi	r24, 0x53	; 83
     96e:	8d b9       	out	0x0d, r24	; 13
     970:	08 95       	ret

00000972 <ASA_KB00_set>:
     972:	ff 92       	push	r15
     974:	0f 93       	push	r16
     976:	1f 93       	push	r17
     978:	78 2f       	mov	r23, r24
     97a:	14 2f       	mov	r17, r20
     97c:	f2 2e       	mov	r15, r18
     97e:	88 30       	cpi	r24, 0x08	; 8
     980:	10 f0       	brcs	.+4      	; 0x986 <ASA_KB00_set+0x14>
     982:	81 e0       	ldi	r24, 0x01	; 1
     984:	4a c0       	rjmp	.+148    	; 0xa1a <ASA_KB00_set+0xa8>
     986:	86 2f       	mov	r24, r22
     988:	88 5c       	subi	r24, 0xC8	; 200
     98a:	81 31       	cpi	r24, 0x11	; 17
     98c:	10 f0       	brcs	.+4      	; 0x992 <ASA_KB00_set+0x20>
     98e:	82 e0       	ldi	r24, 0x02	; 2
     990:	44 c0       	rjmp	.+136    	; 0xa1a <ASA_KB00_set+0xa8>
     992:	87 e0       	ldi	r24, 0x07	; 7
     994:	82 17       	cp	r24, r18
     996:	10 f4       	brcc	.+4      	; 0x99c <ASA_KB00_set+0x2a>
     998:	83 e0       	ldi	r24, 0x03	; 3
     99a:	3f c0       	rjmp	.+126    	; 0xa1a <ASA_KB00_set+0xa8>
     99c:	68 3c       	cpi	r22, 0xC8	; 200
     99e:	19 f1       	breq	.+70     	; 0x9e6 <ASA_KB00_set+0x74>
     9a0:	e7 2f       	mov	r30, r23
     9a2:	f0 e0       	ldi	r31, 0x00	; 0
     9a4:	ee 0f       	add	r30, r30
     9a6:	ff 1f       	adc	r31, r31
     9a8:	ee 0f       	add	r30, r30
     9aa:	ff 1f       	adc	r31, r31
     9ac:	ec 59       	subi	r30, 0x9C	; 156
     9ae:	fe 4f       	sbci	r31, 0xFE	; 254
     9b0:	26 2f       	mov	r18, r22
     9b2:	30 e0       	ldi	r19, 0x00	; 0
     9b4:	29 5c       	subi	r18, 0xC9	; 201
     9b6:	30 40       	sbci	r19, 0x00	; 0
     9b8:	81 e0       	ldi	r24, 0x01	; 1
     9ba:	90 e0       	ldi	r25, 0x00	; 0
     9bc:	02 c0       	rjmp	.+4      	; 0x9c2 <ASA_KB00_set+0x50>
     9be:	88 0f       	add	r24, r24
     9c0:	99 1f       	adc	r25, r25
     9c2:	2a 95       	dec	r18
     9c4:	e2 f7       	brpl	.-8      	; 0x9be <ASA_KB00_set+0x4c>
     9c6:	aa 27       	eor	r26, r26
     9c8:	97 fd       	sbrc	r25, 7
     9ca:	a0 95       	com	r26
     9cc:	ba 2f       	mov	r27, r26
     9ce:	20 81       	ld	r18, Z
     9d0:	31 81       	ldd	r19, Z+1	; 0x01
     9d2:	42 81       	ldd	r20, Z+2	; 0x02
     9d4:	53 81       	ldd	r21, Z+3	; 0x03
     9d6:	82 2b       	or	r24, r18
     9d8:	93 2b       	or	r25, r19
     9da:	a4 2b       	or	r26, r20
     9dc:	b5 2b       	or	r27, r21
     9de:	80 83       	st	Z, r24
     9e0:	91 83       	std	Z+1, r25	; 0x01
     9e2:	a2 83       	std	Z+2, r26	; 0x02
     9e4:	b3 83       	std	Z+3, r27	; 0x03
     9e6:	20 2f       	mov	r18, r16
     9e8:	30 e0       	ldi	r19, 0x00	; 0
     9ea:	02 c0       	rjmp	.+4      	; 0x9f0 <ASA_KB00_set+0x7e>
     9ec:	22 0f       	add	r18, r18
     9ee:	33 1f       	adc	r19, r19
     9f0:	fa 94       	dec	r15
     9f2:	e2 f7       	brpl	.-8      	; 0x9ec <ASA_KB00_set+0x7a>
     9f4:	87 2f       	mov	r24, r23
     9f6:	90 e0       	ldi	r25, 0x00	; 0
     9f8:	fc 01       	movw	r30, r24
     9fa:	34 e0       	ldi	r19, 0x04	; 4
     9fc:	ee 0f       	add	r30, r30
     9fe:	ff 1f       	adc	r31, r31
     a00:	3a 95       	dec	r19
     a02:	e1 f7       	brne	.-8      	; 0x9fc <ASA_KB00_set+0x8a>
     a04:	e8 0f       	add	r30, r24
     a06:	f9 1f       	adc	r31, r25
     a08:	ef 5c       	subi	r30, 0xCF	; 207
     a0a:	fd 4f       	sbci	r31, 0xFD	; 253
     a0c:	e6 0f       	add	r30, r22
     a0e:	f1 1d       	adc	r31, r1
     a10:	e8 5c       	subi	r30, 0xC8	; 200
     a12:	f0 40       	sbci	r31, 0x00	; 0
     a14:	12 23       	and	r17, r18
     a16:	10 83       	st	Z, r17
     a18:	80 e0       	ldi	r24, 0x00	; 0
     a1a:	1f 91       	pop	r17
     a1c:	0f 91       	pop	r16
     a1e:	ff 90       	pop	r15
     a20:	08 95       	ret

00000a22 <SPI_KB00_Receive>:
     a22:	8f ef       	ldi	r24, 0xFF	; 255
     a24:	8f b9       	out	0x0f, r24	; 15
     a26:	0c 94 82 0e 	jmp	0x1d04	; 0x1d04 <SPI_Receive>
     a2a:	08 95       	ret

00000a2c <ASA_KB00_get>:
     a2c:	df 92       	push	r13
     a2e:	ef 92       	push	r14
     a30:	ff 92       	push	r15
     a32:	0f 93       	push	r16
     a34:	1f 93       	push	r17
     a36:	cf 93       	push	r28
     a38:	df 93       	push	r29
     a3a:	d8 2e       	mov	r13, r24
     a3c:	16 2f       	mov	r17, r22
     a3e:	04 2f       	mov	r16, r20
     a40:	79 01       	movw	r14, r18
     a42:	8d ec       	ldi	r24, 0xCD	; 205
     a44:	60 e1       	ldi	r22, 0x10	; 16
     a46:	44 e0       	ldi	r20, 0x04	; 4
     a48:	20 e0       	ldi	r18, 0x00	; 0
     a4a:	0e 94 52 10 	call	0x20a4	; 0x20a4 <M128_DIO_set>
     a4e:	8c ec       	ldi	r24, 0xCC	; 204
     a50:	60 e1       	ldi	r22, 0x10	; 16
     a52:	44 e0       	ldi	r20, 0x04	; 4
     a54:	20 e0       	ldi	r18, 0x00	; 0
     a56:	0e 94 52 10 	call	0x20a4	; 0x20a4 <M128_DIO_set>
     a5a:	87 e0       	ldi	r24, 0x07	; 7
     a5c:	8d 15       	cp	r24, r13
     a5e:	10 f4       	brcc	.+4      	; 0xa64 <ASA_KB00_get+0x38>
     a60:	81 e0       	ldi	r24, 0x01	; 1
     a62:	a2 c0       	rjmp	.+324    	; 0xba8 <ASA_KB00_get+0x17c>
     a64:	19 3d       	cpi	r17, 0xD9	; 217
     a66:	08 f0       	brcs	.+2      	; 0xa6a <ASA_KB00_get+0x3e>
     a68:	9a c0       	rjmp	.+308    	; 0xb9e <ASA_KB00_get+0x172>
     a6a:	18 3c       	cpi	r17, 0xC8	; 200
     a6c:	08 f0       	brcs	.+2      	; 0xa70 <ASA_KB00_get+0x44>
     a6e:	76 c0       	rjmp	.+236    	; 0xb5c <ASA_KB00_get+0x130>
     a70:	14 36       	cpi	r17, 0x64	; 100
     a72:	09 f0       	breq	.+2      	; 0xa76 <ASA_KB00_get+0x4a>
     a74:	94 c0       	rjmp	.+296    	; 0xb9e <ASA_KB00_get+0x172>
     a76:	01 30       	cpi	r16, 0x01	; 1
     a78:	09 f0       	breq	.+2      	; 0xa7c <ASA_KB00_get+0x50>
     a7a:	93 c0       	rjmp	.+294    	; 0xba2 <ASA_KB00_get+0x176>
     a7c:	87 ee       	ldi	r24, 0xE7	; 231
     a7e:	87 bb       	out	0x17, r24	; 23
     a80:	83 e5       	ldi	r24, 0x53	; 83
     a82:	8d b9       	out	0x0d, r24	; 13
     a84:	8d 2d       	mov	r24, r13
     a86:	0e 94 5c 0e 	call	0x1cb8	; 0x1cb8 <ASA_ID_set>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     a8a:	80 e0       	ldi	r24, 0x00	; 0
     a8c:	9c e6       	ldi	r25, 0x6C	; 108
     a8e:	01 97       	sbiw	r24, 0x01	; 1
     a90:	f1 f7       	brne	.-4      	; 0xa8e <ASA_KB00_get+0x62>
     a92:	c7 df       	rcall	.-114    	; 0xa22 <SPI_KB00_Receive>
     a94:	08 2f       	mov	r16, r24
     a96:	c5 df       	rcall	.-118    	; 0xa22 <SPI_KB00_Receive>
     a98:	18 2f       	mov	r17, r24
     a9a:	80 e0       	ldi	r24, 0x00	; 0
     a9c:	0e 94 5c 0e 	call	0x1cb8	; 0x1cb8 <ASA_ID_set>
     aa0:	01 17       	cp	r16, r17
     aa2:	09 f0       	breq	.+2      	; 0xaa6 <ASA_KB00_get+0x7a>
     aa4:	56 c0       	rjmp	.+172    	; 0xb52 <ASA_KB00_get+0x126>
     aa6:	00 23       	and	r16, r16
     aa8:	09 f4       	brne	.+2      	; 0xaac <ASA_KB00_get+0x80>
     aaa:	53 c0       	rjmp	.+166    	; 0xb52 <ASA_KB00_get+0x126>
     aac:	ad 2d       	mov	r26, r13
     aae:	b0 e0       	ldi	r27, 0x00	; 0
     ab0:	fd 01       	movw	r30, r26
     ab2:	14 e0       	ldi	r17, 0x04	; 4
     ab4:	ee 0f       	add	r30, r30
     ab6:	ff 1f       	adc	r31, r31
     ab8:	1a 95       	dec	r17
     aba:	e1 f7       	brne	.-8      	; 0xab4 <ASA_KB00_get+0x88>
     abc:	ea 0f       	add	r30, r26
     abe:	fb 1f       	adc	r31, r27
     ac0:	ef 5c       	subi	r30, 0xCF	; 207
     ac2:	fd 4f       	sbci	r31, 0xFD	; 253
     ac4:	80 81       	ld	r24, Z
     ac6:	88 23       	and	r24, r24
     ac8:	21 f4       	brne	.+8      	; 0xad2 <ASA_KB00_get+0xa6>
     aca:	01 50       	subi	r16, 0x01	; 1
     acc:	f7 01       	movw	r30, r14
     ace:	00 83       	st	Z, r16
     ad0:	0f 5f       	subi	r16, 0xFF	; 255
     ad2:	ed 01       	movw	r28, r26
     ad4:	74 e0       	ldi	r23, 0x04	; 4
     ad6:	cc 0f       	add	r28, r28
     ad8:	dd 1f       	adc	r29, r29
     ada:	7a 95       	dec	r23
     adc:	e1 f7       	brne	.-8      	; 0xad6 <ASA_KB00_get+0xaa>
     ade:	ca 0f       	add	r28, r26
     ae0:	db 1f       	adc	r29, r27
     ae2:	cf 5c       	subi	r28, 0xCF	; 207
     ae4:	dd 4f       	sbci	r29, 0xFD	; 253
     ae6:	88 81       	ld	r24, Y
     ae8:	81 30       	cpi	r24, 0x01	; 1
     aea:	09 f0       	breq	.+2      	; 0xaee <ASA_KB00_get+0xc2>
     aec:	5c c0       	rjmp	.+184    	; 0xba6 <ASA_KB00_get+0x17a>
     aee:	01 30       	cpi	r16, 0x01	; 1
     af0:	19 f4       	brne	.+6      	; 0xaf8 <ASA_KB00_get+0xcc>
     af2:	f7 01       	movw	r30, r14
     af4:	10 82       	st	Z, r1
     af6:	57 c0       	rjmp	.+174    	; 0xba6 <ASA_KB00_get+0x17a>
     af8:	e0 2f       	mov	r30, r16
     afa:	f0 e0       	ldi	r31, 0x00	; 0
     afc:	32 97       	sbiw	r30, 0x02	; 2
     afe:	21 e0       	ldi	r18, 0x01	; 1
     b00:	30 e0       	ldi	r19, 0x00	; 0
     b02:	0e 2e       	mov	r0, r30
     b04:	02 c0       	rjmp	.+4      	; 0xb0a <ASA_KB00_get+0xde>
     b06:	22 0f       	add	r18, r18
     b08:	33 1f       	adc	r19, r19
     b0a:	0a 94       	dec	r0
     b0c:	e2 f7       	brpl	.-8      	; 0xb06 <ASA_KB00_get+0xda>
     b0e:	44 27       	eor	r20, r20
     b10:	37 fd       	sbrc	r19, 7
     b12:	40 95       	com	r20
     b14:	54 2f       	mov	r21, r20
     b16:	aa 0f       	add	r26, r26
     b18:	bb 1f       	adc	r27, r27
     b1a:	aa 0f       	add	r26, r26
     b1c:	bb 1f       	adc	r27, r27
     b1e:	ac 59       	subi	r26, 0x9C	; 156
     b20:	be 4f       	sbci	r27, 0xFE	; 254
     b22:	8d 91       	ld	r24, X+
     b24:	9d 91       	ld	r25, X+
     b26:	0d 90       	ld	r0, X+
     b28:	bc 91       	ld	r27, X
     b2a:	a0 2d       	mov	r26, r0
     b2c:	82 23       	and	r24, r18
     b2e:	93 23       	and	r25, r19
     b30:	a4 23       	and	r26, r20
     b32:	b5 23       	and	r27, r21
     b34:	82 17       	cp	r24, r18
     b36:	93 07       	cpc	r25, r19
     b38:	a4 07       	cpc	r26, r20
     b3a:	b5 07       	cpc	r27, r21
     b3c:	21 f4       	brne	.+8      	; 0xb46 <ASA_KB00_get+0x11a>
     b3e:	ec 0f       	add	r30, r28
     b40:	fd 1f       	adc	r31, r29
     b42:	81 81       	ldd	r24, Z+1	; 0x01
     b44:	03 c0       	rjmp	.+6      	; 0xb4c <ASA_KB00_get+0x120>
     b46:	e8 5e       	subi	r30, 0xE8	; 232
     b48:	fe 4f       	sbci	r31, 0xFE	; 254
     b4a:	84 91       	lpm	r24, Z
     b4c:	f7 01       	movw	r30, r14
     b4e:	80 83       	st	Z, r24
     b50:	2a c0       	rjmp	.+84     	; 0xba6 <ASA_KB00_get+0x17a>
     b52:	8f ef       	ldi	r24, 0xFF	; 255
     b54:	f7 01       	movw	r30, r14
     b56:	80 83       	st	Z, r24
     b58:	84 e0       	ldi	r24, 0x04	; 4
     b5a:	26 c0       	rjmp	.+76     	; 0xba8 <ASA_KB00_get+0x17c>
     b5c:	61 2f       	mov	r22, r17
     b5e:	70 e0       	ldi	r23, 0x00	; 0
     b60:	ab 01       	movw	r20, r22
     b62:	40 0f       	add	r20, r16
     b64:	51 1d       	adc	r21, r1
     b66:	4a 3d       	cpi	r20, 0xDA	; 218
     b68:	51 05       	cpc	r21, r1
     b6a:	dc f4       	brge	.+54     	; 0xba2 <ASA_KB00_get+0x176>
     b6c:	81 e1       	ldi	r24, 0x11	; 17
     b6e:	d8 9e       	mul	r13, r24
     b70:	d0 01       	movw	r26, r0
     b72:	11 24       	eor	r1, r1
     b74:	a6 0f       	add	r26, r22
     b76:	b7 1f       	adc	r27, r23
     b78:	a7 59       	subi	r26, 0x97	; 151
     b7a:	be 4f       	sbci	r27, 0xFE	; 254
     b7c:	20 e0       	ldi	r18, 0x00	; 0
     b7e:	30 e0       	ldi	r19, 0x00	; 0
     b80:	07 c0       	rjmp	.+14     	; 0xb90 <ASA_KB00_get+0x164>
     b82:	f7 01       	movw	r30, r14
     b84:	e2 0f       	add	r30, r18
     b86:	f3 1f       	adc	r31, r19
     b88:	8d 91       	ld	r24, X+
     b8a:	80 83       	st	Z, r24
     b8c:	2f 5f       	subi	r18, 0xFF	; 255
     b8e:	3f 4f       	sbci	r19, 0xFF	; 255
     b90:	c9 01       	movw	r24, r18
     b92:	86 0f       	add	r24, r22
     b94:	97 1f       	adc	r25, r23
     b96:	84 17       	cp	r24, r20
     b98:	95 07       	cpc	r25, r21
     b9a:	9c f3       	brlt	.-26     	; 0xb82 <ASA_KB00_get+0x156>
     b9c:	04 c0       	rjmp	.+8      	; 0xba6 <ASA_KB00_get+0x17a>
     b9e:	82 e0       	ldi	r24, 0x02	; 2
     ba0:	03 c0       	rjmp	.+6      	; 0xba8 <ASA_KB00_get+0x17c>
     ba2:	83 e0       	ldi	r24, 0x03	; 3
     ba4:	01 c0       	rjmp	.+2      	; 0xba8 <ASA_KB00_get+0x17c>
     ba6:	80 e0       	ldi	r24, 0x00	; 0
     ba8:	df 91       	pop	r29
     baa:	cf 91       	pop	r28
     bac:	1f 91       	pop	r17
     bae:	0f 91       	pop	r16
     bb0:	ff 90       	pop	r15
     bb2:	ef 90       	pop	r14
     bb4:	df 90       	pop	r13
     bb6:	08 95       	ret

00000bb8 <SPI_KB00_GetData>:
     bb8:	ef 92       	push	r14
     bba:	ff 92       	push	r15
     bbc:	0f 93       	push	r16
     bbe:	1f 93       	push	r17
     bc0:	cf 93       	push	r28
     bc2:	df 93       	push	r29
     bc4:	f8 2e       	mov	r15, r24
     bc6:	eb 01       	movw	r28, r22
     bc8:	87 ee       	ldi	r24, 0xE7	; 231
     bca:	87 bb       	out	0x17, r24	; 23
     bcc:	83 e5       	ldi	r24, 0x53	; 83
     bce:	8d b9       	out	0x0d, r24	; 13
     bd0:	8f 2d       	mov	r24, r15
     bd2:	0e 94 5c 0e 	call	0x1cb8	; 0x1cb8 <ASA_ID_set>
     bd6:	0d e3       	ldi	r16, 0x3D	; 61
     bd8:	13 e0       	ldi	r17, 0x03	; 3
     bda:	c8 01       	movw	r24, r16
     bdc:	01 97       	sbiw	r24, 0x01	; 1
     bde:	f1 f7       	brne	.-4      	; 0xbdc <SPI_KB00_GetData+0x24>
     be0:	20 df       	rcall	.-448    	; 0xa22 <SPI_KB00_Receive>
     be2:	e8 2e       	mov	r14, r24
     be4:	80 e0       	ldi	r24, 0x00	; 0
     be6:	0e 94 5c 0e 	call	0x1cb8	; 0x1cb8 <ASA_ID_set>
     bea:	c8 01       	movw	r24, r16
     bec:	01 97       	sbiw	r24, 0x01	; 1
     bee:	f1 f7       	brne	.-4      	; 0xbec <SPI_KB00_GetData+0x34>
     bf0:	8f 2d       	mov	r24, r15
     bf2:	0e 94 5c 0e 	call	0x1cb8	; 0x1cb8 <ASA_ID_set>
     bf6:	c8 01       	movw	r24, r16
     bf8:	01 97       	sbiw	r24, 0x01	; 1
     bfa:	f1 f7       	brne	.-4      	; 0xbf8 <SPI_KB00_GetData+0x40>
     bfc:	12 df       	rcall	.-476    	; 0xa22 <SPI_KB00_Receive>
     bfe:	f8 2e       	mov	r15, r24
     c00:	80 e0       	ldi	r24, 0x00	; 0
     c02:	0e 94 5c 0e 	call	0x1cb8	; 0x1cb8 <ASA_ID_set>
     c06:	c8 01       	movw	r24, r16
     c08:	01 97       	sbiw	r24, 0x01	; 1
     c0a:	f1 f7       	brne	.-4      	; 0xc08 <SPI_KB00_GetData+0x50>
     c0c:	ef 14       	cp	r14, r15
     c0e:	09 f4       	brne	.+2      	; 0xc12 <SPI_KB00_GetData+0x5a>
     c10:	e8 82       	st	Y, r14
     c12:	8f b1       	in	r24, 0x0f	; 15
     c14:	90 e0       	ldi	r25, 0x00	; 0
     c16:	8f 3f       	cpi	r24, 0xFF	; 255
     c18:	09 f4       	brne	.+2      	; 0xc1c <SPI_KB00_GetData+0x64>
     c1a:	91 e0       	ldi	r25, 0x01	; 1
     c1c:	89 2f       	mov	r24, r25
     c1e:	df 91       	pop	r29
     c20:	cf 91       	pop	r28
     c22:	1f 91       	pop	r17
     c24:	0f 91       	pop	r16
     c26:	ff 90       	pop	r15
     c28:	ef 90       	pop	r14
     c2a:	08 95       	ret

00000c2c <SPI_KB00_Transfer>:
     c2c:	0c 94 7d 0e 	jmp	0x1cfa	; 0x1cfa <SPI_Transfer>
     c30:	08 95       	ret

00000c32 <FrcStSw>:
     c32:	fc 01       	movw	r30, r24
     c34:	60 83       	st	Z, r22
     c36:	08 95       	ret

00000c38 <EnUnpk>:
     c38:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <StateMachObj>
     c3c:	ea e9       	ldi	r30, 0x9A	; 154
     c3e:	f0 e0       	ldi	r31, 0x00	; 0
     c40:	80 81       	ld	r24, Z
     c42:	80 68       	ori	r24, 0x80	; 128
     c44:	80 83       	st	Z, r24
     c46:	08 95       	ret

00000c48 <DisUnpk>:
     c48:	ea e9       	ldi	r30, 0x9A	; 154
     c4a:	f0 e0       	ldi	r31, 0x00	; 0
     c4c:	80 81       	ld	r24, Z
     c4e:	8f 77       	andi	r24, 0x7F	; 127
     c50:	80 83       	st	Z, r24
     c52:	08 95       	ret

00000c54 <timer1_set>:
     c54:	8e b5       	in	r24, 0x2e	; 46
     c56:	88 60       	ori	r24, 0x08	; 8
     c58:	8e bd       	out	0x2e, r24	; 46
     c5a:	8e b5       	in	r24, 0x2e	; 46
     c5c:	82 60       	ori	r24, 0x02	; 2
     c5e:	8e bd       	out	0x2e, r24	; 46
     c60:	87 b7       	in	r24, 0x37	; 55
     c62:	80 61       	ori	r24, 0x10	; 16
     c64:	87 bf       	out	0x37, r24	; 55
     c66:	8f e8       	ldi	r24, 0x8F	; 143
     c68:	90 e0       	ldi	r25, 0x00	; 0
     c6a:	9b bd       	out	0x2b, r25	; 43
     c6c:	8a bd       	out	0x2a, r24	; 42
     c6e:	1d bc       	out	0x2d, r1	; 45
     c70:	1c bc       	out	0x2c, r1	; 44
     c72:	08 95       	ret

00000c74 <RstTimeout>:
     c74:	8e e1       	ldi	r24, 0x1E	; 30
     c76:	80 93 da 01 	sts	0x01DA, r24	; 0x8001da <uartTimeout>
     c7a:	08 95       	ret

00000c7c <BatchBuffer_put>:
     c7c:	0f 93       	push	r16
     c7e:	1f 93       	push	r17
     c80:	cf 93       	push	r28
     c82:	df 93       	push	r29
     c84:	ec 01       	movw	r28, r24
     c86:	8a 01       	movw	r16, r20
     c88:	89 81       	ldd	r24, Y+1	; 0x01
     c8a:	70 e0       	ldi	r23, 0x00	; 0
     c8c:	e8 2f       	mov	r30, r24
     c8e:	f0 e0       	ldi	r31, 0x00	; 0
     c90:	9b 01       	movw	r18, r22
     c92:	2e 0f       	add	r18, r30
     c94:	3f 1f       	adc	r19, r31
     c96:	8a 81       	ldd	r24, Y+2	; 0x02
     c98:	90 e0       	ldi	r25, 0x00	; 0
     c9a:	82 17       	cp	r24, r18
     c9c:	93 07       	cpc	r25, r19
     c9e:	64 f1       	brlt	.+88     	; 0xcf8 <BatchBuffer_put+0x7c>
     ca0:	af 01       	movw	r20, r30
     ca2:	4c 5f       	subi	r20, 0xFC	; 252
     ca4:	5f 4f       	sbci	r21, 0xFF	; 255
     ca6:	4c 0f       	add	r20, r28
     ca8:	5d 1f       	adc	r21, r29
     caa:	20 e0       	ldi	r18, 0x00	; 0
     cac:	30 e0       	ldi	r19, 0x00	; 0
     cae:	0d c0       	rjmp	.+26     	; 0xcca <BatchBuffer_put+0x4e>
     cb0:	da 01       	movw	r26, r20
     cb2:	a2 0f       	add	r26, r18
     cb4:	b3 1f       	adc	r27, r19
     cb6:	f8 01       	movw	r30, r16
     cb8:	e2 0f       	add	r30, r18
     cba:	f3 1f       	adc	r31, r19
     cbc:	80 81       	ld	r24, Z
     cbe:	8c 93       	st	X, r24
     cc0:	88 81       	ld	r24, Y
     cc2:	8f 5f       	subi	r24, 0xFF	; 255
     cc4:	88 83       	st	Y, r24
     cc6:	2f 5f       	subi	r18, 0xFF	; 255
     cc8:	3f 4f       	sbci	r19, 0xFF	; 255
     cca:	26 17       	cp	r18, r22
     ccc:	37 07       	cpc	r19, r23
     cce:	84 f3       	brlt	.-32     	; 0xcb0 <BatchBuffer_put+0x34>
     cd0:	58 81       	ld	r21, Y
     cd2:	49 81       	ldd	r20, Y+1	; 0x01
     cd4:	24 2f       	mov	r18, r20
     cd6:	30 e0       	ldi	r19, 0x00	; 0
     cd8:	25 0f       	add	r18, r21
     cda:	31 1d       	adc	r19, r1
     cdc:	8a 81       	ldd	r24, Y+2	; 0x02
     cde:	90 e0       	ldi	r25, 0x00	; 0
     ce0:	45 0f       	add	r20, r21
     ce2:	28 17       	cp	r18, r24
     ce4:	39 07       	cpc	r19, r25
     ce6:	11 f4       	brne	.+4      	; 0xcec <BatchBuffer_put+0x70>
     ce8:	81 e0       	ldi	r24, 0x01	; 1
     cea:	01 c0       	rjmp	.+2      	; 0xcee <BatchBuffer_put+0x72>
     cec:	82 e0       	ldi	r24, 0x02	; 2
     cee:	8b 83       	std	Y+3, r24	; 0x03
     cf0:	49 83       	std	Y+1, r20	; 0x01
     cf2:	18 82       	st	Y, r1
     cf4:	80 e0       	ldi	r24, 0x00	; 0
     cf6:	02 c0       	rjmp	.+4      	; 0xcfc <BatchBuffer_put+0x80>
     cf8:	81 e0       	ldi	r24, 0x01	; 1
     cfa:	8b 83       	std	Y+3, r24	; 0x03
     cfc:	df 91       	pop	r29
     cfe:	cf 91       	pop	r28
     d00:	1f 91       	pop	r17
     d02:	0f 91       	pop	r16
     d04:	08 95       	ret

00000d06 <BatchBuffer_get>:
     d06:	0f 93       	push	r16
     d08:	1f 93       	push	r17
     d0a:	cf 93       	push	r28
     d0c:	df 93       	push	r29
     d0e:	ec 01       	movw	r28, r24
     d10:	96 2f       	mov	r25, r22
     d12:	89 81       	ldd	r24, Y+1	; 0x01
     d14:	86 17       	cp	r24, r22
     d16:	10 f4       	brcc	.+4      	; 0xd1c <BatchBuffer_get+0x16>
     d18:	81 e0       	ldi	r24, 0x01	; 1
     d1a:	42 c0       	rjmp	.+132    	; 0xda0 <BatchBuffer_get+0x9a>
     d1c:	88 81       	ld	r24, Y
     d1e:	68 2f       	mov	r22, r24
     d20:	70 e0       	ldi	r23, 0x00	; 0
     d22:	6c 5f       	subi	r22, 0xFC	; 252
     d24:	7f 4f       	sbci	r23, 0xFF	; 255
     d26:	6c 0f       	add	r22, r28
     d28:	7d 1f       	adc	r23, r29
     d2a:	20 e0       	ldi	r18, 0x00	; 0
     d2c:	30 e0       	ldi	r19, 0x00	; 0
     d2e:	09 2f       	mov	r16, r25
     d30:	10 e0       	ldi	r17, 0x00	; 0
     d32:	0d c0       	rjmp	.+26     	; 0xd4e <BatchBuffer_get+0x48>
     d34:	da 01       	movw	r26, r20
     d36:	a2 0f       	add	r26, r18
     d38:	b3 1f       	adc	r27, r19
     d3a:	fb 01       	movw	r30, r22
     d3c:	e2 0f       	add	r30, r18
     d3e:	f3 1f       	adc	r31, r19
     d40:	80 81       	ld	r24, Z
     d42:	8c 93       	st	X, r24
     d44:	88 81       	ld	r24, Y
     d46:	8f 5f       	subi	r24, 0xFF	; 255
     d48:	88 83       	st	Y, r24
     d4a:	2f 5f       	subi	r18, 0xFF	; 255
     d4c:	3f 4f       	sbci	r19, 0xFF	; 255
     d4e:	20 17       	cp	r18, r16
     d50:	31 07       	cpc	r19, r17
     d52:	84 f3       	brlt	.-32     	; 0xd34 <BatchBuffer_get+0x2e>
     d54:	88 81       	ld	r24, Y
     d56:	08 2f       	mov	r16, r24
     d58:	10 e0       	ldi	r17, 0x00	; 0
     d5a:	db 01       	movw	r26, r22
     d5c:	a0 0f       	add	r26, r16
     d5e:	b1 1f       	adc	r27, r17
     d60:	40 e0       	ldi	r20, 0x00	; 0
     d62:	50 e0       	ldi	r21, 0x00	; 0
     d64:	08 c0       	rjmp	.+16     	; 0xd76 <BatchBuffer_get+0x70>
     d66:	fb 01       	movw	r30, r22
     d68:	e4 0f       	add	r30, r20
     d6a:	f5 1f       	adc	r31, r21
     d6c:	8c 91       	ld	r24, X
     d6e:	80 83       	st	Z, r24
     d70:	1d 92       	st	X+, r1
     d72:	4f 5f       	subi	r20, 0xFF	; 255
     d74:	5f 4f       	sbci	r21, 0xFF	; 255
     d76:	e9 81       	ldd	r30, Y+1	; 0x01
     d78:	9a 01       	movw	r18, r20
     d7a:	20 0f       	add	r18, r16
     d7c:	31 1f       	adc	r19, r17
     d7e:	8e 2f       	mov	r24, r30
     d80:	90 e0       	ldi	r25, 0x00	; 0
     d82:	28 17       	cp	r18, r24
     d84:	39 07       	cpc	r19, r25
     d86:	7c f3       	brlt	.-34     	; 0xd66 <BatchBuffer_get+0x60>
     d88:	98 81       	ld	r25, Y
     d8a:	9e 17       	cp	r25, r30
     d8c:	19 f4       	brne	.+6      	; 0xd94 <BatchBuffer_get+0x8e>
     d8e:	1b 82       	std	Y+3, r1	; 0x03
     d90:	19 82       	std	Y+1, r1	; 0x01
     d92:	04 c0       	rjmp	.+8      	; 0xd9c <BatchBuffer_get+0x96>
     d94:	82 e0       	ldi	r24, 0x02	; 2
     d96:	8b 83       	std	Y+3, r24	; 0x03
     d98:	e9 1b       	sub	r30, r25
     d9a:	e9 83       	std	Y+1, r30	; 0x01
     d9c:	18 82       	st	Y, r1
     d9e:	80 e0       	ldi	r24, 0x00	; 0
     da0:	df 91       	pop	r29
     da2:	cf 91       	pop	r28
     da4:	1f 91       	pop	r17
     da6:	0f 91       	pop	r16
     da8:	08 95       	ret

00000daa <__vector_32>:
     daa:	1f 92       	push	r1
     dac:	0f 92       	push	r0
     dae:	0f b6       	in	r0, 0x3f	; 63
     db0:	0f 92       	push	r0
     db2:	0b b6       	in	r0, 0x3b	; 59
     db4:	0f 92       	push	r0
     db6:	11 24       	eor	r1, r1
     db8:	2f 93       	push	r18
     dba:	3f 93       	push	r19
     dbc:	4f 93       	push	r20
     dbe:	5f 93       	push	r21
     dc0:	6f 93       	push	r22
     dc2:	7f 93       	push	r23
     dc4:	8f 93       	push	r24
     dc6:	9f 93       	push	r25
     dc8:	af 93       	push	r26
     dca:	bf 93       	push	r27
     dcc:	ef 93       	push	r30
     dce:	ff 93       	push	r31
     dd0:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <CmdBuf+0x3>
     dd4:	88 23       	and	r24, r24
     dd6:	59 f0       	breq	.+22     	; 0xdee <__vector_32+0x44>
     dd8:	84 e1       	ldi	r24, 0x14	; 20
     dda:	91 e0       	ldi	r25, 0x01	; 1
     ddc:	61 e0       	ldi	r22, 0x01	; 1
     dde:	49 ed       	ldi	r20, 0xD9	; 217
     de0:	51 e0       	ldi	r21, 0x01	; 1
     de2:	91 df       	rcall	.-222    	; 0xd06 <BatchBuffer_get>
     de4:	80 91 d9 01 	lds	r24, 0x01D9	; 0x8001d9 <Data_get>
     de8:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
     dec:	05 c0       	rjmp	.+10     	; 0xdf8 <__vector_32+0x4e>
     dee:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     df2:	8f 7b       	andi	r24, 0xBF	; 191
     df4:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     df8:	ff 91       	pop	r31
     dfa:	ef 91       	pop	r30
     dfc:	bf 91       	pop	r27
     dfe:	af 91       	pop	r26
     e00:	9f 91       	pop	r25
     e02:	8f 91       	pop	r24
     e04:	7f 91       	pop	r23
     e06:	6f 91       	pop	r22
     e08:	5f 91       	pop	r21
     e0a:	4f 91       	pop	r20
     e0c:	3f 91       	pop	r19
     e0e:	2f 91       	pop	r18
     e10:	0f 90       	pop	r0
     e12:	0b be       	out	0x3b, r0	; 59
     e14:	0f 90       	pop	r0
     e16:	0f be       	out	0x3f, r0	; 63
     e18:	0f 90       	pop	r0
     e1a:	1f 90       	pop	r1
     e1c:	18 95       	reti

00000e1e <BatchBuffer_full>:
     e1e:	fc 01       	movw	r30, r24
     e20:	81 e0       	ldi	r24, 0x01	; 1
     e22:	83 83       	std	Z+3, r24	; 0x03
     e24:	08 95       	ret

00000e26 <BatchBuffer_clear>:
     e26:	fc 01       	movw	r30, r24
     e28:	13 82       	std	Z+3, r1	; 0x03
     e2a:	11 82       	std	Z+1, r1	; 0x01
     e2c:	10 82       	st	Z, r1
     e2e:	80 e0       	ldi	r24, 0x00	; 0
     e30:	90 e0       	ldi	r25, 0x00	; 0
     e32:	14 82       	std	Z+4, r1	; 0x04
     e34:	01 96       	adiw	r24, 0x01	; 1
     e36:	31 96       	adiw	r30, 0x01	; 1
     e38:	80 32       	cpi	r24, 0x20	; 32
     e3a:	91 05       	cpc	r25, r1
     e3c:	d1 f7       	brne	.-12     	; 0xe32 <BatchBuffer_clear+0xc>
     e3e:	08 95       	ret

00000e40 <__vector_30>:
     e40:	1f 92       	push	r1
     e42:	0f 92       	push	r0
     e44:	0f b6       	in	r0, 0x3f	; 63
     e46:	0f 92       	push	r0
     e48:	0b b6       	in	r0, 0x3b	; 59
     e4a:	0f 92       	push	r0
     e4c:	11 24       	eor	r1, r1
     e4e:	2f 93       	push	r18
     e50:	3f 93       	push	r19
     e52:	4f 93       	push	r20
     e54:	5f 93       	push	r21
     e56:	6f 93       	push	r22
     e58:	7f 93       	push	r23
     e5a:	8f 93       	push	r24
     e5c:	9f 93       	push	r25
     e5e:	af 93       	push	r26
     e60:	bf 93       	push	r27
     e62:	ef 93       	push	r30
     e64:	ff 93       	push	r31
     e66:	90 91 9c 00 	lds	r25, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
     e6a:	90 93 b2 01 	sts	0x01B2, r25	; 0x8001b2 <UnpkToolObj+0x2>
     e6e:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <StateMachObj>
     e72:	82 30       	cpi	r24, 0x02	; 2
     e74:	31 f1       	breq	.+76     	; 0xec2 <__vector_30+0x82>
     e76:	83 30       	cpi	r24, 0x03	; 3
     e78:	30 f4       	brcc	.+12     	; 0xe86 <__vector_30+0x46>
     e7a:	88 23       	and	r24, r24
     e7c:	59 f0       	breq	.+22     	; 0xe94 <__vector_30+0x54>
     e7e:	81 30       	cpi	r24, 0x01	; 1
     e80:	09 f0       	breq	.+2      	; 0xe84 <__vector_30+0x44>
     e82:	85 c0       	rjmp	.+266    	; 0xf8e <__vector_30+0x14e>
     e84:	0c c0       	rjmp	.+24     	; 0xe9e <__vector_30+0x5e>
     e86:	83 30       	cpi	r24, 0x03	; 3
     e88:	09 f4       	brne	.+2      	; 0xe8c <__vector_30+0x4c>
     e8a:	4b c0       	rjmp	.+150    	; 0xf22 <__vector_30+0xe2>
     e8c:	84 30       	cpi	r24, 0x04	; 4
     e8e:	09 f0       	breq	.+2      	; 0xe92 <__vector_30+0x52>
     e90:	7e c0       	rjmp	.+252    	; 0xf8e <__vector_30+0x14e>
     e92:	6a c0       	rjmp	.+212    	; 0xf68 <__vector_30+0x128>
     e94:	90 3f       	cpi	r25, 0xF0	; 240
     e96:	09 f0       	breq	.+2      	; 0xe9a <__vector_30+0x5a>
     e98:	63 c0       	rjmp	.+198    	; 0xf60 <__vector_30+0x120>
     e9a:	81 e0       	ldi	r24, 0x01	; 1
     e9c:	5f c0       	rjmp	.+190    	; 0xf5c <__vector_30+0x11c>
     e9e:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <PackParaObj>
     ea2:	98 17       	cp	r25, r24
     ea4:	21 f4       	brne	.+8      	; 0xeae <__vector_30+0x6e>
     ea6:	82 e0       	ldi	r24, 0x02	; 2
     ea8:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <StateMachObj>
     eac:	07 c0       	rjmp	.+14     	; 0xebc <__vector_30+0x7c>
     eae:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <StateMachObj>
     eb2:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     eb6:	8f 77       	andi	r24, 0x7F	; 127
     eb8:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     ebc:	10 92 b3 01 	sts	0x01B3, r1	; 0x8001b3 <UnpkToolObj+0x3>
     ec0:	4f c0       	rjmp	.+158    	; 0xf60 <__vector_30+0x120>
     ec2:	99 23       	and	r25, r25
     ec4:	b9 f4       	brne	.+46     	; 0xef4 <__vector_30+0xb4>
     ec6:	80 91 85 01 	lds	r24, 0x0185	; 0x800185 <PackParaObj+0x1>
     eca:	82 30       	cpi	r24, 0x02	; 2
     ecc:	39 f4       	brne	.+14     	; 0xedc <__vector_30+0x9c>
     ece:	83 e0       	ldi	r24, 0x03	; 3
     ed0:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <StateMachObj>
     ed4:	80 91 87 01 	lds	r24, 0x0187	; 0x800187 <PackParaObj+0x3>
     ed8:	90 e0       	ldi	r25, 0x00	; 0
     eda:	07 c0       	rjmp	.+14     	; 0xeea <__vector_30+0xaa>
     edc:	84 30       	cpi	r24, 0x04	; 4
     ede:	51 f4       	brne	.+20     	; 0xef4 <__vector_30+0xb4>
     ee0:	83 e0       	ldi	r24, 0x03	; 3
     ee2:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <StateMachObj>
     ee6:	81 e0       	ldi	r24, 0x01	; 1
     ee8:	90 e0       	ldi	r25, 0x00	; 0
     eea:	90 93 b1 01 	sts	0x01B1, r25	; 0x8001b1 <UnpkToolObj+0x1>
     eee:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <UnpkToolObj>
     ef2:	07 c0       	rjmp	.+14     	; 0xf02 <__vector_30+0xc2>
     ef4:	84 e0       	ldi	r24, 0x04	; 4
     ef6:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <StateMachObj>
     efa:	10 92 b1 01 	sts	0x01B1, r1	; 0x8001b1 <UnpkToolObj+0x1>
     efe:	10 92 b0 01 	sts	0x01B0, r1	; 0x8001b0 <UnpkToolObj>
     f02:	88 e3       	ldi	r24, 0x38	; 56
     f04:	91 e0       	ldi	r25, 0x01	; 1
     f06:	61 e0       	ldi	r22, 0x01	; 1
     f08:	42 eb       	ldi	r20, 0xB2	; 178
     f0a:	51 e0       	ldi	r21, 0x01	; 1
     f0c:	b7 de       	rcall	.-658    	; 0xc7c <BatchBuffer_put>
     f0e:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <UnpkToolObj+0x2>
     f12:	80 93 b7 01 	sts	0x01B7, r24	; 0x8001b7 <UnpkParaObj+0x1>
     f16:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <UnpkToolObj+0x3>
     f1a:	98 0f       	add	r25, r24
     f1c:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <UnpkToolObj+0x3>
     f20:	1f c0       	rjmp	.+62     	; 0xf60 <__vector_30+0x120>
     f22:	88 e3       	ldi	r24, 0x38	; 56
     f24:	91 e0       	ldi	r25, 0x01	; 1
     f26:	61 e0       	ldi	r22, 0x01	; 1
     f28:	42 eb       	ldi	r20, 0xB2	; 178
     f2a:	51 e0       	ldi	r21, 0x01	; 1
     f2c:	a7 de       	rcall	.-690    	; 0xc7c <BatchBuffer_put>
     f2e:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <UnpkToolObj+0x2>
     f32:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <UnpkToolObj+0x3>
     f36:	89 0f       	add	r24, r25
     f38:	80 93 b3 01 	sts	0x01B3, r24	; 0x8001b3 <UnpkToolObj+0x3>
     f3c:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <UnpkToolObj>
     f40:	90 91 b1 01 	lds	r25, 0x01B1	; 0x8001b1 <UnpkToolObj+0x1>
     f44:	01 97       	sbiw	r24, 0x01	; 1
     f46:	90 93 b1 01 	sts	0x01B1, r25	; 0x8001b1 <UnpkToolObj+0x1>
     f4a:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <UnpkToolObj>
     f4e:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <UnpkToolObj>
     f52:	90 91 b1 01 	lds	r25, 0x01B1	; 0x8001b1 <UnpkToolObj+0x1>
     f56:	89 2b       	or	r24, r25
     f58:	19 f4       	brne	.+6      	; 0xf60 <__vector_30+0x120>
     f5a:	84 e0       	ldi	r24, 0x04	; 4
     f5c:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <StateMachObj>
     f60:	8e e1       	ldi	r24, 0x1E	; 30
     f62:	80 93 da 01 	sts	0x01DA, r24	; 0x8001da <uartTimeout>
     f66:	13 c0       	rjmp	.+38     	; 0xf8e <__vector_30+0x14e>
     f68:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <UnpkToolObj+0x3>
     f6c:	98 17       	cp	r25, r24
     f6e:	21 f4       	brne	.+8      	; 0xf78 <__vector_30+0x138>
     f70:	81 e0       	ldi	r24, 0x01	; 1
     f72:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <ReBuf+0x3>
     f76:	03 c0       	rjmp	.+6      	; 0xf7e <__vector_30+0x13e>
     f78:	88 e3       	ldi	r24, 0x38	; 56
     f7a:	91 e0       	ldi	r25, 0x01	; 1
     f7c:	54 df       	rcall	.-344    	; 0xe26 <BatchBuffer_clear>
     f7e:	8e e1       	ldi	r24, 0x1E	; 30
     f80:	80 93 da 01 	sts	0x01DA, r24	; 0x8001da <uartTimeout>
     f84:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     f88:	8f 77       	andi	r24, 0x7F	; 127
     f8a:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     f8e:	ff 91       	pop	r31
     f90:	ef 91       	pop	r30
     f92:	bf 91       	pop	r27
     f94:	af 91       	pop	r26
     f96:	9f 91       	pop	r25
     f98:	8f 91       	pop	r24
     f9a:	7f 91       	pop	r23
     f9c:	6f 91       	pop	r22
     f9e:	5f 91       	pop	r21
     fa0:	4f 91       	pop	r20
     fa2:	3f 91       	pop	r19
     fa4:	2f 91       	pop	r18
     fa6:	0f 90       	pop	r0
     fa8:	0b be       	out	0x3b, r0	; 59
     faa:	0f 90       	pop	r0
     fac:	0f be       	out	0x3f, r0	; 63
     fae:	0f 90       	pop	r0
     fb0:	1f 90       	pop	r1
     fb2:	18 95       	reti

00000fb4 <__vector_12>:
     fb4:	1f 92       	push	r1
     fb6:	0f 92       	push	r0
     fb8:	0f b6       	in	r0, 0x3f	; 63
     fba:	0f 92       	push	r0
     fbc:	0b b6       	in	r0, 0x3b	; 59
     fbe:	0f 92       	push	r0
     fc0:	11 24       	eor	r1, r1
     fc2:	2f 93       	push	r18
     fc4:	3f 93       	push	r19
     fc6:	4f 93       	push	r20
     fc8:	5f 93       	push	r21
     fca:	6f 93       	push	r22
     fcc:	7f 93       	push	r23
     fce:	8f 93       	push	r24
     fd0:	9f 93       	push	r25
     fd2:	af 93       	push	r26
     fd4:	bf 93       	push	r27
     fd6:	ef 93       	push	r30
     fd8:	ff 93       	push	r31
     fda:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <StateMachObj+0x1>
     fde:	81 30       	cpi	r24, 0x01	; 1
     fe0:	79 f0       	breq	.+30     	; 0x1000 <__vector_12+0x4c>
     fe2:	81 30       	cpi	r24, 0x01	; 1
     fe4:	18 f0       	brcs	.+6      	; 0xfec <__vector_12+0x38>
     fe6:	82 30       	cpi	r24, 0x02	; 2
     fe8:	59 f5       	brne	.+86     	; 0x1040 <__vector_12+0x8c>
     fea:	24 c0       	rjmp	.+72     	; 0x1034 <__vector_12+0x80>
     fec:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <StateMachObj+0x4>
     ff0:	91 30       	cpi	r25, 0x01	; 1
     ff2:	31 f5       	brne	.+76     	; 0x1040 <__vector_12+0x8c>
     ff4:	8e e1       	ldi	r24, 0x1E	; 30
     ff6:	80 93 da 01 	sts	0x01DA, r24	; 0x8001da <uartTimeout>
     ffa:	90 93 ac 01 	sts	0x01AC, r25	; 0x8001ac <StateMachObj+0x1>
     ffe:	20 c0       	rjmp	.+64     	; 0x1040 <__vector_12+0x8c>
    1000:	80 91 da 01 	lds	r24, 0x01DA	; 0x8001da <uartTimeout>
    1004:	81 50       	subi	r24, 0x01	; 1
    1006:	80 93 da 01 	sts	0x01DA, r24	; 0x8001da <uartTimeout>
    100a:	80 91 da 01 	lds	r24, 0x01DA	; 0x8001da <uartTimeout>
    100e:	88 23       	and	r24, r24
    1010:	61 f4       	brne	.+24     	; 0x102a <__vector_12+0x76>
    1012:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1016:	8f 77       	andi	r24, 0x7F	; 127
    1018:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    101c:	88 e3       	ldi	r24, 0x38	; 56
    101e:	91 e0       	ldi	r25, 0x01	; 1
    1020:	02 df       	rcall	.-508    	; 0xe26 <BatchBuffer_clear>
    1022:	82 e0       	ldi	r24, 0x02	; 2
    1024:	80 93 ac 01 	sts	0x01AC, r24	; 0x8001ac <StateMachObj+0x1>
    1028:	0b c0       	rjmp	.+22     	; 0x1040 <__vector_12+0x8c>
    102a:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    102e:	87 fd       	sbrc	r24, 7
    1030:	07 c0       	rjmp	.+14     	; 0x1040 <__vector_12+0x8c>
    1032:	04 c0       	rjmp	.+8      	; 0x103c <__vector_12+0x88>
    1034:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <StateMachObj+0x4>
    1038:	88 23       	and	r24, r24
    103a:	11 f4       	brne	.+4      	; 0x1040 <__vector_12+0x8c>
    103c:	10 92 ac 01 	sts	0x01AC, r1	; 0x8001ac <StateMachObj+0x1>
    1040:	ff 91       	pop	r31
    1042:	ef 91       	pop	r30
    1044:	bf 91       	pop	r27
    1046:	af 91       	pop	r26
    1048:	9f 91       	pop	r25
    104a:	8f 91       	pop	r24
    104c:	7f 91       	pop	r23
    104e:	6f 91       	pop	r22
    1050:	5f 91       	pop	r21
    1052:	4f 91       	pop	r20
    1054:	3f 91       	pop	r19
    1056:	2f 91       	pop	r18
    1058:	0f 90       	pop	r0
    105a:	0b be       	out	0x3b, r0	; 59
    105c:	0f 90       	pop	r0
    105e:	0f be       	out	0x3f, r0	; 63
    1060:	0f 90       	pop	r0
    1062:	1f 90       	pop	r1
    1064:	18 95       	reti

00001066 <ASA_RS485_fgt>:
    1066:	ef 92       	push	r14
    1068:	ff 92       	push	r15
    106a:	0f 93       	push	r16
    106c:	df 93       	push	r29
    106e:	cf 93       	push	r28
    1070:	cd b7       	in	r28, 0x3d	; 61
    1072:	de b7       	in	r29, 0x3e	; 62
    1074:	28 97       	sbiw	r28, 0x08	; 8
    1076:	0f b6       	in	r0, 0x3f	; 63
    1078:	f8 94       	cli
    107a:	de bf       	out	0x3e, r29	; 62
    107c:	0f be       	out	0x3f, r0	; 63
    107e:	cd bf       	out	0x3d, r28	; 61
    1080:	6d 83       	std	Y+5, r22	; 0x05
    1082:	4e 83       	std	Y+6, r20	; 0x06
    1084:	2f 83       	std	Y+7, r18	; 0x07
    1086:	08 87       	std	Y+8, r16	; 0x08
    1088:	19 82       	std	Y+1, r1	; 0x01
    108a:	94 e0       	ldi	r25, 0x04	; 4
    108c:	9a 83       	std	Y+2, r25	; 0x02
    108e:	14 d6       	rcall	.+3112   	; 0x1cb8 <ASA_ID_set>
    1090:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    1094:	80 61       	ori	r24, 0x10	; 16
    1096:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    109a:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    109e:	80 61       	ori	r24, 0x10	; 16
    10a0:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    10a4:	8a 81       	ldd	r24, Y+2	; 0x02
    10a6:	99 81       	ldd	r25, Y+1	; 0x01
    10a8:	89 0f       	add	r24, r25
    10aa:	9e 81       	ldd	r25, Y+6	; 0x06
    10ac:	89 0f       	add	r24, r25
    10ae:	9f 81       	ldd	r25, Y+7	; 0x07
    10b0:	89 0f       	add	r24, r25
    10b2:	98 85       	ldd	r25, Y+8	; 0x08
    10b4:	89 0f       	add	r24, r25
    10b6:	89 83       	std	Y+1, r24	; 0x01
    10b8:	84 e1       	ldi	r24, 0x14	; 20
    10ba:	91 e0       	ldi	r25, 0x01	; 1
    10bc:	61 e0       	ldi	r22, 0x01	; 1
    10be:	ae 01       	movw	r20, r28
    10c0:	4b 5f       	subi	r20, 0xFB	; 251
    10c2:	5f 4f       	sbci	r21, 0xFF	; 255
    10c4:	db dd       	rcall	.-1098   	; 0xc7c <BatchBuffer_put>
    10c6:	84 e1       	ldi	r24, 0x14	; 20
    10c8:	91 e0       	ldi	r25, 0x01	; 1
    10ca:	61 e0       	ldi	r22, 0x01	; 1
    10cc:	ae 01       	movw	r20, r28
    10ce:	4e 5f       	subi	r20, 0xFE	; 254
    10d0:	5f 4f       	sbci	r21, 0xFF	; 255
    10d2:	d4 dd       	rcall	.-1112   	; 0xc7c <BatchBuffer_put>
    10d4:	84 e1       	ldi	r24, 0x14	; 20
    10d6:	91 e0       	ldi	r25, 0x01	; 1
    10d8:	61 e0       	ldi	r22, 0x01	; 1
    10da:	ae 01       	movw	r20, r28
    10dc:	4a 5f       	subi	r20, 0xFA	; 250
    10de:	5f 4f       	sbci	r21, 0xFF	; 255
    10e0:	cd dd       	rcall	.-1126   	; 0xc7c <BatchBuffer_put>
    10e2:	84 e1       	ldi	r24, 0x14	; 20
    10e4:	91 e0       	ldi	r25, 0x01	; 1
    10e6:	61 e0       	ldi	r22, 0x01	; 1
    10e8:	ae 01       	movw	r20, r28
    10ea:	49 5f       	subi	r20, 0xF9	; 249
    10ec:	5f 4f       	sbci	r21, 0xFF	; 255
    10ee:	c6 dd       	rcall	.-1140   	; 0xc7c <BatchBuffer_put>
    10f0:	84 e1       	ldi	r24, 0x14	; 20
    10f2:	91 e0       	ldi	r25, 0x01	; 1
    10f4:	61 e0       	ldi	r22, 0x01	; 1
    10f6:	ae 01       	movw	r20, r28
    10f8:	48 5f       	subi	r20, 0xF8	; 248
    10fa:	5f 4f       	sbci	r21, 0xFF	; 255
    10fc:	bf dd       	rcall	.-1154   	; 0xc7c <BatchBuffer_put>
    10fe:	84 e1       	ldi	r24, 0x14	; 20
    1100:	91 e0       	ldi	r25, 0x01	; 1
    1102:	61 e0       	ldi	r22, 0x01	; 1
    1104:	ae 01       	movw	r20, r28
    1106:	4f 5f       	subi	r20, 0xFF	; 255
    1108:	5f 4f       	sbci	r21, 0xFF	; 255
    110a:	b8 dd       	rcall	.-1168   	; 0xc7c <BatchBuffer_put>
    110c:	8d 81       	ldd	r24, Y+5	; 0x05
    110e:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <PackParaObj>
    1112:	8a 81       	ldd	r24, Y+2	; 0x02
    1114:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <PackParaObj+0x1>
    1118:	80 ef       	ldi	r24, 0xF0	; 240
    111a:	dc d5       	rcall	.+3000   	; 0x1cd4 <UART1_putchar>
    111c:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1120:	80 64       	ori	r24, 0x40	; 64
    1122:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1126:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    112a:	86 fd       	sbrc	r24, 6
    112c:	fc cf       	rjmp	.-8      	; 0x1126 <__stack+0x27>
    112e:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    1132:	8f 7e       	andi	r24, 0xEF	; 239
    1134:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    1138:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <StateMachObj>
    113c:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1140:	80 68       	ori	r24, 0x80	; 128
    1142:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1146:	81 e0       	ldi	r24, 0x01	; 1
    1148:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <StateMachObj+0x4>
    114c:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    1150:	81 30       	cpi	r24, 0x01	; 1
    1152:	21 f0       	breq	.+8      	; 0x115c <__stack+0x5d>
    1154:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <StateMachObj+0x1>
    1158:	82 30       	cpi	r24, 0x02	; 2
    115a:	c1 f7       	brne	.-16     	; 0x114c <__stack+0x4d>
    115c:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <StateMachObj+0x4>
    1160:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    1164:	81 30       	cpi	r24, 0x01	; 1
    1166:	11 f0       	breq	.+4      	; 0x116c <__stack+0x6d>
    1168:	81 e0       	ldi	r24, 0x01	; 1
    116a:	17 c0       	rjmp	.+46     	; 0x119a <__stack+0x9b>
    116c:	88 e3       	ldi	r24, 0x38	; 56
    116e:	91 e0       	ldi	r25, 0x01	; 1
    1170:	61 e0       	ldi	r22, 0x01	; 1
    1172:	ae 01       	movw	r20, r28
    1174:	4d 5f       	subi	r20, 0xFD	; 253
    1176:	5f 4f       	sbci	r21, 0xFF	; 255
    1178:	c6 dd       	rcall	.-1140   	; 0xd06 <BatchBuffer_get>
    117a:	8b 81       	ldd	r24, Y+3	; 0x03
    117c:	88 23       	and	r24, r24
    117e:	51 f4       	brne	.+20     	; 0x1194 <__stack+0x95>
    1180:	88 e3       	ldi	r24, 0x38	; 56
    1182:	91 e0       	ldi	r25, 0x01	; 1
    1184:	61 e0       	ldi	r22, 0x01	; 1
    1186:	ae 01       	movw	r20, r28
    1188:	4c 5f       	subi	r20, 0xFC	; 252
    118a:	5f 4f       	sbci	r21, 0xFF	; 255
    118c:	bc dd       	rcall	.-1160   	; 0xd06 <BatchBuffer_get>
    118e:	8c 81       	ldd	r24, Y+4	; 0x04
    1190:	f7 01       	movw	r30, r14
    1192:	80 83       	st	Z, r24
    1194:	8b 81       	ldd	r24, Y+3	; 0x03
    1196:	88 0f       	add	r24, r24
    1198:	88 0f       	add	r24, r24
    119a:	28 96       	adiw	r28, 0x08	; 8
    119c:	0f b6       	in	r0, 0x3f	; 63
    119e:	f8 94       	cli
    11a0:	de bf       	out	0x3e, r29	; 62
    11a2:	0f be       	out	0x3f, r0	; 63
    11a4:	cd bf       	out	0x3d, r28	; 61
    11a6:	cf 91       	pop	r28
    11a8:	df 91       	pop	r29
    11aa:	0f 91       	pop	r16
    11ac:	ff 90       	pop	r15
    11ae:	ef 90       	pop	r14
    11b0:	08 95       	ret

000011b2 <ASA_RS485_fpt>:
    11b2:	ef 92       	push	r14
    11b4:	0f 93       	push	r16
    11b6:	df 93       	push	r29
    11b8:	cf 93       	push	r28
    11ba:	cd b7       	in	r28, 0x3d	; 61
    11bc:	de b7       	in	r29, 0x3e	; 62
    11be:	28 97       	sbiw	r28, 0x08	; 8
    11c0:	0f b6       	in	r0, 0x3f	; 63
    11c2:	f8 94       	cli
    11c4:	de bf       	out	0x3e, r29	; 62
    11c6:	0f be       	out	0x3f, r0	; 63
    11c8:	cd bf       	out	0x3d, r28	; 61
    11ca:	6c 83       	std	Y+4, r22	; 0x04
    11cc:	4d 83       	std	Y+5, r20	; 0x05
    11ce:	2e 83       	std	Y+6, r18	; 0x06
    11d0:	0f 83       	std	Y+7, r16	; 0x07
    11d2:	e8 86       	std	Y+8, r14	; 0x08
    11d4:	19 82       	std	Y+1, r1	; 0x01
    11d6:	93 e0       	ldi	r25, 0x03	; 3
    11d8:	9a 83       	std	Y+2, r25	; 0x02
    11da:	6e d5       	rcall	.+2780   	; 0x1cb8 <ASA_ID_set>
    11dc:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    11e0:	80 61       	ori	r24, 0x10	; 16
    11e2:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    11e6:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    11ea:	80 61       	ori	r24, 0x10	; 16
    11ec:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    11f0:	8a 81       	ldd	r24, Y+2	; 0x02
    11f2:	99 81       	ldd	r25, Y+1	; 0x01
    11f4:	89 0f       	add	r24, r25
    11f6:	9d 81       	ldd	r25, Y+5	; 0x05
    11f8:	89 0f       	add	r24, r25
    11fa:	9e 81       	ldd	r25, Y+6	; 0x06
    11fc:	89 0f       	add	r24, r25
    11fe:	9f 81       	ldd	r25, Y+7	; 0x07
    1200:	89 0f       	add	r24, r25
    1202:	98 85       	ldd	r25, Y+8	; 0x08
    1204:	89 0f       	add	r24, r25
    1206:	89 83       	std	Y+1, r24	; 0x01
    1208:	84 e1       	ldi	r24, 0x14	; 20
    120a:	91 e0       	ldi	r25, 0x01	; 1
    120c:	61 e0       	ldi	r22, 0x01	; 1
    120e:	ae 01       	movw	r20, r28
    1210:	4c 5f       	subi	r20, 0xFC	; 252
    1212:	5f 4f       	sbci	r21, 0xFF	; 255
    1214:	33 dd       	rcall	.-1434   	; 0xc7c <BatchBuffer_put>
    1216:	84 e1       	ldi	r24, 0x14	; 20
    1218:	91 e0       	ldi	r25, 0x01	; 1
    121a:	61 e0       	ldi	r22, 0x01	; 1
    121c:	ae 01       	movw	r20, r28
    121e:	4e 5f       	subi	r20, 0xFE	; 254
    1220:	5f 4f       	sbci	r21, 0xFF	; 255
    1222:	2c dd       	rcall	.-1448   	; 0xc7c <BatchBuffer_put>
    1224:	84 e1       	ldi	r24, 0x14	; 20
    1226:	91 e0       	ldi	r25, 0x01	; 1
    1228:	61 e0       	ldi	r22, 0x01	; 1
    122a:	ae 01       	movw	r20, r28
    122c:	4b 5f       	subi	r20, 0xFB	; 251
    122e:	5f 4f       	sbci	r21, 0xFF	; 255
    1230:	25 dd       	rcall	.-1462   	; 0xc7c <BatchBuffer_put>
    1232:	84 e1       	ldi	r24, 0x14	; 20
    1234:	91 e0       	ldi	r25, 0x01	; 1
    1236:	61 e0       	ldi	r22, 0x01	; 1
    1238:	ae 01       	movw	r20, r28
    123a:	4a 5f       	subi	r20, 0xFA	; 250
    123c:	5f 4f       	sbci	r21, 0xFF	; 255
    123e:	1e dd       	rcall	.-1476   	; 0xc7c <BatchBuffer_put>
    1240:	84 e1       	ldi	r24, 0x14	; 20
    1242:	91 e0       	ldi	r25, 0x01	; 1
    1244:	61 e0       	ldi	r22, 0x01	; 1
    1246:	ae 01       	movw	r20, r28
    1248:	49 5f       	subi	r20, 0xF9	; 249
    124a:	5f 4f       	sbci	r21, 0xFF	; 255
    124c:	17 dd       	rcall	.-1490   	; 0xc7c <BatchBuffer_put>
    124e:	84 e1       	ldi	r24, 0x14	; 20
    1250:	91 e0       	ldi	r25, 0x01	; 1
    1252:	61 e0       	ldi	r22, 0x01	; 1
    1254:	ae 01       	movw	r20, r28
    1256:	48 5f       	subi	r20, 0xF8	; 248
    1258:	5f 4f       	sbci	r21, 0xFF	; 255
    125a:	10 dd       	rcall	.-1504   	; 0xc7c <BatchBuffer_put>
    125c:	84 e1       	ldi	r24, 0x14	; 20
    125e:	91 e0       	ldi	r25, 0x01	; 1
    1260:	61 e0       	ldi	r22, 0x01	; 1
    1262:	ae 01       	movw	r20, r28
    1264:	4f 5f       	subi	r20, 0xFF	; 255
    1266:	5f 4f       	sbci	r21, 0xFF	; 255
    1268:	09 dd       	rcall	.-1518   	; 0xc7c <BatchBuffer_put>
    126a:	8c 81       	ldd	r24, Y+4	; 0x04
    126c:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <PackParaObj>
    1270:	8a 81       	ldd	r24, Y+2	; 0x02
    1272:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <PackParaObj+0x1>
    1276:	80 ef       	ldi	r24, 0xF0	; 240
    1278:	2d d5       	rcall	.+2650   	; 0x1cd4 <UART1_putchar>
    127a:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    127e:	80 64       	ori	r24, 0x40	; 64
    1280:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1284:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1288:	86 fd       	sbrc	r24, 6
    128a:	fc cf       	rjmp	.-8      	; 0x1284 <ASA_RS485_fpt+0xd2>
    128c:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    1290:	8f 7e       	andi	r24, 0xEF	; 239
    1292:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    1296:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <StateMachObj>
    129a:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    129e:	80 68       	ori	r24, 0x80	; 128
    12a0:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    12a4:	81 e0       	ldi	r24, 0x01	; 1
    12a6:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <StateMachObj+0x4>
    12aa:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    12ae:	81 30       	cpi	r24, 0x01	; 1
    12b0:	21 f0       	breq	.+8      	; 0x12ba <ASA_RS485_fpt+0x108>
    12b2:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <StateMachObj+0x1>
    12b6:	82 30       	cpi	r24, 0x02	; 2
    12b8:	c1 f7       	brne	.-16     	; 0x12aa <ASA_RS485_fpt+0xf8>
    12ba:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <StateMachObj+0x4>
    12be:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    12c2:	81 30       	cpi	r24, 0x01	; 1
    12c4:	11 f0       	breq	.+4      	; 0x12ca <ASA_RS485_fpt+0x118>
    12c6:	81 e0       	ldi	r24, 0x01	; 1
    12c8:	0a c0       	rjmp	.+20     	; 0x12de <ASA_RS485_fpt+0x12c>
    12ca:	88 e3       	ldi	r24, 0x38	; 56
    12cc:	91 e0       	ldi	r25, 0x01	; 1
    12ce:	61 e0       	ldi	r22, 0x01	; 1
    12d0:	ae 01       	movw	r20, r28
    12d2:	4d 5f       	subi	r20, 0xFD	; 253
    12d4:	5f 4f       	sbci	r21, 0xFF	; 255
    12d6:	17 dd       	rcall	.-1490   	; 0xd06 <BatchBuffer_get>
    12d8:	8b 81       	ldd	r24, Y+3	; 0x03
    12da:	88 0f       	add	r24, r24
    12dc:	88 0f       	add	r24, r24
    12de:	28 96       	adiw	r28, 0x08	; 8
    12e0:	0f b6       	in	r0, 0x3f	; 63
    12e2:	f8 94       	cli
    12e4:	de bf       	out	0x3e, r29	; 62
    12e6:	0f be       	out	0x3f, r0	; 63
    12e8:	cd bf       	out	0x3d, r28	; 61
    12ea:	cf 91       	pop	r28
    12ec:	df 91       	pop	r29
    12ee:	0f 91       	pop	r16
    12f0:	ef 90       	pop	r14
    12f2:	08 95       	ret

000012f4 <ASA_RS485_get>:
    12f4:	cf 92       	push	r12
    12f6:	df 92       	push	r13
    12f8:	ef 92       	push	r14
    12fa:	ff 92       	push	r15
    12fc:	0f 93       	push	r16
    12fe:	1f 93       	push	r17
    1300:	df 93       	push	r29
    1302:	cf 93       	push	r28
    1304:	cd b7       	in	r28, 0x3d	; 61
    1306:	de b7       	in	r29, 0x3e	; 62
    1308:	27 97       	sbiw	r28, 0x07	; 7
    130a:	0f b6       	in	r0, 0x3f	; 63
    130c:	f8 94       	cli
    130e:	de bf       	out	0x3e, r29	; 62
    1310:	0f be       	out	0x3f, r0	; 63
    1312:	cd bf       	out	0x3d, r28	; 61
    1314:	6d 83       	std	Y+5, r22	; 0x05
    1316:	4e 83       	std	Y+6, r20	; 0x06
    1318:	2f 83       	std	Y+7, r18	; 0x07
    131a:	68 01       	movw	r12, r16
    131c:	19 82       	std	Y+1, r1	; 0x01
    131e:	92 e0       	ldi	r25, 0x02	; 2
    1320:	9a 83       	std	Y+2, r25	; 0x02
    1322:	ca d4       	rcall	.+2452   	; 0x1cb8 <ASA_ID_set>
    1324:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    1328:	80 61       	ori	r24, 0x10	; 16
    132a:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    132e:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    1332:	80 61       	ori	r24, 0x10	; 16
    1334:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    1338:	8a 81       	ldd	r24, Y+2	; 0x02
    133a:	99 81       	ldd	r25, Y+1	; 0x01
    133c:	89 0f       	add	r24, r25
    133e:	9e 81       	ldd	r25, Y+6	; 0x06
    1340:	89 0f       	add	r24, r25
    1342:	9f 81       	ldd	r25, Y+7	; 0x07
    1344:	89 0f       	add	r24, r25
    1346:	89 83       	std	Y+1, r24	; 0x01
    1348:	84 e1       	ldi	r24, 0x14	; 20
    134a:	91 e0       	ldi	r25, 0x01	; 1
    134c:	61 e0       	ldi	r22, 0x01	; 1
    134e:	ae 01       	movw	r20, r28
    1350:	4b 5f       	subi	r20, 0xFB	; 251
    1352:	5f 4f       	sbci	r21, 0xFF	; 255
    1354:	93 dc       	rcall	.-1754   	; 0xc7c <BatchBuffer_put>
    1356:	84 e1       	ldi	r24, 0x14	; 20
    1358:	91 e0       	ldi	r25, 0x01	; 1
    135a:	61 e0       	ldi	r22, 0x01	; 1
    135c:	ae 01       	movw	r20, r28
    135e:	4e 5f       	subi	r20, 0xFE	; 254
    1360:	5f 4f       	sbci	r21, 0xFF	; 255
    1362:	8c dc       	rcall	.-1768   	; 0xc7c <BatchBuffer_put>
    1364:	84 e1       	ldi	r24, 0x14	; 20
    1366:	91 e0       	ldi	r25, 0x01	; 1
    1368:	61 e0       	ldi	r22, 0x01	; 1
    136a:	ae 01       	movw	r20, r28
    136c:	4a 5f       	subi	r20, 0xFA	; 250
    136e:	5f 4f       	sbci	r21, 0xFF	; 255
    1370:	85 dc       	rcall	.-1782   	; 0xc7c <BatchBuffer_put>
    1372:	84 e1       	ldi	r24, 0x14	; 20
    1374:	91 e0       	ldi	r25, 0x01	; 1
    1376:	61 e0       	ldi	r22, 0x01	; 1
    1378:	ae 01       	movw	r20, r28
    137a:	49 5f       	subi	r20, 0xF9	; 249
    137c:	5f 4f       	sbci	r21, 0xFF	; 255
    137e:	7e dc       	rcall	.-1796   	; 0xc7c <BatchBuffer_put>
    1380:	84 e1       	ldi	r24, 0x14	; 20
    1382:	91 e0       	ldi	r25, 0x01	; 1
    1384:	61 e0       	ldi	r22, 0x01	; 1
    1386:	ae 01       	movw	r20, r28
    1388:	4f 5f       	subi	r20, 0xFF	; 255
    138a:	5f 4f       	sbci	r21, 0xFF	; 255
    138c:	77 dc       	rcall	.-1810   	; 0xc7c <BatchBuffer_put>
    138e:	8d 81       	ldd	r24, Y+5	; 0x05
    1390:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <PackParaObj>
    1394:	8a 81       	ldd	r24, Y+2	; 0x02
    1396:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <PackParaObj+0x1>
    139a:	8f 81       	ldd	r24, Y+7	; 0x07
    139c:	80 93 87 01 	sts	0x0187, r24	; 0x800187 <PackParaObj+0x3>
    13a0:	80 ef       	ldi	r24, 0xF0	; 240
    13a2:	98 d4       	rcall	.+2352   	; 0x1cd4 <UART1_putchar>
    13a4:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    13a8:	80 64       	ori	r24, 0x40	; 64
    13aa:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    13ae:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    13b2:	86 fd       	sbrc	r24, 6
    13b4:	fc cf       	rjmp	.-8      	; 0x13ae <ASA_RS485_get+0xba>
    13b6:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    13ba:	8f 7e       	andi	r24, 0xEF	; 239
    13bc:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    13c0:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <StateMachObj>
    13c4:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    13c8:	80 68       	ori	r24, 0x80	; 128
    13ca:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    13ce:	81 e0       	ldi	r24, 0x01	; 1
    13d0:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <StateMachObj+0x4>
    13d4:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    13d8:	81 30       	cpi	r24, 0x01	; 1
    13da:	21 f0       	breq	.+8      	; 0x13e4 <ASA_RS485_get+0xf0>
    13dc:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <StateMachObj+0x1>
    13e0:	82 30       	cpi	r24, 0x02	; 2
    13e2:	c1 f7       	brne	.-16     	; 0x13d4 <ASA_RS485_get+0xe0>
    13e4:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <StateMachObj+0x4>
    13e8:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    13ec:	81 30       	cpi	r24, 0x01	; 1
    13ee:	11 f0       	breq	.+4      	; 0x13f4 <ASA_RS485_get+0x100>
    13f0:	81 e0       	ldi	r24, 0x01	; 1
    13f2:	26 c0       	rjmp	.+76     	; 0x1440 <ASA_RS485_get+0x14c>
    13f4:	88 e3       	ldi	r24, 0x38	; 56
    13f6:	91 e0       	ldi	r25, 0x01	; 1
    13f8:	61 e0       	ldi	r22, 0x01	; 1
    13fa:	ae 01       	movw	r20, r28
    13fc:	4d 5f       	subi	r20, 0xFD	; 253
    13fe:	5f 4f       	sbci	r21, 0xFF	; 255
    1400:	82 dc       	rcall	.-1788   	; 0xd06 <BatchBuffer_get>
    1402:	8b 81       	ldd	r24, Y+3	; 0x03
    1404:	88 23       	and	r24, r24
    1406:	c9 f4       	brne	.+50     	; 0x143a <ASA_RS485_get+0x146>
    1408:	00 e0       	ldi	r16, 0x00	; 0
    140a:	10 e0       	ldi	r17, 0x00	; 0
    140c:	84 e0       	ldi	r24, 0x04	; 4
    140e:	e8 2e       	mov	r14, r24
    1410:	f1 2c       	mov	r15, r1
    1412:	ec 0e       	add	r14, r28
    1414:	fd 1e       	adc	r15, r29
    1416:	0c c0       	rjmp	.+24     	; 0x1430 <ASA_RS485_get+0x13c>
    1418:	88 e3       	ldi	r24, 0x38	; 56
    141a:	91 e0       	ldi	r25, 0x01	; 1
    141c:	61 e0       	ldi	r22, 0x01	; 1
    141e:	a7 01       	movw	r20, r14
    1420:	72 dc       	rcall	.-1820   	; 0xd06 <BatchBuffer_get>
    1422:	f6 01       	movw	r30, r12
    1424:	e0 0f       	add	r30, r16
    1426:	f1 1f       	adc	r31, r17
    1428:	8c 81       	ldd	r24, Y+4	; 0x04
    142a:	80 83       	st	Z, r24
    142c:	0f 5f       	subi	r16, 0xFF	; 255
    142e:	1f 4f       	sbci	r17, 0xFF	; 255
    1430:	8f 81       	ldd	r24, Y+7	; 0x07
    1432:	90 e0       	ldi	r25, 0x00	; 0
    1434:	08 17       	cp	r16, r24
    1436:	19 07       	cpc	r17, r25
    1438:	7c f3       	brlt	.-34     	; 0x1418 <ASA_RS485_get+0x124>
    143a:	8b 81       	ldd	r24, Y+3	; 0x03
    143c:	88 0f       	add	r24, r24
    143e:	88 0f       	add	r24, r24
    1440:	27 96       	adiw	r28, 0x07	; 7
    1442:	0f b6       	in	r0, 0x3f	; 63
    1444:	f8 94       	cli
    1446:	de bf       	out	0x3e, r29	; 62
    1448:	0f be       	out	0x3f, r0	; 63
    144a:	cd bf       	out	0x3d, r28	; 61
    144c:	cf 91       	pop	r28
    144e:	df 91       	pop	r29
    1450:	1f 91       	pop	r17
    1452:	0f 91       	pop	r16
    1454:	ff 90       	pop	r15
    1456:	ef 90       	pop	r14
    1458:	df 90       	pop	r13
    145a:	cf 90       	pop	r12
    145c:	08 95       	ret

0000145e <ASA_RS485_put>:
    145e:	0f 93       	push	r16
    1460:	1f 93       	push	r17
    1462:	df 93       	push	r29
    1464:	cf 93       	push	r28
    1466:	00 d0       	rcall	.+0      	; 0x1468 <ASA_RS485_put+0xa>
    1468:	00 d0       	rcall	.+0      	; 0x146a <ASA_RS485_put+0xc>
    146a:	00 d0       	rcall	.+0      	; 0x146c <ASA_RS485_put+0xe>
    146c:	cd b7       	in	r28, 0x3d	; 61
    146e:	de b7       	in	r29, 0x3e	; 62
    1470:	6c 83       	std	Y+4, r22	; 0x04
    1472:	4d 83       	std	Y+5, r20	; 0x05
    1474:	2e 83       	std	Y+6, r18	; 0x06
    1476:	19 82       	std	Y+1, r1	; 0x01
    1478:	91 e0       	ldi	r25, 0x01	; 1
    147a:	9a 83       	std	Y+2, r25	; 0x02
    147c:	1d d4       	rcall	.+2106   	; 0x1cb8 <ASA_ID_set>
    147e:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    1482:	80 61       	ori	r24, 0x10	; 16
    1484:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    1488:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    148c:	80 61       	ori	r24, 0x10	; 16
    148e:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    1492:	8a 81       	ldd	r24, Y+2	; 0x02
    1494:	99 81       	ldd	r25, Y+1	; 0x01
    1496:	89 0f       	add	r24, r25
    1498:	9d 81       	ldd	r25, Y+5	; 0x05
    149a:	89 0f       	add	r24, r25
    149c:	9e 81       	ldd	r25, Y+6	; 0x06
    149e:	89 0f       	add	r24, r25
    14a0:	89 83       	std	Y+1, r24	; 0x01
    14a2:	f8 01       	movw	r30, r16
    14a4:	98 01       	movw	r18, r16
    14a6:	29 0f       	add	r18, r25
    14a8:	31 1d       	adc	r19, r1
    14aa:	04 c0       	rjmp	.+8      	; 0x14b4 <ASA_RS485_put+0x56>
    14ac:	89 81       	ldd	r24, Y+1	; 0x01
    14ae:	91 91       	ld	r25, Z+
    14b0:	89 0f       	add	r24, r25
    14b2:	89 83       	std	Y+1, r24	; 0x01
    14b4:	e2 17       	cp	r30, r18
    14b6:	f3 07       	cpc	r31, r19
    14b8:	c9 f7       	brne	.-14     	; 0x14ac <ASA_RS485_put+0x4e>
    14ba:	84 e1       	ldi	r24, 0x14	; 20
    14bc:	91 e0       	ldi	r25, 0x01	; 1
    14be:	61 e0       	ldi	r22, 0x01	; 1
    14c0:	ae 01       	movw	r20, r28
    14c2:	4c 5f       	subi	r20, 0xFC	; 252
    14c4:	5f 4f       	sbci	r21, 0xFF	; 255
    14c6:	da db       	rcall	.-2124   	; 0xc7c <BatchBuffer_put>
    14c8:	84 e1       	ldi	r24, 0x14	; 20
    14ca:	91 e0       	ldi	r25, 0x01	; 1
    14cc:	61 e0       	ldi	r22, 0x01	; 1
    14ce:	ae 01       	movw	r20, r28
    14d0:	4e 5f       	subi	r20, 0xFE	; 254
    14d2:	5f 4f       	sbci	r21, 0xFF	; 255
    14d4:	d3 db       	rcall	.-2138   	; 0xc7c <BatchBuffer_put>
    14d6:	84 e1       	ldi	r24, 0x14	; 20
    14d8:	91 e0       	ldi	r25, 0x01	; 1
    14da:	61 e0       	ldi	r22, 0x01	; 1
    14dc:	ae 01       	movw	r20, r28
    14de:	4b 5f       	subi	r20, 0xFB	; 251
    14e0:	5f 4f       	sbci	r21, 0xFF	; 255
    14e2:	cc db       	rcall	.-2152   	; 0xc7c <BatchBuffer_put>
    14e4:	84 e1       	ldi	r24, 0x14	; 20
    14e6:	91 e0       	ldi	r25, 0x01	; 1
    14e8:	61 e0       	ldi	r22, 0x01	; 1
    14ea:	ae 01       	movw	r20, r28
    14ec:	4a 5f       	subi	r20, 0xFA	; 250
    14ee:	5f 4f       	sbci	r21, 0xFF	; 255
    14f0:	c5 db       	rcall	.-2166   	; 0xc7c <BatchBuffer_put>
    14f2:	84 e1       	ldi	r24, 0x14	; 20
    14f4:	91 e0       	ldi	r25, 0x01	; 1
    14f6:	6e 81       	ldd	r22, Y+6	; 0x06
    14f8:	a8 01       	movw	r20, r16
    14fa:	c0 db       	rcall	.-2176   	; 0xc7c <BatchBuffer_put>
    14fc:	84 e1       	ldi	r24, 0x14	; 20
    14fe:	91 e0       	ldi	r25, 0x01	; 1
    1500:	61 e0       	ldi	r22, 0x01	; 1
    1502:	ae 01       	movw	r20, r28
    1504:	4f 5f       	subi	r20, 0xFF	; 255
    1506:	5f 4f       	sbci	r21, 0xFF	; 255
    1508:	b9 db       	rcall	.-2190   	; 0xc7c <BatchBuffer_put>
    150a:	8c 81       	ldd	r24, Y+4	; 0x04
    150c:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <PackParaObj>
    1510:	8a 81       	ldd	r24, Y+2	; 0x02
    1512:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <PackParaObj+0x1>
    1516:	80 ef       	ldi	r24, 0xF0	; 240
    1518:	dd d3       	rcall	.+1978   	; 0x1cd4 <UART1_putchar>
    151a:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    151e:	80 64       	ori	r24, 0x40	; 64
    1520:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1524:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1528:	86 fd       	sbrc	r24, 6
    152a:	fc cf       	rjmp	.-8      	; 0x1524 <ASA_RS485_put+0xc6>
    152c:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    1530:	8f 7e       	andi	r24, 0xEF	; 239
    1532:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    1536:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <StateMachObj>
    153a:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    153e:	80 68       	ori	r24, 0x80	; 128
    1540:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1544:	81 e0       	ldi	r24, 0x01	; 1
    1546:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <StateMachObj+0x4>
    154a:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    154e:	81 30       	cpi	r24, 0x01	; 1
    1550:	21 f0       	breq	.+8      	; 0x155a <ASA_RS485_put+0xfc>
    1552:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <StateMachObj+0x1>
    1556:	82 30       	cpi	r24, 0x02	; 2
    1558:	c1 f7       	brne	.-16     	; 0x154a <ASA_RS485_put+0xec>
    155a:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <StateMachObj+0x4>
    155e:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    1562:	81 30       	cpi	r24, 0x01	; 1
    1564:	11 f0       	breq	.+4      	; 0x156a <ASA_RS485_put+0x10c>
    1566:	81 e0       	ldi	r24, 0x01	; 1
    1568:	0a c0       	rjmp	.+20     	; 0x157e <ASA_RS485_put+0x120>
    156a:	88 e3       	ldi	r24, 0x38	; 56
    156c:	91 e0       	ldi	r25, 0x01	; 1
    156e:	61 e0       	ldi	r22, 0x01	; 1
    1570:	ae 01       	movw	r20, r28
    1572:	4d 5f       	subi	r20, 0xFD	; 253
    1574:	5f 4f       	sbci	r21, 0xFF	; 255
    1576:	c7 db       	rcall	.-2162   	; 0xd06 <BatchBuffer_get>
    1578:	8b 81       	ldd	r24, Y+3	; 0x03
    157a:	88 0f       	add	r24, r24
    157c:	88 0f       	add	r24, r24
    157e:	26 96       	adiw	r28, 0x06	; 6
    1580:	0f b6       	in	r0, 0x3f	; 63
    1582:	f8 94       	cli
    1584:	de bf       	out	0x3e, r29	; 62
    1586:	0f be       	out	0x3f, r0	; 63
    1588:	cd bf       	out	0x3d, r28	; 61
    158a:	cf 91       	pop	r28
    158c:	df 91       	pop	r29
    158e:	1f 91       	pop	r17
    1590:	0f 91       	pop	r16
    1592:	08 95       	ret

00001594 <ASA_RS485_set>:
    1594:	ef 92       	push	r14
    1596:	0f 93       	push	r16
    1598:	df 93       	push	r29
    159a:	cf 93       	push	r28
    159c:	cd b7       	in	r28, 0x3d	; 61
    159e:	de b7       	in	r29, 0x3e	; 62
    15a0:	28 97       	sbiw	r28, 0x08	; 8
    15a2:	0f b6       	in	r0, 0x3f	; 63
    15a4:	f8 94       	cli
    15a6:	de bf       	out	0x3e, r29	; 62
    15a8:	0f be       	out	0x3f, r0	; 63
    15aa:	cd bf       	out	0x3d, r28	; 61
    15ac:	6c 83       	std	Y+4, r22	; 0x04
    15ae:	4d 83       	std	Y+5, r20	; 0x05
    15b0:	2e 83       	std	Y+6, r18	; 0x06
    15b2:	0f 83       	std	Y+7, r16	; 0x07
    15b4:	e8 86       	std	Y+8, r14	; 0x08
    15b6:	19 82       	std	Y+1, r1	; 0x01
    15b8:	1a 82       	std	Y+2, r1	; 0x02
    15ba:	7e d3       	rcall	.+1788   	; 0x1cb8 <ASA_ID_set>
    15bc:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    15c0:	80 61       	ori	r24, 0x10	; 16
    15c2:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    15c6:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    15ca:	80 61       	ori	r24, 0x10	; 16
    15cc:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    15d0:	8a 81       	ldd	r24, Y+2	; 0x02
    15d2:	99 81       	ldd	r25, Y+1	; 0x01
    15d4:	89 0f       	add	r24, r25
    15d6:	9d 81       	ldd	r25, Y+5	; 0x05
    15d8:	89 0f       	add	r24, r25
    15da:	9e 81       	ldd	r25, Y+6	; 0x06
    15dc:	89 0f       	add	r24, r25
    15de:	9f 81       	ldd	r25, Y+7	; 0x07
    15e0:	89 0f       	add	r24, r25
    15e2:	98 85       	ldd	r25, Y+8	; 0x08
    15e4:	89 0f       	add	r24, r25
    15e6:	89 83       	std	Y+1, r24	; 0x01
    15e8:	84 e1       	ldi	r24, 0x14	; 20
    15ea:	91 e0       	ldi	r25, 0x01	; 1
    15ec:	61 e0       	ldi	r22, 0x01	; 1
    15ee:	ae 01       	movw	r20, r28
    15f0:	4c 5f       	subi	r20, 0xFC	; 252
    15f2:	5f 4f       	sbci	r21, 0xFF	; 255
    15f4:	43 db       	rcall	.-2426   	; 0xc7c <BatchBuffer_put>
    15f6:	84 e1       	ldi	r24, 0x14	; 20
    15f8:	91 e0       	ldi	r25, 0x01	; 1
    15fa:	61 e0       	ldi	r22, 0x01	; 1
    15fc:	ae 01       	movw	r20, r28
    15fe:	4e 5f       	subi	r20, 0xFE	; 254
    1600:	5f 4f       	sbci	r21, 0xFF	; 255
    1602:	3c db       	rcall	.-2440   	; 0xc7c <BatchBuffer_put>
    1604:	84 e1       	ldi	r24, 0x14	; 20
    1606:	91 e0       	ldi	r25, 0x01	; 1
    1608:	61 e0       	ldi	r22, 0x01	; 1
    160a:	ae 01       	movw	r20, r28
    160c:	4b 5f       	subi	r20, 0xFB	; 251
    160e:	5f 4f       	sbci	r21, 0xFF	; 255
    1610:	35 db       	rcall	.-2454   	; 0xc7c <BatchBuffer_put>
    1612:	84 e1       	ldi	r24, 0x14	; 20
    1614:	91 e0       	ldi	r25, 0x01	; 1
    1616:	61 e0       	ldi	r22, 0x01	; 1
    1618:	ae 01       	movw	r20, r28
    161a:	4a 5f       	subi	r20, 0xFA	; 250
    161c:	5f 4f       	sbci	r21, 0xFF	; 255
    161e:	2e db       	rcall	.-2468   	; 0xc7c <BatchBuffer_put>
    1620:	84 e1       	ldi	r24, 0x14	; 20
    1622:	91 e0       	ldi	r25, 0x01	; 1
    1624:	61 e0       	ldi	r22, 0x01	; 1
    1626:	ae 01       	movw	r20, r28
    1628:	49 5f       	subi	r20, 0xF9	; 249
    162a:	5f 4f       	sbci	r21, 0xFF	; 255
    162c:	27 db       	rcall	.-2482   	; 0xc7c <BatchBuffer_put>
    162e:	84 e1       	ldi	r24, 0x14	; 20
    1630:	91 e0       	ldi	r25, 0x01	; 1
    1632:	61 e0       	ldi	r22, 0x01	; 1
    1634:	ae 01       	movw	r20, r28
    1636:	48 5f       	subi	r20, 0xF8	; 248
    1638:	5f 4f       	sbci	r21, 0xFF	; 255
    163a:	20 db       	rcall	.-2496   	; 0xc7c <BatchBuffer_put>
    163c:	84 e1       	ldi	r24, 0x14	; 20
    163e:	91 e0       	ldi	r25, 0x01	; 1
    1640:	61 e0       	ldi	r22, 0x01	; 1
    1642:	ae 01       	movw	r20, r28
    1644:	4f 5f       	subi	r20, 0xFF	; 255
    1646:	5f 4f       	sbci	r21, 0xFF	; 255
    1648:	19 db       	rcall	.-2510   	; 0xc7c <BatchBuffer_put>
    164a:	8c 81       	ldd	r24, Y+4	; 0x04
    164c:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <PackParaObj>
    1650:	8a 81       	ldd	r24, Y+2	; 0x02
    1652:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <PackParaObj+0x1>
    1656:	80 ef       	ldi	r24, 0xF0	; 240
    1658:	3d d3       	rcall	.+1658   	; 0x1cd4 <UART1_putchar>
    165a:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    165e:	80 64       	ori	r24, 0x40	; 64
    1660:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1664:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1668:	86 fd       	sbrc	r24, 6
    166a:	fc cf       	rjmp	.-8      	; 0x1664 <ASA_RS485_set+0xd0>
    166c:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    1670:	8f 7e       	andi	r24, 0xEF	; 239
    1672:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    1676:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <StateMachObj>
    167a:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    167e:	80 68       	ori	r24, 0x80	; 128
    1680:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1684:	81 e0       	ldi	r24, 0x01	; 1
    1686:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <StateMachObj+0x4>
    168a:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    168e:	81 30       	cpi	r24, 0x01	; 1
    1690:	21 f0       	breq	.+8      	; 0x169a <ASA_RS485_set+0x106>
    1692:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <StateMachObj+0x1>
    1696:	82 30       	cpi	r24, 0x02	; 2
    1698:	c1 f7       	brne	.-16     	; 0x168a <ASA_RS485_set+0xf6>
    169a:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <StateMachObj+0x4>
    169e:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    16a2:	81 30       	cpi	r24, 0x01	; 1
    16a4:	11 f0       	breq	.+4      	; 0x16aa <ASA_RS485_set+0x116>
    16a6:	81 e0       	ldi	r24, 0x01	; 1
    16a8:	0a c0       	rjmp	.+20     	; 0x16be <ASA_RS485_set+0x12a>
    16aa:	88 e3       	ldi	r24, 0x38	; 56
    16ac:	91 e0       	ldi	r25, 0x01	; 1
    16ae:	61 e0       	ldi	r22, 0x01	; 1
    16b0:	ae 01       	movw	r20, r28
    16b2:	4d 5f       	subi	r20, 0xFD	; 253
    16b4:	5f 4f       	sbci	r21, 0xFF	; 255
    16b6:	27 db       	rcall	.-2482   	; 0xd06 <BatchBuffer_get>
    16b8:	8b 81       	ldd	r24, Y+3	; 0x03
    16ba:	88 0f       	add	r24, r24
    16bc:	88 0f       	add	r24, r24
    16be:	28 96       	adiw	r28, 0x08	; 8
    16c0:	0f b6       	in	r0, 0x3f	; 63
    16c2:	f8 94       	cli
    16c4:	de bf       	out	0x3e, r29	; 62
    16c6:	0f be       	out	0x3f, r0	; 63
    16c8:	cd bf       	out	0x3d, r28	; 61
    16ca:	cf 91       	pop	r28
    16cc:	df 91       	pop	r29
    16ce:	0f 91       	pop	r16
    16d0:	ef 90       	pop	r14
    16d2:	08 95       	ret

000016d4 <ASA_UART_fgt>:
    16d4:	ef 92       	push	r14
    16d6:	ff 92       	push	r15
    16d8:	0f 93       	push	r16
    16da:	df 93       	push	r29
    16dc:	cf 93       	push	r28
    16de:	cd b7       	in	r28, 0x3d	; 61
    16e0:	de b7       	in	r29, 0x3e	; 62
    16e2:	28 97       	sbiw	r28, 0x08	; 8
    16e4:	0f b6       	in	r0, 0x3f	; 63
    16e6:	f8 94       	cli
    16e8:	de bf       	out	0x3e, r29	; 62
    16ea:	0f be       	out	0x3f, r0	; 63
    16ec:	cd bf       	out	0x3d, r28	; 61
    16ee:	6d 83       	std	Y+5, r22	; 0x05
    16f0:	4e 83       	std	Y+6, r20	; 0x06
    16f2:	2f 83       	std	Y+7, r18	; 0x07
    16f4:	08 87       	std	Y+8, r16	; 0x08
    16f6:	19 82       	std	Y+1, r1	; 0x01
    16f8:	94 e0       	ldi	r25, 0x04	; 4
    16fa:	9a 83       	std	Y+2, r25	; 0x02
    16fc:	dd d2       	rcall	.+1466   	; 0x1cb8 <ASA_ID_set>
    16fe:	8a 81       	ldd	r24, Y+2	; 0x02
    1700:	99 81       	ldd	r25, Y+1	; 0x01
    1702:	89 0f       	add	r24, r25
    1704:	9e 81       	ldd	r25, Y+6	; 0x06
    1706:	89 0f       	add	r24, r25
    1708:	9f 81       	ldd	r25, Y+7	; 0x07
    170a:	89 0f       	add	r24, r25
    170c:	98 85       	ldd	r25, Y+8	; 0x08
    170e:	89 0f       	add	r24, r25
    1710:	89 83       	std	Y+1, r24	; 0x01
    1712:	84 e1       	ldi	r24, 0x14	; 20
    1714:	91 e0       	ldi	r25, 0x01	; 1
    1716:	61 e0       	ldi	r22, 0x01	; 1
    1718:	ae 01       	movw	r20, r28
    171a:	4b 5f       	subi	r20, 0xFB	; 251
    171c:	5f 4f       	sbci	r21, 0xFF	; 255
    171e:	ae da       	rcall	.-2724   	; 0xc7c <BatchBuffer_put>
    1720:	84 e1       	ldi	r24, 0x14	; 20
    1722:	91 e0       	ldi	r25, 0x01	; 1
    1724:	61 e0       	ldi	r22, 0x01	; 1
    1726:	ae 01       	movw	r20, r28
    1728:	4e 5f       	subi	r20, 0xFE	; 254
    172a:	5f 4f       	sbci	r21, 0xFF	; 255
    172c:	a7 da       	rcall	.-2738   	; 0xc7c <BatchBuffer_put>
    172e:	84 e1       	ldi	r24, 0x14	; 20
    1730:	91 e0       	ldi	r25, 0x01	; 1
    1732:	61 e0       	ldi	r22, 0x01	; 1
    1734:	ae 01       	movw	r20, r28
    1736:	4a 5f       	subi	r20, 0xFA	; 250
    1738:	5f 4f       	sbci	r21, 0xFF	; 255
    173a:	a0 da       	rcall	.-2752   	; 0xc7c <BatchBuffer_put>
    173c:	84 e1       	ldi	r24, 0x14	; 20
    173e:	91 e0       	ldi	r25, 0x01	; 1
    1740:	61 e0       	ldi	r22, 0x01	; 1
    1742:	ae 01       	movw	r20, r28
    1744:	49 5f       	subi	r20, 0xF9	; 249
    1746:	5f 4f       	sbci	r21, 0xFF	; 255
    1748:	99 da       	rcall	.-2766   	; 0xc7c <BatchBuffer_put>
    174a:	84 e1       	ldi	r24, 0x14	; 20
    174c:	91 e0       	ldi	r25, 0x01	; 1
    174e:	61 e0       	ldi	r22, 0x01	; 1
    1750:	ae 01       	movw	r20, r28
    1752:	48 5f       	subi	r20, 0xF8	; 248
    1754:	5f 4f       	sbci	r21, 0xFF	; 255
    1756:	92 da       	rcall	.-2780   	; 0xc7c <BatchBuffer_put>
    1758:	84 e1       	ldi	r24, 0x14	; 20
    175a:	91 e0       	ldi	r25, 0x01	; 1
    175c:	61 e0       	ldi	r22, 0x01	; 1
    175e:	ae 01       	movw	r20, r28
    1760:	4f 5f       	subi	r20, 0xFF	; 255
    1762:	5f 4f       	sbci	r21, 0xFF	; 255
    1764:	8b da       	rcall	.-2794   	; 0xc7c <BatchBuffer_put>
    1766:	8d 81       	ldd	r24, Y+5	; 0x05
    1768:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <PackParaObj>
    176c:	8a 81       	ldd	r24, Y+2	; 0x02
    176e:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <PackParaObj+0x1>
    1772:	80 ef       	ldi	r24, 0xF0	; 240
    1774:	af d2       	rcall	.+1374   	; 0x1cd4 <UART1_putchar>
    1776:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    177a:	80 64       	ori	r24, 0x40	; 64
    177c:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1780:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1784:	86 fd       	sbrc	r24, 6
    1786:	fc cf       	rjmp	.-8      	; 0x1780 <ASA_UART_fgt+0xac>
    1788:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <StateMachObj>
    178c:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1790:	80 68       	ori	r24, 0x80	; 128
    1792:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1796:	81 e0       	ldi	r24, 0x01	; 1
    1798:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <StateMachObj+0x4>
    179c:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    17a0:	81 30       	cpi	r24, 0x01	; 1
    17a2:	21 f0       	breq	.+8      	; 0x17ac <ASA_UART_fgt+0xd8>
    17a4:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <StateMachObj+0x1>
    17a8:	82 30       	cpi	r24, 0x02	; 2
    17aa:	c1 f7       	brne	.-16     	; 0x179c <ASA_UART_fgt+0xc8>
    17ac:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <StateMachObj+0x4>
    17b0:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    17b4:	81 30       	cpi	r24, 0x01	; 1
    17b6:	11 f0       	breq	.+4      	; 0x17bc <ASA_UART_fgt+0xe8>
    17b8:	81 e0       	ldi	r24, 0x01	; 1
    17ba:	17 c0       	rjmp	.+46     	; 0x17ea <ASA_UART_fgt+0x116>
    17bc:	88 e3       	ldi	r24, 0x38	; 56
    17be:	91 e0       	ldi	r25, 0x01	; 1
    17c0:	61 e0       	ldi	r22, 0x01	; 1
    17c2:	ae 01       	movw	r20, r28
    17c4:	4d 5f       	subi	r20, 0xFD	; 253
    17c6:	5f 4f       	sbci	r21, 0xFF	; 255
    17c8:	9e da       	rcall	.-2756   	; 0xd06 <BatchBuffer_get>
    17ca:	8b 81       	ldd	r24, Y+3	; 0x03
    17cc:	88 23       	and	r24, r24
    17ce:	51 f4       	brne	.+20     	; 0x17e4 <ASA_UART_fgt+0x110>
    17d0:	88 e3       	ldi	r24, 0x38	; 56
    17d2:	91 e0       	ldi	r25, 0x01	; 1
    17d4:	61 e0       	ldi	r22, 0x01	; 1
    17d6:	ae 01       	movw	r20, r28
    17d8:	4c 5f       	subi	r20, 0xFC	; 252
    17da:	5f 4f       	sbci	r21, 0xFF	; 255
    17dc:	94 da       	rcall	.-2776   	; 0xd06 <BatchBuffer_get>
    17de:	8c 81       	ldd	r24, Y+4	; 0x04
    17e0:	f7 01       	movw	r30, r14
    17e2:	80 83       	st	Z, r24
    17e4:	8b 81       	ldd	r24, Y+3	; 0x03
    17e6:	88 0f       	add	r24, r24
    17e8:	88 0f       	add	r24, r24
    17ea:	28 96       	adiw	r28, 0x08	; 8
    17ec:	0f b6       	in	r0, 0x3f	; 63
    17ee:	f8 94       	cli
    17f0:	de bf       	out	0x3e, r29	; 62
    17f2:	0f be       	out	0x3f, r0	; 63
    17f4:	cd bf       	out	0x3d, r28	; 61
    17f6:	cf 91       	pop	r28
    17f8:	df 91       	pop	r29
    17fa:	0f 91       	pop	r16
    17fc:	ff 90       	pop	r15
    17fe:	ef 90       	pop	r14
    1800:	08 95       	ret

00001802 <ASA_UART_fpt>:
    1802:	ef 92       	push	r14
    1804:	0f 93       	push	r16
    1806:	df 93       	push	r29
    1808:	cf 93       	push	r28
    180a:	cd b7       	in	r28, 0x3d	; 61
    180c:	de b7       	in	r29, 0x3e	; 62
    180e:	28 97       	sbiw	r28, 0x08	; 8
    1810:	0f b6       	in	r0, 0x3f	; 63
    1812:	f8 94       	cli
    1814:	de bf       	out	0x3e, r29	; 62
    1816:	0f be       	out	0x3f, r0	; 63
    1818:	cd bf       	out	0x3d, r28	; 61
    181a:	6c 83       	std	Y+4, r22	; 0x04
    181c:	4d 83       	std	Y+5, r20	; 0x05
    181e:	2e 83       	std	Y+6, r18	; 0x06
    1820:	0f 83       	std	Y+7, r16	; 0x07
    1822:	e8 86       	std	Y+8, r14	; 0x08
    1824:	19 82       	std	Y+1, r1	; 0x01
    1826:	93 e0       	ldi	r25, 0x03	; 3
    1828:	9a 83       	std	Y+2, r25	; 0x02
    182a:	46 d2       	rcall	.+1164   	; 0x1cb8 <ASA_ID_set>
    182c:	8a 81       	ldd	r24, Y+2	; 0x02
    182e:	99 81       	ldd	r25, Y+1	; 0x01
    1830:	89 0f       	add	r24, r25
    1832:	9d 81       	ldd	r25, Y+5	; 0x05
    1834:	89 0f       	add	r24, r25
    1836:	9e 81       	ldd	r25, Y+6	; 0x06
    1838:	89 0f       	add	r24, r25
    183a:	9f 81       	ldd	r25, Y+7	; 0x07
    183c:	89 0f       	add	r24, r25
    183e:	98 85       	ldd	r25, Y+8	; 0x08
    1840:	89 0f       	add	r24, r25
    1842:	89 83       	std	Y+1, r24	; 0x01
    1844:	84 e1       	ldi	r24, 0x14	; 20
    1846:	91 e0       	ldi	r25, 0x01	; 1
    1848:	61 e0       	ldi	r22, 0x01	; 1
    184a:	ae 01       	movw	r20, r28
    184c:	4c 5f       	subi	r20, 0xFC	; 252
    184e:	5f 4f       	sbci	r21, 0xFF	; 255
    1850:	15 da       	rcall	.-3030   	; 0xc7c <BatchBuffer_put>
    1852:	84 e1       	ldi	r24, 0x14	; 20
    1854:	91 e0       	ldi	r25, 0x01	; 1
    1856:	61 e0       	ldi	r22, 0x01	; 1
    1858:	ae 01       	movw	r20, r28
    185a:	4e 5f       	subi	r20, 0xFE	; 254
    185c:	5f 4f       	sbci	r21, 0xFF	; 255
    185e:	0e da       	rcall	.-3044   	; 0xc7c <BatchBuffer_put>
    1860:	84 e1       	ldi	r24, 0x14	; 20
    1862:	91 e0       	ldi	r25, 0x01	; 1
    1864:	61 e0       	ldi	r22, 0x01	; 1
    1866:	ae 01       	movw	r20, r28
    1868:	4b 5f       	subi	r20, 0xFB	; 251
    186a:	5f 4f       	sbci	r21, 0xFF	; 255
    186c:	07 da       	rcall	.-3058   	; 0xc7c <BatchBuffer_put>
    186e:	84 e1       	ldi	r24, 0x14	; 20
    1870:	91 e0       	ldi	r25, 0x01	; 1
    1872:	61 e0       	ldi	r22, 0x01	; 1
    1874:	ae 01       	movw	r20, r28
    1876:	4a 5f       	subi	r20, 0xFA	; 250
    1878:	5f 4f       	sbci	r21, 0xFF	; 255
    187a:	00 da       	rcall	.-3072   	; 0xc7c <BatchBuffer_put>
    187c:	84 e1       	ldi	r24, 0x14	; 20
    187e:	91 e0       	ldi	r25, 0x01	; 1
    1880:	61 e0       	ldi	r22, 0x01	; 1
    1882:	ae 01       	movw	r20, r28
    1884:	49 5f       	subi	r20, 0xF9	; 249
    1886:	5f 4f       	sbci	r21, 0xFF	; 255
    1888:	f9 d9       	rcall	.-3086   	; 0xc7c <BatchBuffer_put>
    188a:	84 e1       	ldi	r24, 0x14	; 20
    188c:	91 e0       	ldi	r25, 0x01	; 1
    188e:	61 e0       	ldi	r22, 0x01	; 1
    1890:	ae 01       	movw	r20, r28
    1892:	48 5f       	subi	r20, 0xF8	; 248
    1894:	5f 4f       	sbci	r21, 0xFF	; 255
    1896:	f2 d9       	rcall	.-3100   	; 0xc7c <BatchBuffer_put>
    1898:	84 e1       	ldi	r24, 0x14	; 20
    189a:	91 e0       	ldi	r25, 0x01	; 1
    189c:	61 e0       	ldi	r22, 0x01	; 1
    189e:	ae 01       	movw	r20, r28
    18a0:	4f 5f       	subi	r20, 0xFF	; 255
    18a2:	5f 4f       	sbci	r21, 0xFF	; 255
    18a4:	eb d9       	rcall	.-3114   	; 0xc7c <BatchBuffer_put>
    18a6:	8c 81       	ldd	r24, Y+4	; 0x04
    18a8:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <PackParaObj>
    18ac:	8a 81       	ldd	r24, Y+2	; 0x02
    18ae:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <PackParaObj+0x1>
    18b2:	80 ef       	ldi	r24, 0xF0	; 240
    18b4:	0f d2       	rcall	.+1054   	; 0x1cd4 <UART1_putchar>
    18b6:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    18ba:	80 64       	ori	r24, 0x40	; 64
    18bc:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    18c0:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    18c4:	86 fd       	sbrc	r24, 6
    18c6:	fc cf       	rjmp	.-8      	; 0x18c0 <ASA_UART_fpt+0xbe>
    18c8:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <StateMachObj>
    18cc:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    18d0:	80 68       	ori	r24, 0x80	; 128
    18d2:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    18d6:	81 e0       	ldi	r24, 0x01	; 1
    18d8:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <StateMachObj+0x4>
    18dc:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    18e0:	81 30       	cpi	r24, 0x01	; 1
    18e2:	21 f0       	breq	.+8      	; 0x18ec <ASA_UART_fpt+0xea>
    18e4:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <StateMachObj+0x1>
    18e8:	82 30       	cpi	r24, 0x02	; 2
    18ea:	c1 f7       	brne	.-16     	; 0x18dc <ASA_UART_fpt+0xda>
    18ec:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <StateMachObj+0x4>
    18f0:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    18f4:	81 30       	cpi	r24, 0x01	; 1
    18f6:	11 f0       	breq	.+4      	; 0x18fc <ASA_UART_fpt+0xfa>
    18f8:	81 e0       	ldi	r24, 0x01	; 1
    18fa:	0a c0       	rjmp	.+20     	; 0x1910 <ASA_UART_fpt+0x10e>
    18fc:	88 e3       	ldi	r24, 0x38	; 56
    18fe:	91 e0       	ldi	r25, 0x01	; 1
    1900:	61 e0       	ldi	r22, 0x01	; 1
    1902:	ae 01       	movw	r20, r28
    1904:	4d 5f       	subi	r20, 0xFD	; 253
    1906:	5f 4f       	sbci	r21, 0xFF	; 255
    1908:	fe d9       	rcall	.-3076   	; 0xd06 <BatchBuffer_get>
    190a:	8b 81       	ldd	r24, Y+3	; 0x03
    190c:	88 0f       	add	r24, r24
    190e:	88 0f       	add	r24, r24
    1910:	28 96       	adiw	r28, 0x08	; 8
    1912:	0f b6       	in	r0, 0x3f	; 63
    1914:	f8 94       	cli
    1916:	de bf       	out	0x3e, r29	; 62
    1918:	0f be       	out	0x3f, r0	; 63
    191a:	cd bf       	out	0x3d, r28	; 61
    191c:	cf 91       	pop	r28
    191e:	df 91       	pop	r29
    1920:	0f 91       	pop	r16
    1922:	ef 90       	pop	r14
    1924:	08 95       	ret

00001926 <ASA_UART_get>:
    1926:	cf 92       	push	r12
    1928:	df 92       	push	r13
    192a:	ef 92       	push	r14
    192c:	ff 92       	push	r15
    192e:	0f 93       	push	r16
    1930:	1f 93       	push	r17
    1932:	df 93       	push	r29
    1934:	cf 93       	push	r28
    1936:	cd b7       	in	r28, 0x3d	; 61
    1938:	de b7       	in	r29, 0x3e	; 62
    193a:	27 97       	sbiw	r28, 0x07	; 7
    193c:	0f b6       	in	r0, 0x3f	; 63
    193e:	f8 94       	cli
    1940:	de bf       	out	0x3e, r29	; 62
    1942:	0f be       	out	0x3f, r0	; 63
    1944:	cd bf       	out	0x3d, r28	; 61
    1946:	6d 83       	std	Y+5, r22	; 0x05
    1948:	4e 83       	std	Y+6, r20	; 0x06
    194a:	2f 83       	std	Y+7, r18	; 0x07
    194c:	68 01       	movw	r12, r16
    194e:	19 82       	std	Y+1, r1	; 0x01
    1950:	92 e0       	ldi	r25, 0x02	; 2
    1952:	9a 83       	std	Y+2, r25	; 0x02
    1954:	b1 d1       	rcall	.+866    	; 0x1cb8 <ASA_ID_set>
    1956:	8a 81       	ldd	r24, Y+2	; 0x02
    1958:	99 81       	ldd	r25, Y+1	; 0x01
    195a:	89 0f       	add	r24, r25
    195c:	9e 81       	ldd	r25, Y+6	; 0x06
    195e:	89 0f       	add	r24, r25
    1960:	9f 81       	ldd	r25, Y+7	; 0x07
    1962:	89 0f       	add	r24, r25
    1964:	89 83       	std	Y+1, r24	; 0x01
    1966:	84 e1       	ldi	r24, 0x14	; 20
    1968:	91 e0       	ldi	r25, 0x01	; 1
    196a:	61 e0       	ldi	r22, 0x01	; 1
    196c:	ae 01       	movw	r20, r28
    196e:	4b 5f       	subi	r20, 0xFB	; 251
    1970:	5f 4f       	sbci	r21, 0xFF	; 255
    1972:	84 d9       	rcall	.-3320   	; 0xc7c <BatchBuffer_put>
    1974:	84 e1       	ldi	r24, 0x14	; 20
    1976:	91 e0       	ldi	r25, 0x01	; 1
    1978:	61 e0       	ldi	r22, 0x01	; 1
    197a:	ae 01       	movw	r20, r28
    197c:	4e 5f       	subi	r20, 0xFE	; 254
    197e:	5f 4f       	sbci	r21, 0xFF	; 255
    1980:	7d d9       	rcall	.-3334   	; 0xc7c <BatchBuffer_put>
    1982:	84 e1       	ldi	r24, 0x14	; 20
    1984:	91 e0       	ldi	r25, 0x01	; 1
    1986:	61 e0       	ldi	r22, 0x01	; 1
    1988:	ae 01       	movw	r20, r28
    198a:	4a 5f       	subi	r20, 0xFA	; 250
    198c:	5f 4f       	sbci	r21, 0xFF	; 255
    198e:	76 d9       	rcall	.-3348   	; 0xc7c <BatchBuffer_put>
    1990:	84 e1       	ldi	r24, 0x14	; 20
    1992:	91 e0       	ldi	r25, 0x01	; 1
    1994:	61 e0       	ldi	r22, 0x01	; 1
    1996:	ae 01       	movw	r20, r28
    1998:	49 5f       	subi	r20, 0xF9	; 249
    199a:	5f 4f       	sbci	r21, 0xFF	; 255
    199c:	6f d9       	rcall	.-3362   	; 0xc7c <BatchBuffer_put>
    199e:	84 e1       	ldi	r24, 0x14	; 20
    19a0:	91 e0       	ldi	r25, 0x01	; 1
    19a2:	61 e0       	ldi	r22, 0x01	; 1
    19a4:	ae 01       	movw	r20, r28
    19a6:	4f 5f       	subi	r20, 0xFF	; 255
    19a8:	5f 4f       	sbci	r21, 0xFF	; 255
    19aa:	68 d9       	rcall	.-3376   	; 0xc7c <BatchBuffer_put>
    19ac:	8d 81       	ldd	r24, Y+5	; 0x05
    19ae:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <PackParaObj>
    19b2:	8a 81       	ldd	r24, Y+2	; 0x02
    19b4:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <PackParaObj+0x1>
    19b8:	8f 81       	ldd	r24, Y+7	; 0x07
    19ba:	80 93 87 01 	sts	0x0187, r24	; 0x800187 <PackParaObj+0x3>
    19be:	80 ef       	ldi	r24, 0xF0	; 240
    19c0:	89 d1       	rcall	.+786    	; 0x1cd4 <UART1_putchar>
    19c2:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    19c6:	80 64       	ori	r24, 0x40	; 64
    19c8:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    19cc:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    19d0:	86 fd       	sbrc	r24, 6
    19d2:	fc cf       	rjmp	.-8      	; 0x19cc <ASA_UART_get+0xa6>
    19d4:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <StateMachObj>
    19d8:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    19dc:	80 68       	ori	r24, 0x80	; 128
    19de:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    19e2:	81 e0       	ldi	r24, 0x01	; 1
    19e4:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <StateMachObj+0x4>
    19e8:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    19ec:	81 30       	cpi	r24, 0x01	; 1
    19ee:	21 f0       	breq	.+8      	; 0x19f8 <ASA_UART_get+0xd2>
    19f0:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <StateMachObj+0x1>
    19f4:	82 30       	cpi	r24, 0x02	; 2
    19f6:	c1 f7       	brne	.-16     	; 0x19e8 <ASA_UART_get+0xc2>
    19f8:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <StateMachObj+0x4>
    19fc:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    1a00:	81 30       	cpi	r24, 0x01	; 1
    1a02:	11 f0       	breq	.+4      	; 0x1a08 <ASA_UART_get+0xe2>
    1a04:	81 e0       	ldi	r24, 0x01	; 1
    1a06:	26 c0       	rjmp	.+76     	; 0x1a54 <ASA_UART_get+0x12e>
    1a08:	88 e3       	ldi	r24, 0x38	; 56
    1a0a:	91 e0       	ldi	r25, 0x01	; 1
    1a0c:	61 e0       	ldi	r22, 0x01	; 1
    1a0e:	ae 01       	movw	r20, r28
    1a10:	4d 5f       	subi	r20, 0xFD	; 253
    1a12:	5f 4f       	sbci	r21, 0xFF	; 255
    1a14:	78 d9       	rcall	.-3344   	; 0xd06 <BatchBuffer_get>
    1a16:	8b 81       	ldd	r24, Y+3	; 0x03
    1a18:	88 23       	and	r24, r24
    1a1a:	c9 f4       	brne	.+50     	; 0x1a4e <ASA_UART_get+0x128>
    1a1c:	00 e0       	ldi	r16, 0x00	; 0
    1a1e:	10 e0       	ldi	r17, 0x00	; 0
    1a20:	94 e0       	ldi	r25, 0x04	; 4
    1a22:	e9 2e       	mov	r14, r25
    1a24:	f1 2c       	mov	r15, r1
    1a26:	ec 0e       	add	r14, r28
    1a28:	fd 1e       	adc	r15, r29
    1a2a:	0c c0       	rjmp	.+24     	; 0x1a44 <ASA_UART_get+0x11e>
    1a2c:	88 e3       	ldi	r24, 0x38	; 56
    1a2e:	91 e0       	ldi	r25, 0x01	; 1
    1a30:	61 e0       	ldi	r22, 0x01	; 1
    1a32:	a7 01       	movw	r20, r14
    1a34:	68 d9       	rcall	.-3376   	; 0xd06 <BatchBuffer_get>
    1a36:	f6 01       	movw	r30, r12
    1a38:	e0 0f       	add	r30, r16
    1a3a:	f1 1f       	adc	r31, r17
    1a3c:	8c 81       	ldd	r24, Y+4	; 0x04
    1a3e:	80 83       	st	Z, r24
    1a40:	0f 5f       	subi	r16, 0xFF	; 255
    1a42:	1f 4f       	sbci	r17, 0xFF	; 255
    1a44:	8f 81       	ldd	r24, Y+7	; 0x07
    1a46:	90 e0       	ldi	r25, 0x00	; 0
    1a48:	08 17       	cp	r16, r24
    1a4a:	19 07       	cpc	r17, r25
    1a4c:	7c f3       	brlt	.-34     	; 0x1a2c <ASA_UART_get+0x106>
    1a4e:	8b 81       	ldd	r24, Y+3	; 0x03
    1a50:	88 0f       	add	r24, r24
    1a52:	88 0f       	add	r24, r24
    1a54:	27 96       	adiw	r28, 0x07	; 7
    1a56:	0f b6       	in	r0, 0x3f	; 63
    1a58:	f8 94       	cli
    1a5a:	de bf       	out	0x3e, r29	; 62
    1a5c:	0f be       	out	0x3f, r0	; 63
    1a5e:	cd bf       	out	0x3d, r28	; 61
    1a60:	cf 91       	pop	r28
    1a62:	df 91       	pop	r29
    1a64:	1f 91       	pop	r17
    1a66:	0f 91       	pop	r16
    1a68:	ff 90       	pop	r15
    1a6a:	ef 90       	pop	r14
    1a6c:	df 90       	pop	r13
    1a6e:	cf 90       	pop	r12
    1a70:	08 95       	ret

00001a72 <ASA_UART_put>:
    1a72:	0f 93       	push	r16
    1a74:	1f 93       	push	r17
    1a76:	df 93       	push	r29
    1a78:	cf 93       	push	r28
    1a7a:	00 d0       	rcall	.+0      	; 0x1a7c <ASA_UART_put+0xa>
    1a7c:	00 d0       	rcall	.+0      	; 0x1a7e <ASA_UART_put+0xc>
    1a7e:	00 d0       	rcall	.+0      	; 0x1a80 <ASA_UART_put+0xe>
    1a80:	cd b7       	in	r28, 0x3d	; 61
    1a82:	de b7       	in	r29, 0x3e	; 62
    1a84:	6c 83       	std	Y+4, r22	; 0x04
    1a86:	4d 83       	std	Y+5, r20	; 0x05
    1a88:	2e 83       	std	Y+6, r18	; 0x06
    1a8a:	19 82       	std	Y+1, r1	; 0x01
    1a8c:	91 e0       	ldi	r25, 0x01	; 1
    1a8e:	9a 83       	std	Y+2, r25	; 0x02
    1a90:	13 d1       	rcall	.+550    	; 0x1cb8 <ASA_ID_set>
    1a92:	8a 81       	ldd	r24, Y+2	; 0x02
    1a94:	99 81       	ldd	r25, Y+1	; 0x01
    1a96:	89 0f       	add	r24, r25
    1a98:	9d 81       	ldd	r25, Y+5	; 0x05
    1a9a:	89 0f       	add	r24, r25
    1a9c:	9e 81       	ldd	r25, Y+6	; 0x06
    1a9e:	89 0f       	add	r24, r25
    1aa0:	89 83       	std	Y+1, r24	; 0x01
    1aa2:	f8 01       	movw	r30, r16
    1aa4:	98 01       	movw	r18, r16
    1aa6:	29 0f       	add	r18, r25
    1aa8:	31 1d       	adc	r19, r1
    1aaa:	04 c0       	rjmp	.+8      	; 0x1ab4 <ASA_UART_put+0x42>
    1aac:	89 81       	ldd	r24, Y+1	; 0x01
    1aae:	91 91       	ld	r25, Z+
    1ab0:	89 0f       	add	r24, r25
    1ab2:	89 83       	std	Y+1, r24	; 0x01
    1ab4:	e2 17       	cp	r30, r18
    1ab6:	f3 07       	cpc	r31, r19
    1ab8:	c9 f7       	brne	.-14     	; 0x1aac <ASA_UART_put+0x3a>
    1aba:	84 e1       	ldi	r24, 0x14	; 20
    1abc:	91 e0       	ldi	r25, 0x01	; 1
    1abe:	61 e0       	ldi	r22, 0x01	; 1
    1ac0:	ae 01       	movw	r20, r28
    1ac2:	4c 5f       	subi	r20, 0xFC	; 252
    1ac4:	5f 4f       	sbci	r21, 0xFF	; 255
    1ac6:	da d8       	rcall	.-3660   	; 0xc7c <BatchBuffer_put>
    1ac8:	84 e1       	ldi	r24, 0x14	; 20
    1aca:	91 e0       	ldi	r25, 0x01	; 1
    1acc:	61 e0       	ldi	r22, 0x01	; 1
    1ace:	ae 01       	movw	r20, r28
    1ad0:	4e 5f       	subi	r20, 0xFE	; 254
    1ad2:	5f 4f       	sbci	r21, 0xFF	; 255
    1ad4:	d3 d8       	rcall	.-3674   	; 0xc7c <BatchBuffer_put>
    1ad6:	84 e1       	ldi	r24, 0x14	; 20
    1ad8:	91 e0       	ldi	r25, 0x01	; 1
    1ada:	61 e0       	ldi	r22, 0x01	; 1
    1adc:	ae 01       	movw	r20, r28
    1ade:	4b 5f       	subi	r20, 0xFB	; 251
    1ae0:	5f 4f       	sbci	r21, 0xFF	; 255
    1ae2:	cc d8       	rcall	.-3688   	; 0xc7c <BatchBuffer_put>
    1ae4:	84 e1       	ldi	r24, 0x14	; 20
    1ae6:	91 e0       	ldi	r25, 0x01	; 1
    1ae8:	61 e0       	ldi	r22, 0x01	; 1
    1aea:	ae 01       	movw	r20, r28
    1aec:	4a 5f       	subi	r20, 0xFA	; 250
    1aee:	5f 4f       	sbci	r21, 0xFF	; 255
    1af0:	c5 d8       	rcall	.-3702   	; 0xc7c <BatchBuffer_put>
    1af2:	84 e1       	ldi	r24, 0x14	; 20
    1af4:	91 e0       	ldi	r25, 0x01	; 1
    1af6:	6e 81       	ldd	r22, Y+6	; 0x06
    1af8:	a8 01       	movw	r20, r16
    1afa:	c0 d8       	rcall	.-3712   	; 0xc7c <BatchBuffer_put>
    1afc:	84 e1       	ldi	r24, 0x14	; 20
    1afe:	91 e0       	ldi	r25, 0x01	; 1
    1b00:	61 e0       	ldi	r22, 0x01	; 1
    1b02:	ae 01       	movw	r20, r28
    1b04:	4f 5f       	subi	r20, 0xFF	; 255
    1b06:	5f 4f       	sbci	r21, 0xFF	; 255
    1b08:	b9 d8       	rcall	.-3726   	; 0xc7c <BatchBuffer_put>
    1b0a:	8c 81       	ldd	r24, Y+4	; 0x04
    1b0c:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <PackParaObj>
    1b10:	8a 81       	ldd	r24, Y+2	; 0x02
    1b12:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <PackParaObj+0x1>
    1b16:	80 ef       	ldi	r24, 0xF0	; 240
    1b18:	dd d0       	rcall	.+442    	; 0x1cd4 <UART1_putchar>
    1b1a:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1b1e:	80 64       	ori	r24, 0x40	; 64
    1b20:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1b24:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1b28:	86 fd       	sbrc	r24, 6
    1b2a:	fc cf       	rjmp	.-8      	; 0x1b24 <ASA_UART_put+0xb2>
    1b2c:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <StateMachObj>
    1b30:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1b34:	80 68       	ori	r24, 0x80	; 128
    1b36:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1b3a:	81 e0       	ldi	r24, 0x01	; 1
    1b3c:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <StateMachObj+0x4>
    1b40:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    1b44:	81 30       	cpi	r24, 0x01	; 1
    1b46:	21 f0       	breq	.+8      	; 0x1b50 <ASA_UART_put+0xde>
    1b48:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <StateMachObj+0x1>
    1b4c:	82 30       	cpi	r24, 0x02	; 2
    1b4e:	c1 f7       	brne	.-16     	; 0x1b40 <ASA_UART_put+0xce>
    1b50:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <StateMachObj+0x4>
    1b54:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    1b58:	81 30       	cpi	r24, 0x01	; 1
    1b5a:	11 f0       	breq	.+4      	; 0x1b60 <ASA_UART_put+0xee>
    1b5c:	81 e0       	ldi	r24, 0x01	; 1
    1b5e:	0a c0       	rjmp	.+20     	; 0x1b74 <ASA_UART_put+0x102>
    1b60:	88 e3       	ldi	r24, 0x38	; 56
    1b62:	91 e0       	ldi	r25, 0x01	; 1
    1b64:	61 e0       	ldi	r22, 0x01	; 1
    1b66:	ae 01       	movw	r20, r28
    1b68:	4d 5f       	subi	r20, 0xFD	; 253
    1b6a:	5f 4f       	sbci	r21, 0xFF	; 255
    1b6c:	cc d8       	rcall	.-3688   	; 0xd06 <BatchBuffer_get>
    1b6e:	8b 81       	ldd	r24, Y+3	; 0x03
    1b70:	88 0f       	add	r24, r24
    1b72:	88 0f       	add	r24, r24
    1b74:	26 96       	adiw	r28, 0x06	; 6
    1b76:	0f b6       	in	r0, 0x3f	; 63
    1b78:	f8 94       	cli
    1b7a:	de bf       	out	0x3e, r29	; 62
    1b7c:	0f be       	out	0x3f, r0	; 63
    1b7e:	cd bf       	out	0x3d, r28	; 61
    1b80:	cf 91       	pop	r28
    1b82:	df 91       	pop	r29
    1b84:	1f 91       	pop	r17
    1b86:	0f 91       	pop	r16
    1b88:	08 95       	ret

00001b8a <ASA_UART_set>:
    1b8a:	ef 92       	push	r14
    1b8c:	0f 93       	push	r16
    1b8e:	df 93       	push	r29
    1b90:	cf 93       	push	r28
    1b92:	cd b7       	in	r28, 0x3d	; 61
    1b94:	de b7       	in	r29, 0x3e	; 62
    1b96:	28 97       	sbiw	r28, 0x08	; 8
    1b98:	0f b6       	in	r0, 0x3f	; 63
    1b9a:	f8 94       	cli
    1b9c:	de bf       	out	0x3e, r29	; 62
    1b9e:	0f be       	out	0x3f, r0	; 63
    1ba0:	cd bf       	out	0x3d, r28	; 61
    1ba2:	6c 83       	std	Y+4, r22	; 0x04
    1ba4:	4d 83       	std	Y+5, r20	; 0x05
    1ba6:	2e 83       	std	Y+6, r18	; 0x06
    1ba8:	0f 83       	std	Y+7, r16	; 0x07
    1baa:	e8 86       	std	Y+8, r14	; 0x08
    1bac:	19 82       	std	Y+1, r1	; 0x01
    1bae:	1a 82       	std	Y+2, r1	; 0x02
    1bb0:	83 d0       	rcall	.+262    	; 0x1cb8 <ASA_ID_set>
    1bb2:	8a 81       	ldd	r24, Y+2	; 0x02
    1bb4:	99 81       	ldd	r25, Y+1	; 0x01
    1bb6:	89 0f       	add	r24, r25
    1bb8:	9d 81       	ldd	r25, Y+5	; 0x05
    1bba:	89 0f       	add	r24, r25
    1bbc:	9e 81       	ldd	r25, Y+6	; 0x06
    1bbe:	89 0f       	add	r24, r25
    1bc0:	9f 81       	ldd	r25, Y+7	; 0x07
    1bc2:	89 0f       	add	r24, r25
    1bc4:	98 85       	ldd	r25, Y+8	; 0x08
    1bc6:	89 0f       	add	r24, r25
    1bc8:	89 83       	std	Y+1, r24	; 0x01
    1bca:	84 e1       	ldi	r24, 0x14	; 20
    1bcc:	91 e0       	ldi	r25, 0x01	; 1
    1bce:	61 e0       	ldi	r22, 0x01	; 1
    1bd0:	ae 01       	movw	r20, r28
    1bd2:	4c 5f       	subi	r20, 0xFC	; 252
    1bd4:	5f 4f       	sbci	r21, 0xFF	; 255
    1bd6:	52 d8       	rcall	.-3932   	; 0xc7c <BatchBuffer_put>
    1bd8:	84 e1       	ldi	r24, 0x14	; 20
    1bda:	91 e0       	ldi	r25, 0x01	; 1
    1bdc:	61 e0       	ldi	r22, 0x01	; 1
    1bde:	ae 01       	movw	r20, r28
    1be0:	4e 5f       	subi	r20, 0xFE	; 254
    1be2:	5f 4f       	sbci	r21, 0xFF	; 255
    1be4:	4b d8       	rcall	.-3946   	; 0xc7c <BatchBuffer_put>
    1be6:	84 e1       	ldi	r24, 0x14	; 20
    1be8:	91 e0       	ldi	r25, 0x01	; 1
    1bea:	61 e0       	ldi	r22, 0x01	; 1
    1bec:	ae 01       	movw	r20, r28
    1bee:	4b 5f       	subi	r20, 0xFB	; 251
    1bf0:	5f 4f       	sbci	r21, 0xFF	; 255
    1bf2:	44 d8       	rcall	.-3960   	; 0xc7c <BatchBuffer_put>
    1bf4:	84 e1       	ldi	r24, 0x14	; 20
    1bf6:	91 e0       	ldi	r25, 0x01	; 1
    1bf8:	61 e0       	ldi	r22, 0x01	; 1
    1bfa:	ae 01       	movw	r20, r28
    1bfc:	4a 5f       	subi	r20, 0xFA	; 250
    1bfe:	5f 4f       	sbci	r21, 0xFF	; 255
    1c00:	3d d8       	rcall	.-3974   	; 0xc7c <BatchBuffer_put>
    1c02:	84 e1       	ldi	r24, 0x14	; 20
    1c04:	91 e0       	ldi	r25, 0x01	; 1
    1c06:	61 e0       	ldi	r22, 0x01	; 1
    1c08:	ae 01       	movw	r20, r28
    1c0a:	49 5f       	subi	r20, 0xF9	; 249
    1c0c:	5f 4f       	sbci	r21, 0xFF	; 255
    1c0e:	36 d8       	rcall	.-3988   	; 0xc7c <BatchBuffer_put>
    1c10:	84 e1       	ldi	r24, 0x14	; 20
    1c12:	91 e0       	ldi	r25, 0x01	; 1
    1c14:	61 e0       	ldi	r22, 0x01	; 1
    1c16:	ae 01       	movw	r20, r28
    1c18:	48 5f       	subi	r20, 0xF8	; 248
    1c1a:	5f 4f       	sbci	r21, 0xFF	; 255
    1c1c:	2f d8       	rcall	.-4002   	; 0xc7c <BatchBuffer_put>
    1c1e:	84 e1       	ldi	r24, 0x14	; 20
    1c20:	91 e0       	ldi	r25, 0x01	; 1
    1c22:	61 e0       	ldi	r22, 0x01	; 1
    1c24:	ae 01       	movw	r20, r28
    1c26:	4f 5f       	subi	r20, 0xFF	; 255
    1c28:	5f 4f       	sbci	r21, 0xFF	; 255
    1c2a:	28 d8       	rcall	.-4016   	; 0xc7c <BatchBuffer_put>
    1c2c:	8c 81       	ldd	r24, Y+4	; 0x04
    1c2e:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <PackParaObj>
    1c32:	8a 81       	ldd	r24, Y+2	; 0x02
    1c34:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <PackParaObj+0x1>
    1c38:	80 ef       	ldi	r24, 0xF0	; 240
    1c3a:	4c d0       	rcall	.+152    	; 0x1cd4 <UART1_putchar>
    1c3c:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1c40:	80 64       	ori	r24, 0x40	; 64
    1c42:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1c46:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1c4a:	86 fd       	sbrc	r24, 6
    1c4c:	fc cf       	rjmp	.-8      	; 0x1c46 <ASA_UART_set+0xbc>
    1c4e:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <StateMachObj>
    1c52:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1c56:	80 68       	ori	r24, 0x80	; 128
    1c58:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1c5c:	81 e0       	ldi	r24, 0x01	; 1
    1c5e:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <StateMachObj+0x4>
    1c62:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    1c66:	81 30       	cpi	r24, 0x01	; 1
    1c68:	21 f0       	breq	.+8      	; 0x1c72 <ASA_UART_set+0xe8>
    1c6a:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <StateMachObj+0x1>
    1c6e:	82 30       	cpi	r24, 0x02	; 2
    1c70:	c1 f7       	brne	.-16     	; 0x1c62 <ASA_UART_set+0xd8>
    1c72:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <StateMachObj+0x4>
    1c76:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ReBuf+0x3>
    1c7a:	81 30       	cpi	r24, 0x01	; 1
    1c7c:	11 f0       	breq	.+4      	; 0x1c82 <ASA_UART_set+0xf8>
    1c7e:	81 e0       	ldi	r24, 0x01	; 1
    1c80:	0a c0       	rjmp	.+20     	; 0x1c96 <ASA_UART_set+0x10c>
    1c82:	88 e3       	ldi	r24, 0x38	; 56
    1c84:	91 e0       	ldi	r25, 0x01	; 1
    1c86:	61 e0       	ldi	r22, 0x01	; 1
    1c88:	ae 01       	movw	r20, r28
    1c8a:	4d 5f       	subi	r20, 0xFD	; 253
    1c8c:	5f 4f       	sbci	r21, 0xFF	; 255
    1c8e:	3b d8       	rcall	.-3978   	; 0xd06 <BatchBuffer_get>
    1c90:	8b 81       	ldd	r24, Y+3	; 0x03
    1c92:	88 0f       	add	r24, r24
    1c94:	88 0f       	add	r24, r24
    1c96:	28 96       	adiw	r28, 0x08	; 8
    1c98:	0f b6       	in	r0, 0x3f	; 63
    1c9a:	f8 94       	cli
    1c9c:	de bf       	out	0x3e, r29	; 62
    1c9e:	0f be       	out	0x3f, r0	; 63
    1ca0:	cd bf       	out	0x3d, r28	; 61
    1ca2:	cf 91       	pop	r28
    1ca4:	df 91       	pop	r29
    1ca6:	0f 91       	pop	r16
    1ca8:	ef 90       	pop	r14
    1caa:	08 95       	ret

00001cac <ASA_ID_check>:
    1cac:	90 e0       	ldi	r25, 0x00	; 0
    1cae:	88 30       	cpi	r24, 0x08	; 8
    1cb0:	08 f0       	brcs	.+2      	; 0x1cb4 <ASA_ID_check+0x8>
    1cb2:	91 e0       	ldi	r25, 0x01	; 1
    1cb4:	89 2f       	mov	r24, r25
    1cb6:	08 95       	ret

00001cb8 <ASA_ID_set>:
    1cb8:	98 2f       	mov	r25, r24
    1cba:	88 30       	cpi	r24, 0x08	; 8
    1cbc:	10 f0       	brcs	.+4      	; 0x1cc2 <ASA_ID_set+0xa>
    1cbe:	81 e0       	ldi	r24, 0x01	; 1
    1cc0:	08 95       	ret
    1cc2:	88 b3       	in	r24, 0x18	; 24
    1cc4:	92 95       	swap	r25
    1cc6:	99 0f       	add	r25, r25
    1cc8:	90 7e       	andi	r25, 0xE0	; 224
    1cca:	8f 71       	andi	r24, 0x1F	; 31
    1ccc:	89 2b       	or	r24, r25
    1cce:	88 bb       	out	0x18, r24	; 24
    1cd0:	80 e0       	ldi	r24, 0x00	; 0
    1cd2:	08 95       	ret

00001cd4 <UART1_putchar>:
    1cd4:	98 2f       	mov	r25, r24
    1cd6:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
    1cda:	85 ff       	sbrs	r24, 5
    1cdc:	fc cf       	rjmp	.-8      	; 0x1cd6 <UART1_putchar+0x2>
    1cde:	90 93 9c 00 	sts	0x009C, r25	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
    1ce2:	83 eb       	ldi	r24, 0xB3	; 179
    1ce4:	92 e0       	ldi	r25, 0x02	; 2
    1ce6:	01 97       	sbiw	r24, 0x01	; 1
    1ce8:	f1 f7       	brne	.-4      	; 0x1ce6 <UART1_putchar+0x12>
    1cea:	08 95       	ret

00001cec <UART1_getchar>:
    1cec:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
    1cf0:	87 ff       	sbrs	r24, 7
    1cf2:	fc cf       	rjmp	.-8      	; 0x1cec <UART1_getchar>
    1cf4:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
    1cf8:	08 95       	ret

00001cfa <SPI_Transfer>:
    1cfa:	8f b9       	out	0x0f, r24	; 15
    1cfc:	77 9b       	sbis	0x0e, 7	; 14
    1cfe:	fe cf       	rjmp	.-4      	; 0x1cfc <SPI_Transfer+0x2>
    1d00:	8f b1       	in	r24, 0x0f	; 15
    1d02:	08 95       	ret

00001d04 <SPI_Receive>:
    1d04:	1f b8       	out	0x0f, r1	; 15
    1d06:	77 9b       	sbis	0x0e, 7	; 14
    1d08:	fe cf       	rjmp	.-4      	; 0x1d06 <SPI_Receive+0x2>
    1d0a:	8f b1       	in	r24, 0x0f	; 15
    1d0c:	08 95       	ret

00001d0e <ASA_putchar>:
    1d0e:	1f 93       	push	r17
    1d10:	16 2f       	mov	r17, r22
    1d12:	d2 df       	rcall	.-92     	; 0x1cb8 <ASA_ID_set>
    1d14:	8d e3       	ldi	r24, 0x3D	; 61
    1d16:	93 e0       	ldi	r25, 0x03	; 3
    1d18:	01 97       	sbiw	r24, 0x01	; 1
    1d1a:	f1 f7       	brne	.-4      	; 0x1d18 <ASA_putchar+0xa>
    1d1c:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
    1d20:	85 ff       	sbrs	r24, 5
    1d22:	fc cf       	rjmp	.-8      	; 0x1d1c <ASA_putchar+0xe>
    1d24:	10 93 9c 00 	sts	0x009C, r17	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
    1d28:	83 eb       	ldi	r24, 0xB3	; 179
    1d2a:	92 e0       	ldi	r25, 0x02	; 2
    1d2c:	01 97       	sbiw	r24, 0x01	; 1
    1d2e:	f1 f7       	brne	.-4      	; 0x1d2c <ASA_putchar+0x1e>
    1d30:	80 e0       	ldi	r24, 0x00	; 0
    1d32:	1f 91       	pop	r17
    1d34:	08 95       	ret

00001d36 <ASA_getchar>:
    1d36:	cf 93       	push	r28
    1d38:	df 93       	push	r29
    1d3a:	eb 01       	movw	r28, r22
    1d3c:	bd df       	rcall	.-134    	; 0x1cb8 <ASA_ID_set>
    1d3e:	8d e3       	ldi	r24, 0x3D	; 61
    1d40:	93 e0       	ldi	r25, 0x03	; 3
    1d42:	01 97       	sbiw	r24, 0x01	; 1
    1d44:	f1 f7       	brne	.-4      	; 0x1d42 <ASA_getchar+0xc>
    1d46:	20 e0       	ldi	r18, 0x00	; 0
    1d48:	30 e0       	ldi	r19, 0x00	; 0
    1d4a:	08 c0       	rjmp	.+16     	; 0x1d5c <ASA_getchar+0x26>
    1d4c:	2f 5f       	subi	r18, 0xFF	; 255
    1d4e:	3f 4f       	sbci	r19, 0xFF	; 255
    1d50:	8f ef       	ldi	r24, 0xFF	; 255
    1d52:	2f 3f       	cpi	r18, 0xFF	; 255
    1d54:	38 07       	cpc	r19, r24
    1d56:	11 f4       	brne	.+4      	; 0x1d5c <ASA_getchar+0x26>
    1d58:	81 e0       	ldi	r24, 0x01	; 1
    1d5a:	08 c0       	rjmp	.+16     	; 0x1d6c <ASA_getchar+0x36>
    1d5c:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
    1d60:	87 ff       	sbrs	r24, 7
    1d62:	f4 cf       	rjmp	.-24     	; 0x1d4c <ASA_getchar+0x16>
    1d64:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
    1d68:	88 83       	st	Y, r24
    1d6a:	80 e0       	ldi	r24, 0x00	; 0
    1d6c:	df 91       	pop	r29
    1d6e:	cf 91       	pop	r28
    1d70:	08 95       	ret

00001d72 <PC_putchar>:
    1d72:	5d 9b       	sbis	0x0b, 5	; 11
    1d74:	fe cf       	rjmp	.-4      	; 0x1d72 <PC_putchar>
    1d76:	8c b9       	out	0x0c, r24	; 12
    1d78:	08 95       	ret

00001d7a <PC_getchar>:
    1d7a:	5f 9b       	sbis	0x0b, 7	; 11
    1d7c:	fe cf       	rjmp	.-4      	; 0x1d7a <PC_getchar>
    1d7e:	8c b1       	in	r24, 0x0c	; 12
    1d80:	08 95       	ret

00001d82 <TWI_ERROR>:
    1d82:	84 e9       	ldi	r24, 0x94	; 148
    1d84:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1d88:	08 95       	ret

00001d8a <TWI_Start>:
    1d8a:	84 ea       	ldi	r24, 0xA4	; 164
    1d8c:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1d90:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1d94:	87 ff       	sbrs	r24, 7
    1d96:	fc cf       	rjmp	.-8      	; 0x1d90 <TWI_Start+0x6>
    1d98:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    1d9c:	88 7f       	andi	r24, 0xF8	; 248
    1d9e:	88 30       	cpi	r24, 0x08	; 8
    1da0:	11 f4       	brne	.+4      	; 0x1da6 <TWI_Start+0x1c>
    1da2:	80 e0       	ldi	r24, 0x00	; 0
    1da4:	08 95       	ret
    1da6:	84 e9       	ldi	r24, 0x94	; 148
    1da8:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1dac:	81 e0       	ldi	r24, 0x01	; 1
    1dae:	08 95       	ret

00001db0 <TWI_Stop>:
    1db0:	84 e9       	ldi	r24, 0x94	; 148
    1db2:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1db6:	08 95       	ret

00001db8 <TWI_ReStart>:
    1db8:	84 ea       	ldi	r24, 0xA4	; 164
    1dba:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1dbe:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1dc2:	87 ff       	sbrs	r24, 7
    1dc4:	fc cf       	rjmp	.-8      	; 0x1dbe <TWI_ReStart+0x6>
    1dc6:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    1dca:	88 7f       	andi	r24, 0xF8	; 248
    1dcc:	80 31       	cpi	r24, 0x10	; 16
    1dce:	11 f4       	brne	.+4      	; 0x1dd4 <TWI_ReStart+0x1c>
    1dd0:	80 e0       	ldi	r24, 0x00	; 0
    1dd2:	08 95       	ret
    1dd4:	84 e9       	ldi	r24, 0x94	; 148
    1dd6:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1dda:	82 e0       	ldi	r24, 0x02	; 2
    1ddc:	08 95       	ret

00001dde <TWI_SendSLAW>:
    1dde:	90 e0       	ldi	r25, 0x00	; 0
    1de0:	88 0f       	add	r24, r24
    1de2:	99 1f       	adc	r25, r25
    1de4:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    1de8:	84 e8       	ldi	r24, 0x84	; 132
    1dea:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1dee:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1df2:	87 ff       	sbrs	r24, 7
    1df4:	fc cf       	rjmp	.-8      	; 0x1dee <TWI_SendSLAW+0x10>
    1df6:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    1dfa:	88 7f       	andi	r24, 0xF8	; 248
    1dfc:	88 31       	cpi	r24, 0x18	; 24
    1dfe:	19 f0       	breq	.+6      	; 0x1e06 <TWI_SendSLAW+0x28>
    1e00:	84 e9       	ldi	r24, 0x94	; 148
    1e02:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1e06:	08 95       	ret

00001e08 <TWI_SendSLAR>:
    1e08:	88 0f       	add	r24, r24
    1e0a:	8f 5f       	subi	r24, 0xFF	; 255
    1e0c:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    1e10:	84 e8       	ldi	r24, 0x84	; 132
    1e12:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1e16:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1e1a:	87 ff       	sbrs	r24, 7
    1e1c:	fc cf       	rjmp	.-8      	; 0x1e16 <TWI_SendSLAR+0xe>
    1e1e:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    1e22:	88 7f       	andi	r24, 0xF8	; 248
    1e24:	80 34       	cpi	r24, 0x40	; 64
    1e26:	19 f0       	breq	.+6      	; 0x1e2e <TWI_SendSLAR+0x26>
    1e28:	84 e9       	ldi	r24, 0x94	; 148
    1e2a:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1e2e:	08 95       	ret

00001e30 <TWI_TransmitData>:
    1e30:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    1e34:	84 e8       	ldi	r24, 0x84	; 132
    1e36:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1e3a:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1e3e:	87 ff       	sbrs	r24, 7
    1e40:	fc cf       	rjmp	.-8      	; 0x1e3a <TWI_TransmitData+0xa>
    1e42:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    1e46:	88 7f       	andi	r24, 0xF8	; 248
    1e48:	88 32       	cpi	r24, 0x28	; 40
    1e4a:	19 f0       	breq	.+6      	; 0x1e52 <TWI_TransmitData+0x22>
    1e4c:	84 e9       	ldi	r24, 0x94	; 148
    1e4e:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1e52:	08 95       	ret

00001e54 <TWI_ReceiveData>:
    1e54:	84 ec       	ldi	r24, 0xC4	; 196
    1e56:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1e5a:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1e5e:	87 ff       	sbrs	r24, 7
    1e60:	fc cf       	rjmp	.-8      	; 0x1e5a <TWI_ReceiveData+0x6>
    1e62:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    1e66:	88 7f       	andi	r24, 0xF8	; 248
    1e68:	80 35       	cpi	r24, 0x50	; 80
    1e6a:	19 f0       	breq	.+6      	; 0x1e72 <TWI_ReceiveData+0x1e>
    1e6c:	84 e9       	ldi	r24, 0x94	; 148
    1e6e:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1e72:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    1e76:	08 95       	ret

00001e78 <TWI_SendNoAck>:
    1e78:	84 e8       	ldi	r24, 0x84	; 132
    1e7a:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1e7e:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1e82:	87 ff       	sbrs	r24, 7
    1e84:	fc cf       	rjmp	.-8      	; 0x1e7e <TWI_SendNoAck+0x6>
    1e86:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    1e8a:	88 7f       	andi	r24, 0xF8	; 248
    1e8c:	88 35       	cpi	r24, 0x58	; 88
    1e8e:	19 f0       	breq	.+6      	; 0x1e96 <TWI_SendNoAck+0x1e>
    1e90:	84 e9       	ldi	r24, 0x94	; 148
    1e92:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1e96:	08 95       	ret

00001e98 <TWI_wr>:
    1e98:	ff 92       	push	r15
    1e9a:	0f 93       	push	r16
    1e9c:	1f 93       	push	r17
    1e9e:	18 2f       	mov	r17, r24
    1ea0:	06 2f       	mov	r16, r22
    1ea2:	f4 2e       	mov	r15, r20
    1ea4:	72 df       	rcall	.-284    	; 0x1d8a <TWI_Start>
    1ea6:	81 2f       	mov	r24, r17
    1ea8:	9a df       	rcall	.-204    	; 0x1dde <TWI_SendSLAW>
    1eaa:	80 2f       	mov	r24, r16
    1eac:	c1 df       	rcall	.-126    	; 0x1e30 <TWI_TransmitData>
    1eae:	8f 2d       	mov	r24, r15
    1eb0:	bf df       	rcall	.-130    	; 0x1e30 <TWI_TransmitData>
    1eb2:	84 e9       	ldi	r24, 0x94	; 148
    1eb4:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1eb8:	1f 91       	pop	r17
    1eba:	0f 91       	pop	r16
    1ebc:	ff 90       	pop	r15
    1ebe:	08 95       	ret

00001ec0 <TWI_rd>:
    1ec0:	0f 93       	push	r16
    1ec2:	1f 93       	push	r17
    1ec4:	08 2f       	mov	r16, r24
    1ec6:	16 2f       	mov	r17, r22
    1ec8:	60 df       	rcall	.-320    	; 0x1d8a <TWI_Start>
    1eca:	80 2f       	mov	r24, r16
    1ecc:	88 df       	rcall	.-240    	; 0x1dde <TWI_SendSLAW>
    1ece:	81 2f       	mov	r24, r17
    1ed0:	af df       	rcall	.-162    	; 0x1e30 <TWI_TransmitData>
    1ed2:	72 df       	rcall	.-284    	; 0x1db8 <TWI_ReStart>
    1ed4:	80 2f       	mov	r24, r16
    1ed6:	98 df       	rcall	.-208    	; 0x1e08 <TWI_SendSLAR>
    1ed8:	bd df       	rcall	.-134    	; 0x1e54 <TWI_ReceiveData>
    1eda:	18 2f       	mov	r17, r24
    1edc:	cd df       	rcall	.-102    	; 0x1e78 <TWI_SendNoAck>
    1ede:	84 e9       	ldi	r24, 0x94	; 148
    1ee0:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1ee4:	81 2f       	mov	r24, r17
    1ee6:	1f 91       	pop	r17
    1ee8:	0f 91       	pop	r16
    1eea:	08 95       	ret

00001eec <TWI_initialize>:
    1eec:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
    1ef0:	08 95       	ret

00001ef2 <TWI_Write>:
    1ef2:	ef 92       	push	r14
    1ef4:	ff 92       	push	r15
    1ef6:	0f 93       	push	r16
    1ef8:	1f 93       	push	r17
    1efa:	18 2f       	mov	r17, r24
    1efc:	06 2f       	mov	r16, r22
    1efe:	f7 2e       	mov	r15, r23
    1f00:	e4 2e       	mov	r14, r20
    1f02:	43 df       	rcall	.-378    	; 0x1d8a <TWI_Start>
    1f04:	81 30       	cpi	r24, 0x01	; 1
    1f06:	09 f4       	brne	.+2      	; 0x1f0a <TWI_Write+0x18>
    1f08:	41 c0       	rjmp	.+130    	; 0x1f8c <TWI_Write+0x9a>
    1f0a:	81 2f       	mov	r24, r17
    1f0c:	90 e0       	ldi	r25, 0x00	; 0
    1f0e:	88 0f       	add	r24, r24
    1f10:	99 1f       	adc	r25, r25
    1f12:	90 70       	andi	r25, 0x00	; 0
    1f14:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    1f18:	84 e8       	ldi	r24, 0x84	; 132
    1f1a:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1f1e:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1f22:	87 ff       	sbrs	r24, 7
    1f24:	fc cf       	rjmp	.-8      	; 0x1f1e <TWI_Write+0x2c>
    1f26:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    1f2a:	88 7f       	andi	r24, 0xF8	; 248
    1f2c:	88 31       	cpi	r24, 0x18	; 24
    1f2e:	39 f4       	brne	.+14     	; 0x1f3e <TWI_Write+0x4c>
    1f30:	80 2f       	mov	r24, r16
    1f32:	9f 2d       	mov	r25, r15
    1f34:	9c 01       	movw	r18, r24
    1f36:	f9 01       	movw	r30, r18
    1f38:	90 e0       	ldi	r25, 0x00	; 0
    1f3a:	24 e8       	ldi	r18, 0x84	; 132
    1f3c:	1a c0       	rjmp	.+52     	; 0x1f72 <TWI_Write+0x80>
    1f3e:	84 e9       	ldi	r24, 0x94	; 148
    1f40:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1f44:	83 e0       	ldi	r24, 0x03	; 3
    1f46:	22 c0       	rjmp	.+68     	; 0x1f8c <TWI_Write+0x9a>
    1f48:	80 81       	ld	r24, Z
    1f4a:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    1f4e:	20 93 74 00 	sts	0x0074, r18	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1f52:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1f56:	87 ff       	sbrs	r24, 7
    1f58:	fc cf       	rjmp	.-8      	; 0x1f52 <TWI_Write+0x60>
    1f5a:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    1f5e:	31 96       	adiw	r30, 0x01	; 1
    1f60:	88 7f       	andi	r24, 0xF8	; 248
    1f62:	88 32       	cpi	r24, 0x28	; 40
    1f64:	29 f0       	breq	.+10     	; 0x1f70 <TWI_Write+0x7e>
    1f66:	84 e9       	ldi	r24, 0x94	; 148
    1f68:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1f6c:	84 e0       	ldi	r24, 0x04	; 4
    1f6e:	0e c0       	rjmp	.+28     	; 0x1f8c <TWI_Write+0x9a>
    1f70:	9f 5f       	subi	r25, 0xFF	; 255
    1f72:	9e 15       	cp	r25, r14
    1f74:	48 f3       	brcs	.-46     	; 0x1f48 <TWI_Write+0x56>
    1f76:	81 e0       	ldi	r24, 0x01	; 1
    1f78:	8e 15       	cp	r24, r14
    1f7a:	20 f4       	brcc	.+8      	; 0x1f84 <TWI_Write+0x92>
    1f7c:	84 e9       	ldi	r24, 0x94	; 148
    1f7e:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1f82:	03 c0       	rjmp	.+6      	; 0x1f8a <TWI_Write+0x98>
    1f84:	81 e0       	ldi	r24, 0x01	; 1
    1f86:	80 93 db 01 	sts	0x01DB, r24	; 0x8001db <write_to_read>
    1f8a:	80 e0       	ldi	r24, 0x00	; 0
    1f8c:	1f 91       	pop	r17
    1f8e:	0f 91       	pop	r16
    1f90:	ff 90       	pop	r15
    1f92:	ef 90       	pop	r14
    1f94:	08 95       	ret

00001f96 <TWI_Read>:
    1f96:	0f 93       	push	r16
    1f98:	1f 93       	push	r17
    1f9a:	cf 93       	push	r28
    1f9c:	df 93       	push	r29
    1f9e:	08 2f       	mov	r16, r24
    1fa0:	eb 01       	movw	r28, r22
    1fa2:	14 2f       	mov	r17, r20
    1fa4:	80 91 db 01 	lds	r24, 0x01DB	; 0x8001db <write_to_read>
    1fa8:	81 30       	cpi	r24, 0x01	; 1
    1faa:	39 f4       	brne	.+14     	; 0x1fba <TWI_Read+0x24>
    1fac:	05 df       	rcall	.-502    	; 0x1db8 <TWI_ReStart>
    1fae:	82 30       	cpi	r24, 0x02	; 2
    1fb0:	09 f4       	brne	.+2      	; 0x1fb4 <TWI_Read+0x1e>
    1fb2:	73 c0       	rjmp	.+230    	; 0x209a <TWI_Read+0x104>
    1fb4:	10 92 db 01 	sts	0x01DB, r1	; 0x8001db <write_to_read>
    1fb8:	01 c0       	rjmp	.+2      	; 0x1fbc <TWI_Read+0x26>
    1fba:	e7 de       	rcall	.-562    	; 0x1d8a <TWI_Start>
    1fbc:	81 30       	cpi	r24, 0x01	; 1
    1fbe:	09 f4       	brne	.+2      	; 0x1fc2 <TWI_Read+0x2c>
    1fc0:	6c c0       	rjmp	.+216    	; 0x209a <TWI_Read+0x104>
    1fc2:	80 2f       	mov	r24, r16
    1fc4:	90 e0       	ldi	r25, 0x00	; 0
    1fc6:	88 0f       	add	r24, r24
    1fc8:	99 1f       	adc	r25, r25
    1fca:	81 60       	ori	r24, 0x01	; 1
    1fcc:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    1fd0:	84 e8       	ldi	r24, 0x84	; 132
    1fd2:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1fd6:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1fda:	87 ff       	sbrs	r24, 7
    1fdc:	fc cf       	rjmp	.-8      	; 0x1fd6 <TWI_Read+0x40>
    1fde:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    1fe2:	88 7f       	andi	r24, 0xF8	; 248
    1fe4:	80 34       	cpi	r24, 0x40	; 64
    1fe6:	29 f0       	breq	.+10     	; 0x1ff2 <TWI_Read+0x5c>
    1fe8:	84 e9       	ldi	r24, 0x94	; 148
    1fea:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1fee:	85 e0       	ldi	r24, 0x05	; 5
    1ff0:	54 c0       	rjmp	.+168    	; 0x209a <TWI_Read+0x104>
    1ff2:	12 30       	cpi	r17, 0x02	; 2
    1ff4:	d0 f1       	brcs	.+116    	; 0x206a <TWI_Read+0xd4>
    1ff6:	40 e0       	ldi	r20, 0x00	; 0
    1ff8:	21 2f       	mov	r18, r17
    1ffa:	30 e0       	ldi	r19, 0x00	; 0
    1ffc:	21 50       	subi	r18, 0x01	; 1
    1ffe:	30 40       	sbci	r19, 0x00	; 0
    2000:	54 ec       	ldi	r21, 0xC4	; 196
    2002:	17 c0       	rjmp	.+46     	; 0x2032 <TWI_Read+0x9c>
    2004:	50 93 74 00 	sts	0x0074, r21	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    2008:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    200c:	87 ff       	sbrs	r24, 7
    200e:	fc cf       	rjmp	.-8      	; 0x2008 <TWI_Read+0x72>
    2010:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    2014:	88 7f       	andi	r24, 0xF8	; 248
    2016:	80 35       	cpi	r24, 0x50	; 80
    2018:	29 f0       	breq	.+10     	; 0x2024 <TWI_Read+0x8e>
    201a:	84 e9       	ldi	r24, 0x94	; 148
    201c:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    2020:	86 e0       	ldi	r24, 0x06	; 6
    2022:	3b c0       	rjmp	.+118    	; 0x209a <TWI_Read+0x104>
    2024:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    2028:	fe 01       	movw	r30, r28
    202a:	e4 0f       	add	r30, r20
    202c:	f1 1d       	adc	r31, r1
    202e:	80 83       	st	Z, r24
    2030:	4f 5f       	subi	r20, 0xFF	; 255
    2032:	84 2f       	mov	r24, r20
    2034:	90 e0       	ldi	r25, 0x00	; 0
    2036:	82 17       	cp	r24, r18
    2038:	93 07       	cpc	r25, r19
    203a:	24 f3       	brlt	.-56     	; 0x2004 <TWI_Read+0x6e>
    203c:	84 e8       	ldi	r24, 0x84	; 132
    203e:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    2042:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    2046:	87 ff       	sbrs	r24, 7
    2048:	fc cf       	rjmp	.-8      	; 0x2042 <TWI_Read+0xac>
    204a:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    204e:	88 7f       	andi	r24, 0xF8	; 248
    2050:	88 35       	cpi	r24, 0x58	; 88
    2052:	29 f0       	breq	.+10     	; 0x205e <TWI_Read+0xc8>
    2054:	84 e9       	ldi	r24, 0x94	; 148
    2056:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    205a:	87 e0       	ldi	r24, 0x07	; 7
    205c:	1e c0       	rjmp	.+60     	; 0x209a <TWI_Read+0x104>
    205e:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    2062:	c1 0f       	add	r28, r17
    2064:	d1 1d       	adc	r29, r1
    2066:	21 97       	sbiw	r28, 0x01	; 1
    2068:	13 c0       	rjmp	.+38     	; 0x2090 <TWI_Read+0xfa>
    206a:	84 e8       	ldi	r24, 0x84	; 132
    206c:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    2070:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    2074:	87 ff       	sbrs	r24, 7
    2076:	fc cf       	rjmp	.-8      	; 0x2070 <TWI_Read+0xda>
    2078:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    207c:	88 7f       	andi	r24, 0xF8	; 248
    207e:	88 35       	cpi	r24, 0x58	; 88
    2080:	29 f0       	breq	.+10     	; 0x208c <TWI_Read+0xf6>
    2082:	84 e9       	ldi	r24, 0x94	; 148
    2084:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    2088:	88 e0       	ldi	r24, 0x08	; 8
    208a:	07 c0       	rjmp	.+14     	; 0x209a <TWI_Read+0x104>
    208c:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    2090:	88 83       	st	Y, r24
    2092:	84 e9       	ldi	r24, 0x94	; 148
    2094:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    2098:	80 e0       	ldi	r24, 0x00	; 0
    209a:	df 91       	pop	r29
    209c:	cf 91       	pop	r28
    209e:	1f 91       	pop	r17
    20a0:	0f 91       	pop	r16
    20a2:	08 95       	ret

000020a4 <M128_DIO_set>:
    20a4:	92 2f       	mov	r25, r18
    20a6:	48 30       	cpi	r20, 0x08	; 8
    20a8:	08 f0       	brcs	.+2      	; 0x20ac <M128_DIO_set+0x8>
    20aa:	c0 c0       	rjmp	.+384    	; 0x222c <M128_DIO_set+0x188>
    20ac:	8a 3c       	cpi	r24, 0xCA	; 202
    20ae:	09 f4       	brne	.+2      	; 0x20b2 <M128_DIO_set+0xe>
    20b0:	4a c0       	rjmp	.+148    	; 0x2146 <M128_DIO_set+0xa2>
    20b2:	8b 3c       	cpi	r24, 0xCB	; 203
    20b4:	30 f4       	brcc	.+12     	; 0x20c2 <M128_DIO_set+0x1e>
    20b6:	88 3c       	cpi	r24, 0xC8	; 200
    20b8:	71 f0       	breq	.+28     	; 0x20d6 <M128_DIO_set+0x32>
    20ba:	89 3c       	cpi	r24, 0xC9	; 201
    20bc:	09 f0       	breq	.+2      	; 0x20c0 <M128_DIO_set+0x1c>
    20be:	b6 c0       	rjmp	.+364    	; 0x222c <M128_DIO_set+0x188>
    20c0:	26 c0       	rjmp	.+76     	; 0x210e <M128_DIO_set+0x6a>
    20c2:	8c 3c       	cpi	r24, 0xCC	; 204
    20c4:	09 f4       	brne	.+2      	; 0x20c8 <M128_DIO_set+0x24>
    20c6:	77 c0       	rjmp	.+238    	; 0x21b6 <M128_DIO_set+0x112>
    20c8:	8c 3c       	cpi	r24, 0xCC	; 204
    20ca:	08 f4       	brcc	.+2      	; 0x20ce <M128_DIO_set+0x2a>
    20cc:	58 c0       	rjmp	.+176    	; 0x217e <M128_DIO_set+0xda>
    20ce:	8d 3c       	cpi	r24, 0xCD	; 205
    20d0:	09 f0       	breq	.+2      	; 0x20d4 <M128_DIO_set+0x30>
    20d2:	ac c0       	rjmp	.+344    	; 0x222c <M128_DIO_set+0x188>
    20d4:	8c c0       	rjmp	.+280    	; 0x21ee <M128_DIO_set+0x14a>
    20d6:	2a b3       	in	r18, 0x1a	; 26
    20d8:	e9 2f       	mov	r30, r25
    20da:	f0 e0       	ldi	r31, 0x00	; 0
    20dc:	02 c0       	rjmp	.+4      	; 0x20e2 <M128_DIO_set+0x3e>
    20de:	ee 0f       	add	r30, r30
    20e0:	ff 1f       	adc	r31, r31
    20e2:	4a 95       	dec	r20
    20e4:	e2 f7       	brpl	.-8      	; 0x20de <M128_DIO_set+0x3a>
    20e6:	26 23       	and	r18, r22
    20e8:	30 e0       	ldi	r19, 0x00	; 0
    20ea:	86 2f       	mov	r24, r22
    20ec:	90 e0       	ldi	r25, 0x00	; 0
    20ee:	8e 23       	and	r24, r30
    20f0:	9f 23       	and	r25, r31
    20f2:	28 17       	cp	r18, r24
    20f4:	39 07       	cpc	r19, r25
    20f6:	11 f4       	brne	.+4      	; 0x20fc <M128_DIO_set+0x58>
    20f8:	20 e0       	ldi	r18, 0x00	; 0
    20fa:	01 c0       	rjmp	.+2      	; 0x20fe <M128_DIO_set+0x5a>
    20fc:	22 e0       	ldi	r18, 0x02	; 2
    20fe:	8a b3       	in	r24, 0x1a	; 26
    2100:	96 2f       	mov	r25, r22
    2102:	9e 23       	and	r25, r30
    2104:	60 95       	com	r22
    2106:	86 23       	and	r24, r22
    2108:	98 2b       	or	r25, r24
    210a:	9a bb       	out	0x1a, r25	; 26
    210c:	90 c0       	rjmp	.+288    	; 0x222e <M128_DIO_set+0x18a>
    210e:	27 b3       	in	r18, 0x17	; 23
    2110:	e9 2f       	mov	r30, r25
    2112:	f0 e0       	ldi	r31, 0x00	; 0
    2114:	02 c0       	rjmp	.+4      	; 0x211a <M128_DIO_set+0x76>
    2116:	ee 0f       	add	r30, r30
    2118:	ff 1f       	adc	r31, r31
    211a:	4a 95       	dec	r20
    211c:	e2 f7       	brpl	.-8      	; 0x2116 <M128_DIO_set+0x72>
    211e:	26 23       	and	r18, r22
    2120:	30 e0       	ldi	r19, 0x00	; 0
    2122:	86 2f       	mov	r24, r22
    2124:	90 e0       	ldi	r25, 0x00	; 0
    2126:	8e 23       	and	r24, r30
    2128:	9f 23       	and	r25, r31
    212a:	28 17       	cp	r18, r24
    212c:	39 07       	cpc	r19, r25
    212e:	11 f4       	brne	.+4      	; 0x2134 <M128_DIO_set+0x90>
    2130:	20 e0       	ldi	r18, 0x00	; 0
    2132:	01 c0       	rjmp	.+2      	; 0x2136 <M128_DIO_set+0x92>
    2134:	22 e0       	ldi	r18, 0x02	; 2
    2136:	87 b3       	in	r24, 0x17	; 23
    2138:	96 2f       	mov	r25, r22
    213a:	9e 23       	and	r25, r30
    213c:	60 95       	com	r22
    213e:	86 23       	and	r24, r22
    2140:	98 2b       	or	r25, r24
    2142:	97 bb       	out	0x17, r25	; 23
    2144:	74 c0       	rjmp	.+232    	; 0x222e <M128_DIO_set+0x18a>
    2146:	24 b3       	in	r18, 0x14	; 20
    2148:	e9 2f       	mov	r30, r25
    214a:	f0 e0       	ldi	r31, 0x00	; 0
    214c:	02 c0       	rjmp	.+4      	; 0x2152 <M128_DIO_set+0xae>
    214e:	ee 0f       	add	r30, r30
    2150:	ff 1f       	adc	r31, r31
    2152:	4a 95       	dec	r20
    2154:	e2 f7       	brpl	.-8      	; 0x214e <M128_DIO_set+0xaa>
    2156:	26 23       	and	r18, r22
    2158:	30 e0       	ldi	r19, 0x00	; 0
    215a:	86 2f       	mov	r24, r22
    215c:	90 e0       	ldi	r25, 0x00	; 0
    215e:	8e 23       	and	r24, r30
    2160:	9f 23       	and	r25, r31
    2162:	28 17       	cp	r18, r24
    2164:	39 07       	cpc	r19, r25
    2166:	11 f4       	brne	.+4      	; 0x216c <M128_DIO_set+0xc8>
    2168:	20 e0       	ldi	r18, 0x00	; 0
    216a:	01 c0       	rjmp	.+2      	; 0x216e <M128_DIO_set+0xca>
    216c:	22 e0       	ldi	r18, 0x02	; 2
    216e:	84 b3       	in	r24, 0x14	; 20
    2170:	96 2f       	mov	r25, r22
    2172:	9e 23       	and	r25, r30
    2174:	60 95       	com	r22
    2176:	86 23       	and	r24, r22
    2178:	98 2b       	or	r25, r24
    217a:	94 bb       	out	0x14, r25	; 20
    217c:	58 c0       	rjmp	.+176    	; 0x222e <M128_DIO_set+0x18a>
    217e:	21 b3       	in	r18, 0x11	; 17
    2180:	e9 2f       	mov	r30, r25
    2182:	f0 e0       	ldi	r31, 0x00	; 0
    2184:	02 c0       	rjmp	.+4      	; 0x218a <M128_DIO_set+0xe6>
    2186:	ee 0f       	add	r30, r30
    2188:	ff 1f       	adc	r31, r31
    218a:	4a 95       	dec	r20
    218c:	e2 f7       	brpl	.-8      	; 0x2186 <M128_DIO_set+0xe2>
    218e:	26 23       	and	r18, r22
    2190:	30 e0       	ldi	r19, 0x00	; 0
    2192:	86 2f       	mov	r24, r22
    2194:	90 e0       	ldi	r25, 0x00	; 0
    2196:	8e 23       	and	r24, r30
    2198:	9f 23       	and	r25, r31
    219a:	28 17       	cp	r18, r24
    219c:	39 07       	cpc	r19, r25
    219e:	11 f4       	brne	.+4      	; 0x21a4 <M128_DIO_set+0x100>
    21a0:	20 e0       	ldi	r18, 0x00	; 0
    21a2:	01 c0       	rjmp	.+2      	; 0x21a6 <M128_DIO_set+0x102>
    21a4:	22 e0       	ldi	r18, 0x02	; 2
    21a6:	81 b3       	in	r24, 0x11	; 17
    21a8:	96 2f       	mov	r25, r22
    21aa:	9e 23       	and	r25, r30
    21ac:	60 95       	com	r22
    21ae:	86 23       	and	r24, r22
    21b0:	98 2b       	or	r25, r24
    21b2:	91 bb       	out	0x11, r25	; 17
    21b4:	3c c0       	rjmp	.+120    	; 0x222e <M128_DIO_set+0x18a>
    21b6:	22 b1       	in	r18, 0x02	; 2
    21b8:	e9 2f       	mov	r30, r25
    21ba:	f0 e0       	ldi	r31, 0x00	; 0
    21bc:	02 c0       	rjmp	.+4      	; 0x21c2 <M128_DIO_set+0x11e>
    21be:	ee 0f       	add	r30, r30
    21c0:	ff 1f       	adc	r31, r31
    21c2:	4a 95       	dec	r20
    21c4:	e2 f7       	brpl	.-8      	; 0x21be <M128_DIO_set+0x11a>
    21c6:	26 23       	and	r18, r22
    21c8:	30 e0       	ldi	r19, 0x00	; 0
    21ca:	86 2f       	mov	r24, r22
    21cc:	90 e0       	ldi	r25, 0x00	; 0
    21ce:	8e 23       	and	r24, r30
    21d0:	9f 23       	and	r25, r31
    21d2:	28 17       	cp	r18, r24
    21d4:	39 07       	cpc	r19, r25
    21d6:	11 f4       	brne	.+4      	; 0x21dc <M128_DIO_set+0x138>
    21d8:	20 e0       	ldi	r18, 0x00	; 0
    21da:	01 c0       	rjmp	.+2      	; 0x21de <M128_DIO_set+0x13a>
    21dc:	22 e0       	ldi	r18, 0x02	; 2
    21de:	82 b1       	in	r24, 0x02	; 2
    21e0:	96 2f       	mov	r25, r22
    21e2:	9e 23       	and	r25, r30
    21e4:	60 95       	com	r22
    21e6:	86 23       	and	r24, r22
    21e8:	98 2b       	or	r25, r24
    21ea:	92 b9       	out	0x02, r25	; 2
    21ec:	20 c0       	rjmp	.+64     	; 0x222e <M128_DIO_set+0x18a>
    21ee:	20 91 61 00 	lds	r18, 0x0061	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    21f2:	e9 2f       	mov	r30, r25
    21f4:	f0 e0       	ldi	r31, 0x00	; 0
    21f6:	02 c0       	rjmp	.+4      	; 0x21fc <M128_DIO_set+0x158>
    21f8:	ee 0f       	add	r30, r30
    21fa:	ff 1f       	adc	r31, r31
    21fc:	4a 95       	dec	r20
    21fe:	e2 f7       	brpl	.-8      	; 0x21f8 <M128_DIO_set+0x154>
    2200:	26 23       	and	r18, r22
    2202:	30 e0       	ldi	r19, 0x00	; 0
    2204:	86 2f       	mov	r24, r22
    2206:	90 e0       	ldi	r25, 0x00	; 0
    2208:	8e 23       	and	r24, r30
    220a:	9f 23       	and	r25, r31
    220c:	28 17       	cp	r18, r24
    220e:	39 07       	cpc	r19, r25
    2210:	11 f4       	brne	.+4      	; 0x2216 <M128_DIO_set+0x172>
    2212:	20 e0       	ldi	r18, 0x00	; 0
    2214:	01 c0       	rjmp	.+2      	; 0x2218 <M128_DIO_set+0x174>
    2216:	22 e0       	ldi	r18, 0x02	; 2
    2218:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    221c:	96 2f       	mov	r25, r22
    221e:	9e 23       	and	r25, r30
    2220:	60 95       	com	r22
    2222:	86 23       	and	r24, r22
    2224:	98 2b       	or	r25, r24
    2226:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    222a:	01 c0       	rjmp	.+2      	; 0x222e <M128_DIO_set+0x18a>
    222c:	21 e0       	ldi	r18, 0x01	; 1
    222e:	82 2f       	mov	r24, r18
    2230:	08 95       	ret

00002232 <M128_DIO_put>:
    2232:	fa 01       	movw	r30, r20
    2234:	61 30       	cpi	r22, 0x01	; 1
    2236:	c9 f5       	brne	.+114    	; 0x22aa <M128_DIO_put+0x78>
    2238:	82 30       	cpi	r24, 0x02	; 2
    223a:	d1 f0       	breq	.+52     	; 0x2270 <M128_DIO_put+0x3e>
    223c:	83 30       	cpi	r24, 0x03	; 3
    223e:	28 f4       	brcc	.+10     	; 0x224a <M128_DIO_put+0x18>
    2240:	88 23       	and	r24, r24
    2242:	51 f0       	breq	.+20     	; 0x2258 <M128_DIO_put+0x26>
    2244:	81 30       	cpi	r24, 0x01	; 1
    2246:	89 f5       	brne	.+98     	; 0x22aa <M128_DIO_put+0x78>
    2248:	0d c0       	rjmp	.+26     	; 0x2264 <M128_DIO_put+0x32>
    224a:	84 30       	cpi	r24, 0x04	; 4
    224c:	e9 f0       	breq	.+58     	; 0x2288 <M128_DIO_put+0x56>
    224e:	84 30       	cpi	r24, 0x04	; 4
    2250:	a8 f0       	brcs	.+42     	; 0x227c <M128_DIO_put+0x4a>
    2252:	85 30       	cpi	r24, 0x05	; 5
    2254:	51 f5       	brne	.+84     	; 0x22aa <M128_DIO_put+0x78>
    2256:	1e c0       	rjmp	.+60     	; 0x2294 <M128_DIO_put+0x62>
    2258:	8a b3       	in	r24, 0x1a	; 26
    225a:	8f 3f       	cpi	r24, 0xFF	; 255
    225c:	21 f5       	brne	.+72     	; 0x22a6 <M128_DIO_put+0x74>
    225e:	80 81       	ld	r24, Z
    2260:	8b bb       	out	0x1b, r24	; 27
    2262:	1f c0       	rjmp	.+62     	; 0x22a2 <M128_DIO_put+0x70>
    2264:	87 b3       	in	r24, 0x17	; 23
    2266:	8f 3f       	cpi	r24, 0xFF	; 255
    2268:	f1 f4       	brne	.+60     	; 0x22a6 <M128_DIO_put+0x74>
    226a:	80 81       	ld	r24, Z
    226c:	88 bb       	out	0x18, r24	; 24
    226e:	19 c0       	rjmp	.+50     	; 0x22a2 <M128_DIO_put+0x70>
    2270:	84 b3       	in	r24, 0x14	; 20
    2272:	8f 3f       	cpi	r24, 0xFF	; 255
    2274:	c1 f4       	brne	.+48     	; 0x22a6 <M128_DIO_put+0x74>
    2276:	80 81       	ld	r24, Z
    2278:	85 bb       	out	0x15, r24	; 21
    227a:	13 c0       	rjmp	.+38     	; 0x22a2 <M128_DIO_put+0x70>
    227c:	81 b3       	in	r24, 0x11	; 17
    227e:	8f 3f       	cpi	r24, 0xFF	; 255
    2280:	91 f4       	brne	.+36     	; 0x22a6 <M128_DIO_put+0x74>
    2282:	80 81       	ld	r24, Z
    2284:	82 bb       	out	0x12, r24	; 18
    2286:	0d c0       	rjmp	.+26     	; 0x22a2 <M128_DIO_put+0x70>
    2288:	82 b1       	in	r24, 0x02	; 2
    228a:	8f 3f       	cpi	r24, 0xFF	; 255
    228c:	61 f4       	brne	.+24     	; 0x22a6 <M128_DIO_put+0x74>
    228e:	80 81       	ld	r24, Z
    2290:	83 b9       	out	0x03, r24	; 3
    2292:	07 c0       	rjmp	.+14     	; 0x22a2 <M128_DIO_put+0x70>
    2294:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    2298:	8f 3f       	cpi	r24, 0xFF	; 255
    229a:	29 f4       	brne	.+10     	; 0x22a6 <M128_DIO_put+0x74>
    229c:	80 81       	ld	r24, Z
    229e:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    22a2:	80 e0       	ldi	r24, 0x00	; 0
    22a4:	08 95       	ret
    22a6:	82 e0       	ldi	r24, 0x02	; 2
    22a8:	08 95       	ret
    22aa:	81 e0       	ldi	r24, 0x01	; 1
    22ac:	08 95       	ret

000022ae <M128_DIO_get>:
    22ae:	fa 01       	movw	r30, r20
    22b0:	61 30       	cpi	r22, 0x01	; 1
    22b2:	09 f0       	breq	.+2      	; 0x22b6 <M128_DIO_get+0x8>
    22b4:	42 c0       	rjmp	.+132    	; 0x233a <M128_DIO_get+0x8c>
    22b6:	86 36       	cpi	r24, 0x66	; 102
    22b8:	f1 f0       	breq	.+60     	; 0x22f6 <M128_DIO_get+0x48>
    22ba:	87 36       	cpi	r24, 0x67	; 103
    22bc:	28 f4       	brcc	.+10     	; 0x22c8 <M128_DIO_get+0x1a>
    22be:	84 36       	cpi	r24, 0x64	; 100
    22c0:	51 f0       	breq	.+20     	; 0x22d6 <M128_DIO_get+0x28>
    22c2:	85 36       	cpi	r24, 0x65	; 101
    22c4:	d1 f5       	brne	.+116    	; 0x233a <M128_DIO_get+0x8c>
    22c6:	0f c0       	rjmp	.+30     	; 0x22e6 <M128_DIO_get+0x38>
    22c8:	88 36       	cpi	r24, 0x68	; 104
    22ca:	29 f1       	breq	.+74     	; 0x2316 <M128_DIO_get+0x68>
    22cc:	88 36       	cpi	r24, 0x68	; 104
    22ce:	d8 f0       	brcs	.+54     	; 0x2306 <M128_DIO_get+0x58>
    22d0:	89 36       	cpi	r24, 0x69	; 105
    22d2:	99 f5       	brne	.+102    	; 0x233a <M128_DIO_get+0x8c>
    22d4:	29 c0       	rjmp	.+82     	; 0x2328 <M128_DIO_get+0x7a>
    22d6:	8a b3       	in	r24, 0x1a	; 26
    22d8:	88 23       	and	r24, r24
    22da:	11 f4       	brne	.+4      	; 0x22e0 <M128_DIO_get+0x32>
    22dc:	90 e0       	ldi	r25, 0x00	; 0
    22de:	01 c0       	rjmp	.+2      	; 0x22e2 <M128_DIO_get+0x34>
    22e0:	92 e0       	ldi	r25, 0x02	; 2
    22e2:	89 b3       	in	r24, 0x19	; 25
    22e4:	1f c0       	rjmp	.+62     	; 0x2324 <M128_DIO_get+0x76>
    22e6:	87 b3       	in	r24, 0x17	; 23
    22e8:	88 23       	and	r24, r24
    22ea:	11 f4       	brne	.+4      	; 0x22f0 <M128_DIO_get+0x42>
    22ec:	90 e0       	ldi	r25, 0x00	; 0
    22ee:	01 c0       	rjmp	.+2      	; 0x22f2 <M128_DIO_get+0x44>
    22f0:	92 e0       	ldi	r25, 0x02	; 2
    22f2:	86 b3       	in	r24, 0x16	; 22
    22f4:	17 c0       	rjmp	.+46     	; 0x2324 <M128_DIO_get+0x76>
    22f6:	84 b3       	in	r24, 0x14	; 20
    22f8:	88 23       	and	r24, r24
    22fa:	11 f4       	brne	.+4      	; 0x2300 <M128_DIO_get+0x52>
    22fc:	90 e0       	ldi	r25, 0x00	; 0
    22fe:	01 c0       	rjmp	.+2      	; 0x2302 <M128_DIO_get+0x54>
    2300:	92 e0       	ldi	r25, 0x02	; 2
    2302:	83 b3       	in	r24, 0x13	; 19
    2304:	0f c0       	rjmp	.+30     	; 0x2324 <M128_DIO_get+0x76>
    2306:	81 b3       	in	r24, 0x11	; 17
    2308:	88 23       	and	r24, r24
    230a:	11 f4       	brne	.+4      	; 0x2310 <M128_DIO_get+0x62>
    230c:	90 e0       	ldi	r25, 0x00	; 0
    230e:	01 c0       	rjmp	.+2      	; 0x2312 <M128_DIO_get+0x64>
    2310:	92 e0       	ldi	r25, 0x02	; 2
    2312:	80 b3       	in	r24, 0x10	; 16
    2314:	07 c0       	rjmp	.+14     	; 0x2324 <M128_DIO_get+0x76>
    2316:	82 b1       	in	r24, 0x02	; 2
    2318:	88 23       	and	r24, r24
    231a:	11 f4       	brne	.+4      	; 0x2320 <M128_DIO_get+0x72>
    231c:	90 e0       	ldi	r25, 0x00	; 0
    231e:	01 c0       	rjmp	.+2      	; 0x2322 <M128_DIO_get+0x74>
    2320:	92 e0       	ldi	r25, 0x02	; 2
    2322:	81 b1       	in	r24, 0x01	; 1
    2324:	80 83       	st	Z, r24
    2326:	0a c0       	rjmp	.+20     	; 0x233c <M128_DIO_get+0x8e>
    2328:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    232c:	88 23       	and	r24, r24
    232e:	11 f4       	brne	.+4      	; 0x2334 <M128_DIO_get+0x86>
    2330:	90 e0       	ldi	r25, 0x00	; 0
    2332:	01 c0       	rjmp	.+2      	; 0x2336 <M128_DIO_get+0x88>
    2334:	92 e0       	ldi	r25, 0x02	; 2
    2336:	80 b1       	in	r24, 0x00	; 0
    2338:	f5 cf       	rjmp	.-22     	; 0x2324 <M128_DIO_get+0x76>
    233a:	91 e0       	ldi	r25, 0x01	; 1
    233c:	89 2f       	mov	r24, r25
    233e:	08 95       	ret

00002340 <M128_DIO_fpt>:
    2340:	48 30       	cpi	r20, 0x08	; 8
    2342:	08 f0       	brcs	.+2      	; 0x2346 <M128_DIO_fpt+0x6>
    2344:	89 c0       	rjmp	.+274    	; 0x2458 <M128_DIO_fpt+0x118>
    2346:	82 30       	cpi	r24, 0x02	; 2
    2348:	c1 f1       	breq	.+112    	; 0x23ba <M128_DIO_fpt+0x7a>
    234a:	83 30       	cpi	r24, 0x03	; 3
    234c:	30 f4       	brcc	.+12     	; 0x235a <M128_DIO_fpt+0x1a>
    234e:	88 23       	and	r24, r24
    2350:	71 f0       	breq	.+28     	; 0x236e <M128_DIO_fpt+0x2e>
    2352:	81 30       	cpi	r24, 0x01	; 1
    2354:	09 f0       	breq	.+2      	; 0x2358 <M128_DIO_fpt+0x18>
    2356:	80 c0       	rjmp	.+256    	; 0x2458 <M128_DIO_fpt+0x118>
    2358:	1d c0       	rjmp	.+58     	; 0x2394 <M128_DIO_fpt+0x54>
    235a:	84 30       	cpi	r24, 0x04	; 4
    235c:	09 f4       	brne	.+2      	; 0x2360 <M128_DIO_fpt+0x20>
    235e:	52 c0       	rjmp	.+164    	; 0x2404 <M128_DIO_fpt+0xc4>
    2360:	84 30       	cpi	r24, 0x04	; 4
    2362:	08 f4       	brcc	.+2      	; 0x2366 <M128_DIO_fpt+0x26>
    2364:	3d c0       	rjmp	.+122    	; 0x23e0 <M128_DIO_fpt+0xa0>
    2366:	85 30       	cpi	r24, 0x05	; 5
    2368:	09 f0       	breq	.+2      	; 0x236c <M128_DIO_fpt+0x2c>
    236a:	76 c0       	rjmp	.+236    	; 0x2458 <M128_DIO_fpt+0x118>
    236c:	5d c0       	rjmp	.+186    	; 0x2428 <M128_DIO_fpt+0xe8>
    236e:	5a b3       	in	r21, 0x1a	; 26
    2370:	56 23       	and	r21, r22
    2372:	56 17       	cp	r21, r22
    2374:	09 f0       	breq	.+2      	; 0x2378 <M128_DIO_fpt+0x38>
    2376:	6e c0       	rjmp	.+220    	; 0x2454 <M128_DIO_fpt+0x114>
    2378:	8b b3       	in	r24, 0x1b	; 27
    237a:	30 e0       	ldi	r19, 0x00	; 0
    237c:	02 c0       	rjmp	.+4      	; 0x2382 <M128_DIO_fpt+0x42>
    237e:	22 0f       	add	r18, r18
    2380:	33 1f       	adc	r19, r19
    2382:	4a 95       	dec	r20
    2384:	e2 f7       	brpl	.-8      	; 0x237e <M128_DIO_fpt+0x3e>
    2386:	95 2f       	mov	r25, r21
    2388:	92 23       	and	r25, r18
    238a:	50 95       	com	r21
    238c:	58 23       	and	r21, r24
    238e:	95 2b       	or	r25, r21
    2390:	9b bb       	out	0x1b, r25	; 27
    2392:	5e c0       	rjmp	.+188    	; 0x2450 <M128_DIO_fpt+0x110>
    2394:	57 b3       	in	r21, 0x17	; 23
    2396:	56 23       	and	r21, r22
    2398:	56 17       	cp	r21, r22
    239a:	09 f0       	breq	.+2      	; 0x239e <M128_DIO_fpt+0x5e>
    239c:	5b c0       	rjmp	.+182    	; 0x2454 <M128_DIO_fpt+0x114>
    239e:	88 b3       	in	r24, 0x18	; 24
    23a0:	30 e0       	ldi	r19, 0x00	; 0
    23a2:	02 c0       	rjmp	.+4      	; 0x23a8 <M128_DIO_fpt+0x68>
    23a4:	22 0f       	add	r18, r18
    23a6:	33 1f       	adc	r19, r19
    23a8:	4a 95       	dec	r20
    23aa:	e2 f7       	brpl	.-8      	; 0x23a4 <M128_DIO_fpt+0x64>
    23ac:	95 2f       	mov	r25, r21
    23ae:	92 23       	and	r25, r18
    23b0:	50 95       	com	r21
    23b2:	58 23       	and	r21, r24
    23b4:	95 2b       	or	r25, r21
    23b6:	98 bb       	out	0x18, r25	; 24
    23b8:	4b c0       	rjmp	.+150    	; 0x2450 <M128_DIO_fpt+0x110>
    23ba:	54 b3       	in	r21, 0x14	; 20
    23bc:	56 23       	and	r21, r22
    23be:	56 17       	cp	r21, r22
    23c0:	09 f0       	breq	.+2      	; 0x23c4 <M128_DIO_fpt+0x84>
    23c2:	48 c0       	rjmp	.+144    	; 0x2454 <M128_DIO_fpt+0x114>
    23c4:	85 b3       	in	r24, 0x15	; 21
    23c6:	30 e0       	ldi	r19, 0x00	; 0
    23c8:	02 c0       	rjmp	.+4      	; 0x23ce <M128_DIO_fpt+0x8e>
    23ca:	22 0f       	add	r18, r18
    23cc:	33 1f       	adc	r19, r19
    23ce:	4a 95       	dec	r20
    23d0:	e2 f7       	brpl	.-8      	; 0x23ca <M128_DIO_fpt+0x8a>
    23d2:	95 2f       	mov	r25, r21
    23d4:	92 23       	and	r25, r18
    23d6:	50 95       	com	r21
    23d8:	58 23       	and	r21, r24
    23da:	95 2b       	or	r25, r21
    23dc:	95 bb       	out	0x15, r25	; 21
    23de:	38 c0       	rjmp	.+112    	; 0x2450 <M128_DIO_fpt+0x110>
    23e0:	51 b3       	in	r21, 0x11	; 17
    23e2:	56 23       	and	r21, r22
    23e4:	56 17       	cp	r21, r22
    23e6:	b1 f5       	brne	.+108    	; 0x2454 <M128_DIO_fpt+0x114>
    23e8:	82 b3       	in	r24, 0x12	; 18
    23ea:	30 e0       	ldi	r19, 0x00	; 0
    23ec:	02 c0       	rjmp	.+4      	; 0x23f2 <M128_DIO_fpt+0xb2>
    23ee:	22 0f       	add	r18, r18
    23f0:	33 1f       	adc	r19, r19
    23f2:	4a 95       	dec	r20
    23f4:	e2 f7       	brpl	.-8      	; 0x23ee <M128_DIO_fpt+0xae>
    23f6:	95 2f       	mov	r25, r21
    23f8:	92 23       	and	r25, r18
    23fa:	50 95       	com	r21
    23fc:	58 23       	and	r21, r24
    23fe:	95 2b       	or	r25, r21
    2400:	92 bb       	out	0x12, r25	; 18
    2402:	26 c0       	rjmp	.+76     	; 0x2450 <M128_DIO_fpt+0x110>
    2404:	52 b1       	in	r21, 0x02	; 2
    2406:	56 23       	and	r21, r22
    2408:	56 17       	cp	r21, r22
    240a:	21 f5       	brne	.+72     	; 0x2454 <M128_DIO_fpt+0x114>
    240c:	83 b1       	in	r24, 0x03	; 3
    240e:	30 e0       	ldi	r19, 0x00	; 0
    2410:	02 c0       	rjmp	.+4      	; 0x2416 <M128_DIO_fpt+0xd6>
    2412:	22 0f       	add	r18, r18
    2414:	33 1f       	adc	r19, r19
    2416:	4a 95       	dec	r20
    2418:	e2 f7       	brpl	.-8      	; 0x2412 <M128_DIO_fpt+0xd2>
    241a:	95 2f       	mov	r25, r21
    241c:	92 23       	and	r25, r18
    241e:	50 95       	com	r21
    2420:	58 23       	and	r21, r24
    2422:	95 2b       	or	r25, r21
    2424:	93 b9       	out	0x03, r25	; 3
    2426:	14 c0       	rjmp	.+40     	; 0x2450 <M128_DIO_fpt+0x110>
    2428:	50 91 61 00 	lds	r21, 0x0061	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    242c:	56 23       	and	r21, r22
    242e:	56 17       	cp	r21, r22
    2430:	89 f4       	brne	.+34     	; 0x2454 <M128_DIO_fpt+0x114>
    2432:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    2436:	30 e0       	ldi	r19, 0x00	; 0
    2438:	02 c0       	rjmp	.+4      	; 0x243e <M128_DIO_fpt+0xfe>
    243a:	22 0f       	add	r18, r18
    243c:	33 1f       	adc	r19, r19
    243e:	4a 95       	dec	r20
    2440:	e2 f7       	brpl	.-8      	; 0x243a <M128_DIO_fpt+0xfa>
    2442:	95 2f       	mov	r25, r21
    2444:	92 23       	and	r25, r18
    2446:	50 95       	com	r21
    2448:	58 23       	and	r21, r24
    244a:	95 2b       	or	r25, r21
    244c:	90 93 62 00 	sts	0x0062, r25	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    2450:	80 e0       	ldi	r24, 0x00	; 0
    2452:	08 95       	ret
    2454:	82 e0       	ldi	r24, 0x02	; 2
    2456:	08 95       	ret
    2458:	81 e0       	ldi	r24, 0x01	; 1
    245a:	08 95       	ret

0000245c <M128_DIO_fgt>:
    245c:	f9 01       	movw	r30, r18
    245e:	48 30       	cpi	r20, 0x08	; 8
    2460:	08 f0       	brcs	.+2      	; 0x2464 <M128_DIO_fgt+0x8>
    2462:	4b c0       	rjmp	.+150    	; 0x24fa <M128_DIO_fgt+0x9e>
    2464:	86 36       	cpi	r24, 0x66	; 102
    2466:	01 f1       	breq	.+64     	; 0x24a8 <M128_DIO_fgt+0x4c>
    2468:	87 36       	cpi	r24, 0x67	; 103
    246a:	30 f4       	brcc	.+12     	; 0x2478 <M128_DIO_fgt+0x1c>
    246c:	84 36       	cpi	r24, 0x64	; 100
    246e:	61 f0       	breq	.+24     	; 0x2488 <M128_DIO_fgt+0x2c>
    2470:	85 36       	cpi	r24, 0x65	; 101
    2472:	09 f0       	breq	.+2      	; 0x2476 <M128_DIO_fgt+0x1a>
    2474:	42 c0       	rjmp	.+132    	; 0x24fa <M128_DIO_fgt+0x9e>
    2476:	10 c0       	rjmp	.+32     	; 0x2498 <M128_DIO_fgt+0x3c>
    2478:	88 36       	cpi	r24, 0x68	; 104
    247a:	31 f1       	breq	.+76     	; 0x24c8 <M128_DIO_fgt+0x6c>
    247c:	88 36       	cpi	r24, 0x68	; 104
    247e:	e0 f0       	brcs	.+56     	; 0x24b8 <M128_DIO_fgt+0x5c>
    2480:	89 36       	cpi	r24, 0x69	; 105
    2482:	09 f0       	breq	.+2      	; 0x2486 <M128_DIO_fgt+0x2a>
    2484:	3a c0       	rjmp	.+116    	; 0x24fa <M128_DIO_fgt+0x9e>
    2486:	30 c0       	rjmp	.+96     	; 0x24e8 <M128_DIO_fgt+0x8c>
    2488:	8a b3       	in	r24, 0x1a	; 26
    248a:	86 23       	and	r24, r22
    248c:	11 f4       	brne	.+4      	; 0x2492 <M128_DIO_fgt+0x36>
    248e:	20 e0       	ldi	r18, 0x00	; 0
    2490:	01 c0       	rjmp	.+2      	; 0x2494 <M128_DIO_fgt+0x38>
    2492:	22 e0       	ldi	r18, 0x02	; 2
    2494:	89 b3       	in	r24, 0x19	; 25
    2496:	1f c0       	rjmp	.+62     	; 0x24d6 <M128_DIO_fgt+0x7a>
    2498:	87 b3       	in	r24, 0x17	; 23
    249a:	86 23       	and	r24, r22
    249c:	11 f4       	brne	.+4      	; 0x24a2 <M128_DIO_fgt+0x46>
    249e:	20 e0       	ldi	r18, 0x00	; 0
    24a0:	01 c0       	rjmp	.+2      	; 0x24a4 <M128_DIO_fgt+0x48>
    24a2:	22 e0       	ldi	r18, 0x02	; 2
    24a4:	86 b3       	in	r24, 0x16	; 22
    24a6:	17 c0       	rjmp	.+46     	; 0x24d6 <M128_DIO_fgt+0x7a>
    24a8:	84 b3       	in	r24, 0x14	; 20
    24aa:	86 23       	and	r24, r22
    24ac:	11 f4       	brne	.+4      	; 0x24b2 <M128_DIO_fgt+0x56>
    24ae:	20 e0       	ldi	r18, 0x00	; 0
    24b0:	01 c0       	rjmp	.+2      	; 0x24b4 <M128_DIO_fgt+0x58>
    24b2:	22 e0       	ldi	r18, 0x02	; 2
    24b4:	83 b3       	in	r24, 0x13	; 19
    24b6:	0f c0       	rjmp	.+30     	; 0x24d6 <M128_DIO_fgt+0x7a>
    24b8:	81 b3       	in	r24, 0x11	; 17
    24ba:	86 23       	and	r24, r22
    24bc:	11 f4       	brne	.+4      	; 0x24c2 <M128_DIO_fgt+0x66>
    24be:	20 e0       	ldi	r18, 0x00	; 0
    24c0:	01 c0       	rjmp	.+2      	; 0x24c4 <M128_DIO_fgt+0x68>
    24c2:	22 e0       	ldi	r18, 0x02	; 2
    24c4:	80 b3       	in	r24, 0x10	; 16
    24c6:	07 c0       	rjmp	.+14     	; 0x24d6 <M128_DIO_fgt+0x7a>
    24c8:	82 b1       	in	r24, 0x02	; 2
    24ca:	86 23       	and	r24, r22
    24cc:	11 f4       	brne	.+4      	; 0x24d2 <M128_DIO_fgt+0x76>
    24ce:	20 e0       	ldi	r18, 0x00	; 0
    24d0:	01 c0       	rjmp	.+2      	; 0x24d4 <M128_DIO_fgt+0x78>
    24d2:	22 e0       	ldi	r18, 0x02	; 2
    24d4:	81 b1       	in	r24, 0x01	; 1
    24d6:	86 23       	and	r24, r22
    24d8:	90 e0       	ldi	r25, 0x00	; 0
    24da:	02 c0       	rjmp	.+4      	; 0x24e0 <M128_DIO_fgt+0x84>
    24dc:	95 95       	asr	r25
    24de:	87 95       	ror	r24
    24e0:	4a 95       	dec	r20
    24e2:	e2 f7       	brpl	.-8      	; 0x24dc <M128_DIO_fgt+0x80>
    24e4:	80 83       	st	Z, r24
    24e6:	0a c0       	rjmp	.+20     	; 0x24fc <M128_DIO_fgt+0xa0>
    24e8:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    24ec:	86 23       	and	r24, r22
    24ee:	11 f4       	brne	.+4      	; 0x24f4 <M128_DIO_fgt+0x98>
    24f0:	20 e0       	ldi	r18, 0x00	; 0
    24f2:	01 c0       	rjmp	.+2      	; 0x24f6 <M128_DIO_fgt+0x9a>
    24f4:	22 e0       	ldi	r18, 0x02	; 2
    24f6:	80 b1       	in	r24, 0x00	; 0
    24f8:	ee cf       	rjmp	.-36     	; 0x24d6 <M128_DIO_fgt+0x7a>
    24fa:	21 e0       	ldi	r18, 0x01	; 1
    24fc:	82 2f       	mov	r24, r18
    24fe:	08 95       	ret

00002500 <main>:
		ASA_KB00_get(2,100,1,&n);
	}
}

int main(void)
{
    2500:	cf 93       	push	r28
    2502:	df 93       	push	r29
    2504:	00 d0       	rcall	.+0      	; 0x2506 <main+0x6>
    2506:	00 d0       	rcall	.+0      	; 0x2508 <main+0x8>
    2508:	cd b7       	in	r28, 0x3d	; 61
    250a:	de b7       	in	r29, 0x3e	; 62
	//char p[4]={0,0,0,48};
	ASA_M128_set();
    250c:	0e 94 ab 02 	call	0x556	; 0x556 <ASA_M128_set>
	/* Replace with your application code */

	ASA_7S00_set(1,200,0xFF,0,0);
    2510:	00 e0       	ldi	r16, 0x00	; 0
    2512:	20 e0       	ldi	r18, 0x00	; 0
    2514:	4f ef       	ldi	r20, 0xFF	; 255
    2516:	68 ec       	ldi	r22, 0xC8	; 200
    2518:	81 e0       	ldi	r24, 0x01	; 1
    251a:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <ASA_7S00_set>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    251e:	2f ef       	ldi	r18, 0xFF	; 255
    2520:	8f e5       	ldi	r24, 0x5F	; 95
    2522:	93 e0       	ldi	r25, 0x03	; 3
    2524:	21 50       	subi	r18, 0x01	; 1
    2526:	80 40       	sbci	r24, 0x00	; 0
    2528:	90 40       	sbci	r25, 0x00	; 0
    252a:	e1 f7       	brne	.-8      	; 0x2524 <main+0x24>
    252c:	00 c0       	rjmp	.+0      	; 0x252e <main+0x2e>
    252e:	00 00       	nop
	_delay_ms(100);
	
	ASA_KB00_set(2,200,0x01,0,1);
    2530:	01 e0       	ldi	r16, 0x01	; 1
    2532:	20 e0       	ldi	r18, 0x00	; 0
    2534:	41 e0       	ldi	r20, 0x01	; 1
    2536:	68 ec       	ldi	r22, 0xC8	; 200
    2538:	82 e0       	ldi	r24, 0x02	; 2
    253a:	0e 94 b9 04 	call	0x972	; 0x972 <ASA_KB00_set>
    253e:	2f ef       	ldi	r18, 0xFF	; 255
    2540:	8f e5       	ldi	r24, 0x5F	; 95
    2542:	93 e0       	ldi	r25, 0x03	; 3
    2544:	21 50       	subi	r18, 0x01	; 1
    2546:	80 40       	sbci	r24, 0x00	; 0
    2548:	90 40       	sbci	r25, 0x00	; 0
    254a:	e1 f7       	brne	.-8      	; 0x2544 <main+0x44>
    254c:	00 c0       	rjmp	.+0      	; 0x254e <main+0x4e>
    254e:	00 00       	nop
	_delay_ms(100);
	

	DDRE &= ~(1<<PE5);
    2550:	15 98       	cbi	0x02, 5	; 2
	EICRB |= 1<<ISC41;
    2552:	8a b7       	in	r24, 0x3a	; 58
    2554:	82 60       	ori	r24, 0x02	; 2
    2556:	8a bf       	out	0x3a, r24	; 58
	EIMSK |= 1<<INT5;
    2558:	89 b7       	in	r24, 0x39	; 57
    255a:	80 62       	ori	r24, 0x20	; 32
    255c:	89 bf       	out	0x39, r24	; 57
	sei();
    255e:	78 94       	sei
	while (1)
	{
		

		char data[4]={48,51,49,53};
    2560:	0f 2e       	mov	r0, r31
    2562:	f0 e3       	ldi	r31, 0x30	; 48
    2564:	ef 2e       	mov	r14, r31
    2566:	f0 2d       	mov	r31, r0
    2568:	0f 2e       	mov	r0, r31
    256a:	f3 e3       	ldi	r31, 0x33	; 51
    256c:	ff 2e       	mov	r15, r31
    256e:	f0 2d       	mov	r31, r0
    2570:	01 e3       	ldi	r16, 0x31	; 49
    2572:	15 e3       	ldi	r17, 0x35	; 53
    2574:	e9 82       	std	Y+1, r14	; 0x01
    2576:	fa 82       	std	Y+2, r15	; 0x02
    2578:	0b 83       	std	Y+3, r16	; 0x03
    257a:	1c 83       	std	Y+4, r17	; 0x04
		ASA_7S00_put(1,0,4,&data);
    257c:	9e 01       	movw	r18, r28
    257e:	2f 5f       	subi	r18, 0xFF	; 255
    2580:	3f 4f       	sbci	r19, 0xFF	; 255
    2582:	44 e0       	ldi	r20, 0x04	; 4
    2584:	60 e0       	ldi	r22, 0x00	; 0
    2586:	81 e0       	ldi	r24, 0x01	; 1
    2588:	0e 94 19 04 	call	0x832	; 0x832 <ASA_7S00_put>
    258c:	f3 cf       	rjmp	.-26     	; 0x2574 <main+0x74>

0000258e <keyresoure>:
	}
}

void keyresoure(char key_in,char *a,char *b){
	int x=0,y=0;
	switch(key_in){
    258e:	90 e0       	ldi	r25, 0x00	; 0
    2590:	fc 01       	movw	r30, r24
    2592:	f1 97       	sbiw	r30, 0x31	; 49
    2594:	e6 31       	cpi	r30, 0x16	; 22
    2596:	f1 05       	cpc	r31, r1
    2598:	80 f5       	brcc	.+96     	; 0x25fa <keyresoure+0x6c>
    259a:	ea 5b       	subi	r30, 0xBA	; 186
    259c:	ff 4f       	sbci	r31, 0xFF	; 255
    259e:	08 c4       	rjmp	.+2064   	; 0x2db0 <__tablejump2__>
		case 48:{x=0;y=0;break;}
		case 49:{x=1;y=0;break;}
    25a0:	80 e0       	ldi	r24, 0x00	; 0
    25a2:	91 e0       	ldi	r25, 0x01	; 1
    25a4:	2c c0       	rjmp	.+88     	; 0x25fe <keyresoure+0x70>
		case 50:{x=2;y=0;break;}
    25a6:	80 e0       	ldi	r24, 0x00	; 0
    25a8:	92 e0       	ldi	r25, 0x02	; 2
    25aa:	29 c0       	rjmp	.+82     	; 0x25fe <keyresoure+0x70>
		case 51:{x=3;y=0;break;}
    25ac:	80 e0       	ldi	r24, 0x00	; 0
    25ae:	93 e0       	ldi	r25, 0x03	; 3
    25b0:	26 c0       	rjmp	.+76     	; 0x25fe <keyresoure+0x70>
		case 52:{x=4;y=0;break;}
    25b2:	80 e0       	ldi	r24, 0x00	; 0
    25b4:	94 e0       	ldi	r25, 0x04	; 4
    25b6:	23 c0       	rjmp	.+70     	; 0x25fe <keyresoure+0x70>
		case 53:{x=5;y=0;break;}
    25b8:	80 e0       	ldi	r24, 0x00	; 0
    25ba:	95 e0       	ldi	r25, 0x05	; 5
    25bc:	20 c0       	rjmp	.+64     	; 0x25fe <keyresoure+0x70>
		case 54:{x=6;y=0;break;}
    25be:	80 e0       	ldi	r24, 0x00	; 0
    25c0:	96 e0       	ldi	r25, 0x06	; 6
    25c2:	1d c0       	rjmp	.+58     	; 0x25fe <keyresoure+0x70>
		case 55:{x=7;y=0;break;}
    25c4:	80 e0       	ldi	r24, 0x00	; 0
    25c6:	97 e0       	ldi	r25, 0x07	; 7
    25c8:	1a c0       	rjmp	.+52     	; 0x25fe <keyresoure+0x70>
		case 56:{x=8;y=0;break;}
    25ca:	80 e0       	ldi	r24, 0x00	; 0
    25cc:	98 e0       	ldi	r25, 0x08	; 8
    25ce:	17 c0       	rjmp	.+46     	; 0x25fe <keyresoure+0x70>
		case 57:{x=9;y=0;break;}
    25d0:	80 e0       	ldi	r24, 0x00	; 0
    25d2:	99 e0       	ldi	r25, 0x09	; 9
    25d4:	14 c0       	rjmp	.+40     	; 0x25fe <keyresoure+0x70>
		case 65:{x=10;y=1;break;}  //A"clr"
    25d6:	81 e0       	ldi	r24, 0x01	; 1
    25d8:	9a e0       	ldi	r25, 0x0A	; 10
    25da:	11 c0       	rjmp	.+34     	; 0x25fe <keyresoure+0x70>
		case 66:{x=10;y=2;break;}  //B"="
    25dc:	82 e0       	ldi	r24, 0x02	; 2
    25de:	9a e0       	ldi	r25, 0x0A	; 10
    25e0:	0e c0       	rjmp	.+28     	; 0x25fe <keyresoure+0x70>
		case 67:{x=10;y=3;break;}  //C"/"
    25e2:	83 e0       	ldi	r24, 0x03	; 3
    25e4:	9a e0       	ldi	r25, 0x0A	; 10
    25e6:	0b c0       	rjmp	.+22     	; 0x25fe <keyresoure+0x70>
		case 68:{x=10;y=4;break;}  //D"*"
    25e8:	84 e0       	ldi	r24, 0x04	; 4
    25ea:	9a e0       	ldi	r25, 0x0A	; 10
    25ec:	08 c0       	rjmp	.+16     	; 0x25fe <keyresoure+0x70>
		case 69:{x=10;y=5;break;}  //E"-"
    25ee:	85 e0       	ldi	r24, 0x05	; 5
    25f0:	9a e0       	ldi	r25, 0x0A	; 10
    25f2:	05 c0       	rjmp	.+10     	; 0x25fe <keyresoure+0x70>
		case 70:{x=10;y=6;break;}  //F"+"
    25f4:	86 e0       	ldi	r24, 0x06	; 6
    25f6:	9a e0       	ldi	r25, 0x0A	; 10
    25f8:	02 c0       	rjmp	.+4      	; 0x25fe <keyresoure+0x70>
	
	}
}

void keyresoure(char key_in,char *a,char *b){
	int x=0,y=0;
    25fa:	80 e0       	ldi	r24, 0x00	; 0
    25fc:	90 e0       	ldi	r25, 0x00	; 0
		case 67:{x=10;y=3;break;}  //C"/"
		case 68:{x=10;y=4;break;}  //D"*"
		case 69:{x=10;y=5;break;}  //E"-"
		case 70:{x=10;y=6;break;}  //F"+"
	}
	*a=x;
    25fe:	fb 01       	movw	r30, r22
    2600:	90 83       	st	Z, r25
	*b=y;
    2602:	fa 01       	movw	r30, r20
    2604:	80 83       	st	Z, r24
    2606:	08 95       	ret

00002608 <counting>:
}

void counting(char number,char sign,long int *a){
    2608:	0f 93       	push	r16
    260a:	1f 93       	push	r17
    260c:	78 2f       	mov	r23, r24
	static long int counter=0;
	static int s_flag=0;
	
	if (number==10)
    260e:	8a 30       	cpi	r24, 0x0A	; 10
    2610:	b1 f4       	brne	.+44     	; 0x263e <counting+0x36>
	{
		if (sign==1)
    2612:	61 30       	cpi	r22, 0x01	; 1
    2614:	69 f4       	brne	.+26     	; 0x2630 <counting+0x28>
		{
			counter=0;
    2616:	10 92 e6 01 	sts	0x01E6, r1	; 0x8001e6 <counter.2403>
    261a:	10 92 e7 01 	sts	0x01E7, r1	; 0x8001e7 <counter.2403+0x1>
    261e:	10 92 e8 01 	sts	0x01E8, r1	; 0x8001e8 <counter.2403+0x2>
    2622:	10 92 e9 01 	sts	0x01E9, r1	; 0x8001e9 <counter.2403+0x3>
			s_flag=0;
    2626:	10 92 e5 01 	sts	0x01E5, r1	; 0x8001e5 <s_flag.2404+0x1>
    262a:	10 92 e4 01 	sts	0x01E4, r1	; 0x8001e4 <s_flag.2404>
    262e:	44 c0       	rjmp	.+136    	; 0x26b8 <counting+0xb0>
			
		}
		else
		{
			s_flag=1;
    2630:	81 e0       	ldi	r24, 0x01	; 1
    2632:	90 e0       	ldi	r25, 0x00	; 0
    2634:	90 93 e5 01 	sts	0x01E5, r25	; 0x8001e5 <s_flag.2404+0x1>
    2638:	80 93 e4 01 	sts	0x01E4, r24	; 0x8001e4 <s_flag.2404>
    263c:	3d c0       	rjmp	.+122    	; 0x26b8 <counting+0xb0>
		}
	}
	else{
		if (s_flag==1)
    263e:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <s_flag.2404>
    2642:	90 91 e5 01 	lds	r25, 0x01E5	; 0x8001e5 <s_flag.2404+0x1>
    2646:	01 97       	sbiw	r24, 0x01	; 1
    2648:	61 f4       	brne	.+24     	; 0x2662 <counting+0x5a>
		{
			counter=0;
    264a:	10 92 e6 01 	sts	0x01E6, r1	; 0x8001e6 <counter.2403>
    264e:	10 92 e7 01 	sts	0x01E7, r1	; 0x8001e7 <counter.2403+0x1>
    2652:	10 92 e8 01 	sts	0x01E8, r1	; 0x8001e8 <counter.2403+0x2>
    2656:	10 92 e9 01 	sts	0x01E9, r1	; 0x8001e9 <counter.2403+0x3>
			s_flag=0;
    265a:	10 92 e5 01 	sts	0x01E5, r1	; 0x8001e5 <s_flag.2404+0x1>
    265e:	10 92 e4 01 	sts	0x01E4, r1	; 0x8001e4 <s_flag.2404>
		}
		counter=(counter*10+number);
    2662:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <counter.2403>
    2666:	90 91 e7 01 	lds	r25, 0x01E7	; 0x8001e7 <counter.2403+0x1>
    266a:	a0 91 e8 01 	lds	r26, 0x01E8	; 0x8001e8 <counter.2403+0x2>
    266e:	b0 91 e9 01 	lds	r27, 0x01E9	; 0x8001e9 <counter.2403+0x3>
    2672:	88 0f       	add	r24, r24
    2674:	99 1f       	adc	r25, r25
    2676:	aa 1f       	adc	r26, r26
    2678:	bb 1f       	adc	r27, r27
    267a:	8c 01       	movw	r16, r24
    267c:	9d 01       	movw	r18, r26
    267e:	00 0f       	add	r16, r16
    2680:	11 1f       	adc	r17, r17
    2682:	22 1f       	adc	r18, r18
    2684:	33 1f       	adc	r19, r19
    2686:	00 0f       	add	r16, r16
    2688:	11 1f       	adc	r17, r17
    268a:	22 1f       	adc	r18, r18
    268c:	33 1f       	adc	r19, r19
    268e:	80 0f       	add	r24, r16
    2690:	91 1f       	adc	r25, r17
    2692:	a2 1f       	adc	r26, r18
    2694:	b3 1f       	adc	r27, r19
    2696:	87 0f       	add	r24, r23
    2698:	91 1d       	adc	r25, r1
    269a:	a1 1d       	adc	r26, r1
    269c:	b1 1d       	adc	r27, r1
    269e:	80 93 e6 01 	sts	0x01E6, r24	; 0x8001e6 <counter.2403>
    26a2:	90 93 e7 01 	sts	0x01E7, r25	; 0x8001e7 <counter.2403+0x1>
    26a6:	a0 93 e8 01 	sts	0x01E8, r26	; 0x8001e8 <counter.2403+0x2>
    26aa:	b0 93 e9 01 	sts	0x01E9, r27	; 0x8001e9 <counter.2403+0x3>
		*a=counter;
    26ae:	fa 01       	movw	r30, r20
    26b0:	80 83       	st	Z, r24
    26b2:	91 83       	std	Z+1, r25	; 0x01
    26b4:	a2 83       	std	Z+2, r26	; 0x02
    26b6:	b3 83       	std	Z+3, r27	; 0x03
	}
}
    26b8:	1f 91       	pop	r17
    26ba:	0f 91       	pop	r16
    26bc:	08 95       	ret

000026be <calculate>:

void calculate(long int cal,char number,char sign,long int *a,long int *b){
    26be:	8f 92       	push	r8
    26c0:	9f 92       	push	r9
    26c2:	af 92       	push	r10
    26c4:	bf 92       	push	r11
    26c6:	ef 92       	push	r14
    26c8:	ff 92       	push	r15
    26ca:	0f 93       	push	r16
    26cc:	1f 93       	push	r17
    26ce:	4b 01       	movw	r8, r22
    26d0:	5c 01       	movw	r10, r24
	static int cal_f2=0,cal_f3=0,cal_f4=0;//f2:運算子f3:等號旗標f4:運算旗標
	static int cal_n1=0;  //暫存器1
	static int cal_n2=0;  //暫存器2
	if (number==10){
    26d2:	4a 30       	cpi	r20, 0x0A	; 10
    26d4:	09 f0       	breq	.+2      	; 0x26d8 <calculate+0x1a>
    26d6:	6d c1       	rjmp	.+730    	; 0x29b2 <calculate+0x2f4>
		if (sign==1)
    26d8:	21 30       	cpi	r18, 0x01	; 1
    26da:	89 f4       	brne	.+34     	; 0x26fe <calculate+0x40>
		{
			cal_n1=0;cal_n2=0;cal_f2=0;cal_f3=0;cal_f4=0;
    26dc:	10 92 e3 01 	sts	0x01E3, r1	; 0x8001e3 <cal_n1.2415+0x1>
    26e0:	10 92 e2 01 	sts	0x01E2, r1	; 0x8001e2 <cal_n1.2415>
    26e4:	10 92 e1 01 	sts	0x01E1, r1	; 0x8001e1 <cal_f2.2412+0x1>
    26e8:	10 92 e0 01 	sts	0x01E0, r1	; 0x8001e0 <cal_f2.2412>
    26ec:	10 92 df 01 	sts	0x01DF, r1	; 0x8001df <cal_f3.2413+0x1>
    26f0:	10 92 de 01 	sts	0x01DE, r1	; 0x8001de <cal_f3.2413>
    26f4:	10 92 dd 01 	sts	0x01DD, r1	; 0x8001dd <cal_f4.2414+0x1>
    26f8:	10 92 dc 01 	sts	0x01DC, r1	; 0x8001dc <cal_f4.2414>
    26fc:	79 c1       	rjmp	.+754    	; 0x29f0 <calculate+0x332>
		}
		else if (sign==2)
    26fe:	22 30       	cpi	r18, 0x02	; 2
    2700:	09 f0       	breq	.+2      	; 0x2704 <calculate+0x46>
    2702:	8a c0       	rjmp	.+276    	; 0x2818 <calculate+0x15a>
		{
			cal_f3=1;
    2704:	81 e0       	ldi	r24, 0x01	; 1
    2706:	90 e0       	ldi	r25, 0x00	; 0
    2708:	90 93 df 01 	sts	0x01DF, r25	; 0x8001df <cal_f3.2413+0x1>
    270c:	80 93 de 01 	sts	0x01DE, r24	; 0x8001de <cal_f3.2413>
			cal_n2=cal;
    2710:	b4 01       	movw	r22, r8
			switch(cal_f2){   //最後運算
    2712:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <cal_f2.2412>
    2716:	90 91 e1 01 	lds	r25, 0x01E1	; 0x8001e1 <cal_f2.2412+0x1>
    271a:	84 30       	cpi	r24, 0x04	; 4
    271c:	91 05       	cpc	r25, r1
    271e:	09 f4       	brne	.+2      	; 0x2722 <calculate+0x64>
    2720:	41 c0       	rjmp	.+130    	; 0x27a4 <calculate+0xe6>
    2722:	34 f4       	brge	.+12     	; 0x2730 <calculate+0x72>
    2724:	00 97       	sbiw	r24, 0x00	; 0
    2726:	51 f0       	breq	.+20     	; 0x273c <calculate+0x7e>
    2728:	03 97       	sbiw	r24, 0x03	; 3
    272a:	09 f4       	brne	.+2      	; 0x272e <calculate+0x70>
    272c:	55 c0       	rjmp	.+170    	; 0x27d8 <calculate+0x11a>
    272e:	60 c1       	rjmp	.+704    	; 0x29f0 <calculate+0x332>
    2730:	85 30       	cpi	r24, 0x05	; 5
    2732:	91 05       	cpc	r25, r1
    2734:	11 f1       	breq	.+68     	; 0x277a <calculate+0xbc>
    2736:	06 97       	sbiw	r24, 0x06	; 6
    2738:	59 f0       	breq	.+22     	; 0x2750 <calculate+0x92>
    273a:	5a c1       	rjmp	.+692    	; 0x29f0 <calculate+0x332>
				case 0:{*a=cal_n2;break;}
    273c:	09 2c       	mov	r0, r9
    273e:	00 0c       	add	r0, r0
    2740:	aa 08       	sbc	r10, r10
    2742:	bb 08       	sbc	r11, r11
    2744:	f8 01       	movw	r30, r16
    2746:	80 82       	st	Z, r8
    2748:	91 82       	std	Z+1, r9	; 0x01
    274a:	a2 82       	std	Z+2, r10	; 0x02
    274c:	b3 82       	std	Z+3, r11	; 0x03
    274e:	50 c1       	rjmp	.+672    	; 0x29f0 <calculate+0x332>
				case 6:{*a=cal_n1+cal_n2;cal_n1=*a;break;}
    2750:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <cal_n1.2415>
    2754:	90 91 e3 01 	lds	r25, 0x01E3	; 0x8001e3 <cal_n1.2415+0x1>
    2758:	88 0e       	add	r8, r24
    275a:	99 1e       	adc	r9, r25
    275c:	c4 01       	movw	r24, r8
    275e:	09 2c       	mov	r0, r9
    2760:	00 0c       	add	r0, r0
    2762:	aa 0b       	sbc	r26, r26
    2764:	bb 0b       	sbc	r27, r27
    2766:	f8 01       	movw	r30, r16
    2768:	80 83       	st	Z, r24
    276a:	91 83       	std	Z+1, r25	; 0x01
    276c:	a2 83       	std	Z+2, r26	; 0x02
    276e:	b3 83       	std	Z+3, r27	; 0x03
    2770:	90 92 e3 01 	sts	0x01E3, r9	; 0x8001e3 <cal_n1.2415+0x1>
    2774:	80 92 e2 01 	sts	0x01E2, r8	; 0x8001e2 <cal_n1.2415>
    2778:	3b c1       	rjmp	.+630    	; 0x29f0 <calculate+0x332>
				case 5:{*a=cal_n1-cal_n2;cal_n1=*a;break;}
    277a:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <cal_n1.2415>
    277e:	90 91 e3 01 	lds	r25, 0x01E3	; 0x8001e3 <cal_n1.2415+0x1>
    2782:	88 19       	sub	r24, r8
    2784:	99 09       	sbc	r25, r9
    2786:	ac 01       	movw	r20, r24
    2788:	09 2e       	mov	r0, r25
    278a:	00 0c       	add	r0, r0
    278c:	66 0b       	sbc	r22, r22
    278e:	77 0b       	sbc	r23, r23
    2790:	f8 01       	movw	r30, r16
    2792:	40 83       	st	Z, r20
    2794:	51 83       	std	Z+1, r21	; 0x01
    2796:	62 83       	std	Z+2, r22	; 0x02
    2798:	73 83       	std	Z+3, r23	; 0x03
    279a:	90 93 e3 01 	sts	0x01E3, r25	; 0x8001e3 <cal_n1.2415+0x1>
    279e:	80 93 e2 01 	sts	0x01E2, r24	; 0x8001e2 <cal_n1.2415>
    27a2:	26 c1       	rjmp	.+588    	; 0x29f0 <calculate+0x332>
				case 4:{*a=cal_n2*cal_n1;cal_n1=*a;break;}
    27a4:	20 91 e2 01 	lds	r18, 0x01E2	; 0x8001e2 <cal_n1.2415>
    27a8:	30 91 e3 01 	lds	r19, 0x01E3	; 0x8001e3 <cal_n1.2415+0x1>
    27ac:	28 9d       	mul	r18, r8
    27ae:	c0 01       	movw	r24, r0
    27b0:	29 9d       	mul	r18, r9
    27b2:	90 0d       	add	r25, r0
    27b4:	38 9d       	mul	r19, r8
    27b6:	90 0d       	add	r25, r0
    27b8:	11 24       	eor	r1, r1
    27ba:	ac 01       	movw	r20, r24
    27bc:	09 2e       	mov	r0, r25
    27be:	00 0c       	add	r0, r0
    27c0:	66 0b       	sbc	r22, r22
    27c2:	77 0b       	sbc	r23, r23
    27c4:	f8 01       	movw	r30, r16
    27c6:	40 83       	st	Z, r20
    27c8:	51 83       	std	Z+1, r21	; 0x01
    27ca:	62 83       	std	Z+2, r22	; 0x02
    27cc:	73 83       	std	Z+3, r23	; 0x03
    27ce:	90 93 e3 01 	sts	0x01E3, r25	; 0x8001e3 <cal_n1.2415+0x1>
    27d2:	80 93 e2 01 	sts	0x01E2, r24	; 0x8001e2 <cal_n1.2415>
    27d6:	0c c1       	rjmp	.+536    	; 0x29f0 <calculate+0x332>
				case 3:{
					if (cal_n2==0)
    27d8:	89 28       	or	r8, r9
    27da:	51 f4       	brne	.+20     	; 0x27f0 <calculate+0x132>
					{
						*a=100000;
    27dc:	80 ea       	ldi	r24, 0xA0	; 160
    27de:	96 e8       	ldi	r25, 0x86	; 134
    27e0:	a1 e0       	ldi	r26, 0x01	; 1
    27e2:	b0 e0       	ldi	r27, 0x00	; 0
    27e4:	f8 01       	movw	r30, r16
    27e6:	80 83       	st	Z, r24
    27e8:	91 83       	std	Z+1, r25	; 0x01
    27ea:	a2 83       	std	Z+2, r26	; 0x02
    27ec:	b3 83       	std	Z+3, r27	; 0x03
    27ee:	00 c1       	rjmp	.+512    	; 0x29f0 <calculate+0x332>
					}
					else{*a=cal_n1/cal_n2;cal_n1=*a;}
    27f0:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <cal_n1.2415>
    27f4:	90 91 e3 01 	lds	r25, 0x01E3	; 0x8001e3 <cal_n1.2415+0x1>
    27f8:	c8 d2       	rcall	.+1424   	; 0x2d8a <__divmodhi4>
    27fa:	cb 01       	movw	r24, r22
    27fc:	07 2e       	mov	r0, r23
    27fe:	00 0c       	add	r0, r0
    2800:	aa 0b       	sbc	r26, r26
    2802:	bb 0b       	sbc	r27, r27
    2804:	f8 01       	movw	r30, r16
    2806:	80 83       	st	Z, r24
    2808:	91 83       	std	Z+1, r25	; 0x01
    280a:	a2 83       	std	Z+2, r26	; 0x02
    280c:	b3 83       	std	Z+3, r27	; 0x03
    280e:	70 93 e3 01 	sts	0x01E3, r23	; 0x8001e3 <cal_n1.2415+0x1>
    2812:	60 93 e2 01 	sts	0x01E2, r22	; 0x8001e2 <cal_n1.2415>
    2816:	ec c0       	rjmp	.+472    	; 0x29f0 <calculate+0x332>
				break;}
			}
		}
		else
		{
			if (cal_f3==0 && cal_f4==0){
    2818:	80 91 de 01 	lds	r24, 0x01DE	; 0x8001de <cal_f3.2413>
    281c:	90 91 df 01 	lds	r25, 0x01DF	; 0x8001df <cal_f3.2413+0x1>
    2820:	00 97       	sbiw	r24, 0x00	; 0
    2822:	09 f0       	breq	.+2      	; 0x2826 <calculate+0x168>
    2824:	99 c0       	rjmp	.+306    	; 0x2958 <calculate+0x29a>
    2826:	40 91 dc 01 	lds	r20, 0x01DC	; 0x8001dc <cal_f4.2414>
    282a:	50 91 dd 01 	lds	r21, 0x01DD	; 0x8001dd <cal_f4.2414+0x1>
    282e:	45 2b       	or	r20, r21
    2830:	09 f0       	breq	.+2      	; 0x2834 <calculate+0x176>
    2832:	d6 c0       	rjmp	.+428    	; 0x29e0 <calculate+0x322>
				switch(cal_f2){
    2834:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <cal_f2.2412>
    2838:	90 91 e1 01 	lds	r25, 0x01E1	; 0x8001e1 <cal_f2.2412+0x1>
    283c:	84 30       	cpi	r24, 0x04	; 4
    283e:	91 05       	cpc	r25, r1
    2840:	09 f4       	brne	.+2      	; 0x2844 <calculate+0x186>
    2842:	46 c0       	rjmp	.+140    	; 0x28d0 <calculate+0x212>
    2844:	34 f4       	brge	.+12     	; 0x2852 <calculate+0x194>
    2846:	00 97       	sbiw	r24, 0x00	; 0
    2848:	51 f0       	breq	.+20     	; 0x285e <calculate+0x1a0>
    284a:	03 97       	sbiw	r24, 0x03	; 3
    284c:	09 f4       	brne	.+2      	; 0x2850 <calculate+0x192>
    284e:	5f c0       	rjmp	.+190    	; 0x290e <calculate+0x250>
    2850:	77 c0       	rjmp	.+238    	; 0x2940 <calculate+0x282>
    2852:	85 30       	cpi	r24, 0x05	; 5
    2854:	91 05       	cpc	r25, r1
    2856:	11 f1       	breq	.+68     	; 0x289c <calculate+0x1de>
    2858:	06 97       	sbiw	r24, 0x06	; 6
    285a:	31 f0       	breq	.+12     	; 0x2868 <calculate+0x1aa>
    285c:	71 c0       	rjmp	.+226    	; 0x2940 <calculate+0x282>
					case 0:{
						cal_n1=cal;
    285e:	90 92 e3 01 	sts	0x01E3, r9	; 0x8001e3 <cal_n1.2415+0x1>
    2862:	80 92 e2 01 	sts	0x01E2, r8	; 0x8001e2 <cal_n1.2415>
						break;
    2866:	6c c0       	rjmp	.+216    	; 0x2940 <calculate+0x282>
					}
					case 6:{
						cal_n2=cal;
						*a=cal_n1+cal_n2;
    2868:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <cal_n1.2415>
    286c:	90 91 e3 01 	lds	r25, 0x01E3	; 0x8001e3 <cal_n1.2415+0x1>
    2870:	88 0e       	add	r8, r24
    2872:	99 1e       	adc	r9, r25
    2874:	c4 01       	movw	r24, r8
    2876:	09 2c       	mov	r0, r9
    2878:	00 0c       	add	r0, r0
    287a:	aa 0b       	sbc	r26, r26
    287c:	bb 0b       	sbc	r27, r27
    287e:	f8 01       	movw	r30, r16
    2880:	80 83       	st	Z, r24
    2882:	91 83       	std	Z+1, r25	; 0x01
    2884:	a2 83       	std	Z+2, r26	; 0x02
    2886:	b3 83       	std	Z+3, r27	; 0x03
						cal_n1=*a;
    2888:	90 92 e3 01 	sts	0x01E3, r9	; 0x8001e3 <cal_n1.2415+0x1>
    288c:	80 92 e2 01 	sts	0x01E2, r8	; 0x8001e2 <cal_n1.2415>
						*b=*a;
    2890:	f7 01       	movw	r30, r14
    2892:	80 83       	st	Z, r24
    2894:	91 83       	std	Z+1, r25	; 0x01
    2896:	a2 83       	std	Z+2, r26	; 0x02
    2898:	b3 83       	std	Z+3, r27	; 0x03
						break;
    289a:	52 c0       	rjmp	.+164    	; 0x2940 <calculate+0x282>
					}
					case 5:{
						cal_n2=cal;
						*a=cal_n1-cal_n2;
    289c:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <cal_n1.2415>
    28a0:	90 91 e3 01 	lds	r25, 0x01E3	; 0x8001e3 <cal_n1.2415+0x1>
    28a4:	88 19       	sub	r24, r8
    28a6:	99 09       	sbc	r25, r9
    28a8:	ac 01       	movw	r20, r24
    28aa:	09 2e       	mov	r0, r25
    28ac:	00 0c       	add	r0, r0
    28ae:	66 0b       	sbc	r22, r22
    28b0:	77 0b       	sbc	r23, r23
    28b2:	f8 01       	movw	r30, r16
    28b4:	40 83       	st	Z, r20
    28b6:	51 83       	std	Z+1, r21	; 0x01
    28b8:	62 83       	std	Z+2, r22	; 0x02
    28ba:	73 83       	std	Z+3, r23	; 0x03
						cal_n1=*a;
    28bc:	90 93 e3 01 	sts	0x01E3, r25	; 0x8001e3 <cal_n1.2415+0x1>
    28c0:	80 93 e2 01 	sts	0x01E2, r24	; 0x8001e2 <cal_n1.2415>
						*b=*a;
    28c4:	f7 01       	movw	r30, r14
    28c6:	40 83       	st	Z, r20
    28c8:	51 83       	std	Z+1, r21	; 0x01
    28ca:	62 83       	std	Z+2, r22	; 0x02
    28cc:	73 83       	std	Z+3, r23	; 0x03
						break;
    28ce:	38 c0       	rjmp	.+112    	; 0x2940 <calculate+0x282>
					}
					case 4:{
						cal_n2=cal;
						*a=cal_n1*cal_n2;
    28d0:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <cal_n1.2415>
    28d4:	90 91 e3 01 	lds	r25, 0x01E3	; 0x8001e3 <cal_n1.2415+0x1>
    28d8:	88 9d       	mul	r24, r8
    28da:	a0 01       	movw	r20, r0
    28dc:	89 9d       	mul	r24, r9
    28de:	50 0d       	add	r21, r0
    28e0:	98 9d       	mul	r25, r8
    28e2:	50 0d       	add	r21, r0
    28e4:	11 24       	eor	r1, r1
    28e6:	ca 01       	movw	r24, r20
    28e8:	05 2e       	mov	r0, r21
    28ea:	00 0c       	add	r0, r0
    28ec:	aa 0b       	sbc	r26, r26
    28ee:	bb 0b       	sbc	r27, r27
    28f0:	f8 01       	movw	r30, r16
    28f2:	80 83       	st	Z, r24
    28f4:	91 83       	std	Z+1, r25	; 0x01
    28f6:	a2 83       	std	Z+2, r26	; 0x02
    28f8:	b3 83       	std	Z+3, r27	; 0x03
						cal_n1=*a;
    28fa:	50 93 e3 01 	sts	0x01E3, r21	; 0x8001e3 <cal_n1.2415+0x1>
    28fe:	40 93 e2 01 	sts	0x01E2, r20	; 0x8001e2 <cal_n1.2415>
						*b=*a;
    2902:	f7 01       	movw	r30, r14
    2904:	80 83       	st	Z, r24
    2906:	91 83       	std	Z+1, r25	; 0x01
    2908:	a2 83       	std	Z+2, r26	; 0x02
    290a:	b3 83       	std	Z+3, r27	; 0x03
						break;
    290c:	19 c0       	rjmp	.+50     	; 0x2940 <calculate+0x282>
					}
					case 3:{cal_n2=cal;
						*a=cal_n1/cal_n2;
    290e:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <cal_n1.2415>
    2912:	90 91 e3 01 	lds	r25, 0x01E3	; 0x8001e3 <cal_n1.2415+0x1>
    2916:	b4 01       	movw	r22, r8
    2918:	38 d2       	rcall	.+1136   	; 0x2d8a <__divmodhi4>
    291a:	cb 01       	movw	r24, r22
    291c:	07 2e       	mov	r0, r23
    291e:	00 0c       	add	r0, r0
    2920:	aa 0b       	sbc	r26, r26
    2922:	bb 0b       	sbc	r27, r27
    2924:	f8 01       	movw	r30, r16
    2926:	80 83       	st	Z, r24
    2928:	91 83       	std	Z+1, r25	; 0x01
    292a:	a2 83       	std	Z+2, r26	; 0x02
    292c:	b3 83       	std	Z+3, r27	; 0x03
						cal_n1=*a;
    292e:	70 93 e3 01 	sts	0x01E3, r23	; 0x8001e3 <cal_n1.2415+0x1>
    2932:	60 93 e2 01 	sts	0x01E2, r22	; 0x8001e2 <cal_n1.2415>
						*b=*a;
    2936:	f7 01       	movw	r30, r14
    2938:	80 83       	st	Z, r24
    293a:	91 83       	std	Z+1, r25	; 0x01
    293c:	a2 83       	std	Z+2, r26	; 0x02
    293e:	b3 83       	std	Z+3, r27	; 0x03
						break;
					}
				}
				cal_f2=sign;
    2940:	30 e0       	ldi	r19, 0x00	; 0
    2942:	30 93 e1 01 	sts	0x01E1, r19	; 0x8001e1 <cal_f2.2412+0x1>
    2946:	20 93 e0 01 	sts	0x01E0, r18	; 0x8001e0 <cal_f2.2412>
				cal_f4=1;
    294a:	81 e0       	ldi	r24, 0x01	; 1
    294c:	90 e0       	ldi	r25, 0x00	; 0
    294e:	90 93 dd 01 	sts	0x01DD, r25	; 0x8001dd <cal_f4.2414+0x1>
    2952:	80 93 dc 01 	sts	0x01DC, r24	; 0x8001dc <cal_f4.2414>
    2956:	4c c0       	rjmp	.+152    	; 0x29f0 <calculate+0x332>
			}
			else {
				if(cal_f4==1){
    2958:	40 91 dc 01 	lds	r20, 0x01DC	; 0x8001dc <cal_f4.2414>
    295c:	50 91 dd 01 	lds	r21, 0x01DD	; 0x8001dd <cal_f4.2414+0x1>
    2960:	41 30       	cpi	r20, 0x01	; 1
    2962:	51 05       	cpc	r21, r1
    2964:	31 f4       	brne	.+12     	; 0x2972 <calculate+0x2b4>
					cal_f2=sign;
    2966:	42 2f       	mov	r20, r18
    2968:	50 e0       	ldi	r21, 0x00	; 0
    296a:	50 93 e1 01 	sts	0x01E1, r21	; 0x8001e1 <cal_f2.2412+0x1>
    296e:	40 93 e0 01 	sts	0x01E0, r20	; 0x8001e0 <cal_f2.2412>
				}
				if (cal_f3==1)
    2972:	01 97       	sbiw	r24, 0x01	; 1
    2974:	e9 f5       	brne	.+122    	; 0x29f0 <calculate+0x332>
				{
					cal_n1=*a;
    2976:	f8 01       	movw	r30, r16
    2978:	80 81       	ld	r24, Z
    297a:	91 81       	ldd	r25, Z+1	; 0x01
    297c:	a2 81       	ldd	r26, Z+2	; 0x02
    297e:	b3 81       	ldd	r27, Z+3	; 0x03
    2980:	90 93 e3 01 	sts	0x01E3, r25	; 0x8001e3 <cal_n1.2415+0x1>
    2984:	80 93 e2 01 	sts	0x01E2, r24	; 0x8001e2 <cal_n1.2415>
					*b=*a;
    2988:	f7 01       	movw	r30, r14
    298a:	80 83       	st	Z, r24
    298c:	91 83       	std	Z+1, r25	; 0x01
    298e:	a2 83       	std	Z+2, r26	; 0x02
    2990:	b3 83       	std	Z+3, r27	; 0x03
					cal_f2=sign;
    2992:	30 e0       	ldi	r19, 0x00	; 0
    2994:	30 93 e1 01 	sts	0x01E1, r19	; 0x8001e1 <cal_f2.2412+0x1>
    2998:	20 93 e0 01 	sts	0x01E0, r18	; 0x8001e0 <cal_f2.2412>
					cal_f3=0;
    299c:	10 92 df 01 	sts	0x01DF, r1	; 0x8001df <cal_f3.2413+0x1>
    29a0:	10 92 de 01 	sts	0x01DE, r1	; 0x8001de <cal_f3.2413>
					cal_f4=1;
    29a4:	81 e0       	ldi	r24, 0x01	; 1
    29a6:	90 e0       	ldi	r25, 0x00	; 0
    29a8:	90 93 dd 01 	sts	0x01DD, r25	; 0x8001dd <cal_f4.2414+0x1>
    29ac:	80 93 dc 01 	sts	0x01DC, r24	; 0x8001dc <cal_f4.2414>
    29b0:	1f c0       	rjmp	.+62     	; 0x29f0 <calculate+0x332>
			}
		}
	}
	if (number!=10)
	{
		cal_f4=0;
    29b2:	10 92 dd 01 	sts	0x01DD, r1	; 0x8001dd <cal_f4.2414+0x1>
    29b6:	10 92 dc 01 	sts	0x01DC, r1	; 0x8001dc <cal_f4.2414>
		if (cal_f3==1)
    29ba:	80 91 de 01 	lds	r24, 0x01DE	; 0x8001de <cal_f3.2413>
    29be:	90 91 df 01 	lds	r25, 0x01DF	; 0x8001df <cal_f3.2413+0x1>
    29c2:	01 97       	sbiw	r24, 0x01	; 1
    29c4:	a9 f4       	brne	.+42     	; 0x29f0 <calculate+0x332>
		{
			cal_n1=0;cal_n2=0;cal_f2=0;cal_f3=0;cal_f4=0;
    29c6:	10 92 e3 01 	sts	0x01E3, r1	; 0x8001e3 <cal_n1.2415+0x1>
    29ca:	10 92 e2 01 	sts	0x01E2, r1	; 0x8001e2 <cal_n1.2415>
    29ce:	10 92 e1 01 	sts	0x01E1, r1	; 0x8001e1 <cal_f2.2412+0x1>
    29d2:	10 92 e0 01 	sts	0x01E0, r1	; 0x8001e0 <cal_f2.2412>
    29d6:	10 92 df 01 	sts	0x01DF, r1	; 0x8001df <cal_f3.2413+0x1>
    29da:	10 92 de 01 	sts	0x01DE, r1	; 0x8001de <cal_f3.2413>
		}
	}
}
    29de:	08 c0       	rjmp	.+16     	; 0x29f0 <calculate+0x332>
				}
				cal_f2=sign;
				cal_f4=1;
			}
			else {
				if(cal_f4==1){
    29e0:	40 91 dc 01 	lds	r20, 0x01DC	; 0x8001dc <cal_f4.2414>
    29e4:	50 91 dd 01 	lds	r21, 0x01DD	; 0x8001dd <cal_f4.2414+0x1>
    29e8:	41 30       	cpi	r20, 0x01	; 1
    29ea:	51 05       	cpc	r21, r1
    29ec:	09 f4       	brne	.+2      	; 0x29f0 <calculate+0x332>
    29ee:	bb cf       	rjmp	.-138    	; 0x2966 <calculate+0x2a8>
		if (cal_f3==1)
		{
			cal_n1=0;cal_n2=0;cal_f2=0;cal_f3=0;cal_f4=0;
		}
	}
}
    29f0:	1f 91       	pop	r17
    29f2:	0f 91       	pop	r16
    29f4:	ff 90       	pop	r15
    29f6:	ef 90       	pop	r14
    29f8:	bf 90       	pop	r11
    29fa:	af 90       	pop	r10
    29fc:	9f 90       	pop	r9
    29fe:	8f 90       	pop	r8
    2a00:	08 95       	ret

00002a02 <printfdata>:



void printfdata(int cal,int ans,int number,int sign,char *a){
    2a02:	8f 92       	push	r8
    2a04:	9f 92       	push	r9
    2a06:	af 92       	push	r10
    2a08:	bf 92       	push	r11
    2a0a:	cf 92       	push	r12
    2a0c:	df 92       	push	r13
    2a0e:	ef 92       	push	r14
    2a10:	ff 92       	push	r15
    2a12:	0f 93       	push	r16
    2a14:	1f 93       	push	r17
    2a16:	cf 93       	push	r28
    2a18:	df 93       	push	r29
    2a1a:	fb 01       	movw	r30, r22
	int print,x,y,i;
	int prm=0,neg=0;
	*a=*(a+1)=*(a+2)=*(a+3)=0;
    2a1c:	d8 01       	movw	r26, r16
    2a1e:	13 96       	adiw	r26, 0x03	; 3
    2a20:	1c 92       	st	X, r1
    2a22:	13 97       	sbiw	r26, 0x03	; 3
    2a24:	12 96       	adiw	r26, 0x02	; 2
    2a26:	1c 92       	st	X, r1
    2a28:	12 97       	sbiw	r26, 0x02	; 2
    2a2a:	11 96       	adiw	r26, 0x01	; 1
    2a2c:	1c 92       	st	X, r1
    2a2e:	11 97       	sbiw	r26, 0x01	; 1
    2a30:	1c 92       	st	X, r1
	if (sign==2)
    2a32:	22 30       	cpi	r18, 0x02	; 2
    2a34:	31 05       	cpc	r19, r1
    2a36:	29 f0       	breq	.+10     	; 0x2a42 <printfdata+0x40>
	{
		print=ans;
	}
	else if (sign==1)
    2a38:	21 30       	cpi	r18, 0x01	; 1
    2a3a:	31 05       	cpc	r19, r1
    2a3c:	21 f0       	breq	.+8      	; 0x2a46 <printfdata+0x44>
	{
		print=0;
	}
	else{
		print=cal;
    2a3e:	e8 2f       	mov	r30, r24
    2a40:	f9 2f       	mov	r31, r25
	}
	
	if (print==0)
    2a42:	30 97       	sbiw	r30, 0x00	; 0
    2a44:	21 f4       	brne	.+8      	; 0x2a4e <printfdata+0x4c>
	{
		*a=*(a+1)=*(a+2)=0;
		*(a+3)=48;
    2a46:	80 e3       	ldi	r24, 0x30	; 48
    2a48:	f8 01       	movw	r30, r16
    2a4a:	83 83       	std	Z+3, r24	; 0x03
    2a4c:	a0 c0       	rjmp	.+320    	; 0x2b8e <printfdata+0x18c>
	}
	else
	{
		if (print>0){
    2a4e:	1e 16       	cp	r1, r30
    2a50:	1f 06       	cpc	r1, r31
    2a52:	0c f0       	brlt	.+2      	; 0x2a56 <printfdata+0x54>
    2a54:	85 c0       	rjmp	.+266    	; 0x2b60 <printfdata+0x15e>
			if (print/10){
    2a56:	9f 01       	movw	r18, r30
    2a58:	cf 01       	movw	r24, r30
    2a5a:	09 96       	adiw	r24, 0x09	; 9
    2a5c:	83 31       	cpi	r24, 0x13	; 19
    2a5e:	91 05       	cpc	r25, r1
    2a60:	08 f4       	brcc	.+2      	; 0x2a64 <printfdata+0x62>
    2a62:	8a c0       	rjmp	.+276    	; 0x2b78 <printfdata+0x176>
				if (print/100){
    2a64:	86 5a       	subi	r24, 0xA6	; 166
    2a66:	9f 4f       	sbci	r25, 0xFF	; 255
    2a68:	87 3c       	cpi	r24, 0xC7	; 199
    2a6a:	91 05       	cpc	r25, r1
    2a6c:	08 f4       	brcc	.+2      	; 0x2a70 <printfdata+0x6e>
    2a6e:	87 c0       	rjmp	.+270    	; 0x2b7e <printfdata+0x17c>
					if (print/1000){
    2a70:	29 51       	subi	r18, 0x19	; 25
    2a72:	3c 4f       	sbci	r19, 0xFC	; 252
    2a74:	2f 3c       	cpi	r18, 0xCF	; 207
    2a76:	37 40       	sbci	r19, 0x07	; 7
    2a78:	08 f0       	brcs	.+2      	; 0x2a7c <printfdata+0x7a>
    2a7a:	84 c0       	rjmp	.+264    	; 0x2b84 <printfdata+0x182>
						prm=4;
					}
					else prm=3;
    2a7c:	83 e0       	ldi	r24, 0x03	; 3
    2a7e:	90 e0       	ldi	r25, 0x00	; 0
    2a80:	83 c0       	rjmp	.+262    	; 0x2b88 <printfdata+0x186>



void printfdata(int cal,int ans,int number,int sign,char *a){
	int print,x,y,i;
	int prm=0,neg=0;
    2a82:	80 e0       	ldi	r24, 0x00	; 0
    2a84:	90 e0       	ldi	r25, 0x00	; 0
			}
			else prm=1;
		}
		if (print<0)
		{
			print=print*(-1);
    2a86:	44 27       	eor	r20, r20
    2a88:	55 27       	eor	r21, r21
    2a8a:	4e 1b       	sub	r20, r30
    2a8c:	5f 0b       	sbc	r21, r31
			neg=1;
			if (print/10)
    2a8e:	29 e0       	ldi	r18, 0x09	; 9
    2a90:	30 e0       	ldi	r19, 0x00	; 0
    2a92:	2e 1b       	sub	r18, r30
    2a94:	3f 0b       	sbc	r19, r31
    2a96:	23 31       	cpi	r18, 0x13	; 19
    2a98:	31 05       	cpc	r19, r1
    2a9a:	08 f4       	brcc	.+2      	; 0x2a9e <printfdata+0x9c>
    2a9c:	4f c0       	rjmp	.+158    	; 0x2b3c <printfdata+0x13a>
			{
				if (print/100)
    2a9e:	23 e6       	ldi	r18, 0x63	; 99
    2aa0:	30 e0       	ldi	r19, 0x00	; 0
    2aa2:	2e 1b       	sub	r18, r30
    2aa4:	3f 0b       	sbc	r19, r31
    2aa6:	27 3c       	cpi	r18, 0xC7	; 199
    2aa8:	31 05       	cpc	r19, r1
    2aaa:	08 f4       	brcc	.+2      	; 0x2aae <printfdata+0xac>
    2aac:	4a c0       	rjmp	.+148    	; 0x2b42 <printfdata+0x140>
				{
					if (print/1000)
    2aae:	27 ee       	ldi	r18, 0xE7	; 231
    2ab0:	33 e0       	ldi	r19, 0x03	; 3
    2ab2:	2e 1b       	sub	r18, r30
    2ab4:	3f 0b       	sbc	r19, r31
    2ab6:	2f 3c       	cpi	r18, 0xCF	; 207
    2ab8:	37 40       	sbci	r19, 0x07	; 7
    2aba:	08 f4       	brcc	.+2      	; 0x2abe <printfdata+0xbc>
    2abc:	45 c0       	rjmp	.+138    	; 0x2b48 <printfdata+0x146>
			}
			else prm=1;
		}
		x=print;
		y=0;
		for (i=3;i>=4-prm;i--)
    2abe:	24 e0       	ldi	r18, 0x04	; 4
    2ac0:	30 e0       	ldi	r19, 0x00	; 0
    2ac2:	59 01       	movw	r10, r18
    2ac4:	a8 1a       	sub	r10, r24
    2ac6:	b9 0a       	sbc	r11, r25
    2ac8:	b4 e0       	ldi	r27, 0x04	; 4
    2aca:	ab 16       	cp	r10, r27
    2acc:	b1 04       	cpc	r11, r1
    2ace:	7c f5       	brge	.+94     	; 0x2b2e <printfdata+0x12c>
			}
			else prm=1;
		}
		if (print<0)
		{
			print=print*(-1);
    2ad0:	fa 01       	movw	r30, r20
			{
				if (print/100)
				{
					if (print/1000)
					{
						neg=2;
    2ad2:	68 94       	set
    2ad4:	88 24       	eor	r8, r8
    2ad6:	81 f8       	bld	r8, 1
    2ad8:	91 2c       	mov	r9, r1
    2ada:	e8 01       	movw	r28, r16



void printfdata(int cal,int ans,int number,int sign,char *a){
	int print,x,y,i;
	int prm=0,neg=0;
    2adc:	0f 2e       	mov	r0, r31
    2ade:	f3 e0       	ldi	r31, 0x03	; 3
    2ae0:	ef 2e       	mov	r14, r31
    2ae2:	f1 2c       	mov	r15, r1
    2ae4:	f0 2d       	mov	r31, r0
		}
		x=print;
		y=0;
		for (i=3;i>=4-prm;i--)
		{
			y=x-(x/10)*10;
    2ae6:	0f 2e       	mov	r0, r31
    2ae8:	fa e0       	ldi	r31, 0x0A	; 10
    2aea:	cf 2e       	mov	r12, r31
    2aec:	d1 2c       	mov	r13, r1
    2aee:	f0 2d       	mov	r31, r0
			x=(x-y)/10;
			*(a+i)=y+48;
			if (neg==1)
			{
				*(a+i-1)=45;
    2af0:	4d e2       	ldi	r20, 0x2D	; 45
		}
		x=print;
		y=0;
		for (i=3;i>=4-prm;i--)
		{
			y=x-(x/10)*10;
    2af2:	cf 01       	movw	r24, r30
    2af4:	b6 01       	movw	r22, r12
    2af6:	49 d1       	rcall	.+658    	; 0x2d8a <__divmodhi4>
    2af8:	9c 01       	movw	r18, r24
			x=(x-y)/10;
    2afa:	cf 01       	movw	r24, r30
    2afc:	82 1b       	sub	r24, r18
    2afe:	93 0b       	sbc	r25, r19
    2b00:	b6 01       	movw	r22, r12
    2b02:	43 d1       	rcall	.+646    	; 0x2d8a <__divmodhi4>
    2b04:	fb 01       	movw	r30, r22
			*(a+i)=y+48;
    2b06:	20 5d       	subi	r18, 0xD0	; 208
    2b08:	2b 83       	std	Y+3, r18	; 0x03
			if (neg==1)
    2b0a:	61 e0       	ldi	r22, 0x01	; 1
    2b0c:	86 16       	cp	r8, r22
    2b0e:	91 04       	cpc	r9, r1
    2b10:	09 f4       	brne	.+2      	; 0x2b14 <printfdata+0x112>
			{
				*(a+i-1)=45;
    2b12:	4a 83       	std	Y+2, r20	; 0x02
			}
			else prm=1;
		}
		x=print;
		y=0;
		for (i=3;i>=4-prm;i--)
    2b14:	81 e0       	ldi	r24, 0x01	; 1
    2b16:	e8 1a       	sub	r14, r24
    2b18:	f1 08       	sbc	r15, r1
    2b1a:	21 97       	sbiw	r28, 0x01	; 1
    2b1c:	ea 14       	cp	r14, r10
    2b1e:	fb 04       	cpc	r15, r11
    2b20:	44 f7       	brge	.-48     	; 0x2af2 <printfdata+0xf0>
			if (neg==1)
			{
				*(a+i-1)=45;
			}
		}
		if (x!=0||neg==2)
    2b22:	ef 2b       	or	r30, r31
    2b24:	21 f4       	brne	.+8      	; 0x2b2e <printfdata+0x12c>
    2b26:	a2 e0       	ldi	r26, 0x02	; 2
    2b28:	8a 16       	cp	r8, r26
    2b2a:	91 04       	cpc	r9, r1
    2b2c:	81 f5       	brne	.+96     	; 0x2b8e <printfdata+0x18c>
		{
			*a=*(a+1)=*(a+2)=*(a+3)=45;
    2b2e:	8d e2       	ldi	r24, 0x2D	; 45
    2b30:	f8 01       	movw	r30, r16
    2b32:	83 83       	std	Z+3, r24	; 0x03
    2b34:	82 83       	std	Z+2, r24	; 0x02
    2b36:	81 83       	std	Z+1, r24	; 0x01
    2b38:	80 83       	st	Z, r24
		}
	}
	
    2b3a:	29 c0       	rjmp	.+82     	; 0x2b8e <printfdata+0x18c>
					}
					else prm=3;
				}
				else prm=2;
			}
			else prm=1;
    2b3c:	81 e0       	ldi	r24, 0x01	; 1
    2b3e:	90 e0       	ldi	r25, 0x00	; 0
    2b40:	05 c0       	rjmp	.+10     	; 0x2b4c <printfdata+0x14a>
					{
						neg=2;
					}
					else prm=3;
				}
				else prm=2;
    2b42:	82 e0       	ldi	r24, 0x02	; 2
    2b44:	90 e0       	ldi	r25, 0x00	; 0
    2b46:	02 c0       	rjmp	.+4      	; 0x2b4c <printfdata+0x14a>
				{
					if (print/1000)
					{
						neg=2;
					}
					else prm=3;
    2b48:	83 e0       	ldi	r24, 0x03	; 3
    2b4a:	90 e0       	ldi	r25, 0x00	; 0
			}
			else prm=1;
		}
		x=print;
		y=0;
		for (i=3;i>=4-prm;i--)
    2b4c:	24 e0       	ldi	r18, 0x04	; 4
    2b4e:	30 e0       	ldi	r19, 0x00	; 0
    2b50:	59 01       	movw	r10, r18
    2b52:	a8 1a       	sub	r10, r24
    2b54:	b9 0a       	sbc	r11, r25
    2b56:	fa 01       	movw	r30, r20
    2b58:	88 24       	eor	r8, r8
    2b5a:	83 94       	inc	r8
    2b5c:	91 2c       	mov	r9, r1
    2b5e:	bd cf       	rjmp	.-134    	; 0x2ada <printfdata+0xd8>
				}
				else prm=2;
			}
			else prm=1;
		}
		if (print<0)
    2b60:	ff 23       	and	r31, r31
    2b62:	0c f4       	brge	.+2      	; 0x2b66 <printfdata+0x164>
    2b64:	8e cf       	rjmp	.-228    	; 0x2a82 <printfdata+0x80>
    2b66:	e3 cf       	rjmp	.-58     	; 0x2b2e <printfdata+0x12c>
			}
			else prm=1;
		}
		x=print;
		y=0;
		for (i=3;i>=4-prm;i--)
    2b68:	24 e0       	ldi	r18, 0x04	; 4
    2b6a:	30 e0       	ldi	r19, 0x00	; 0
    2b6c:	59 01       	movw	r10, r18
    2b6e:	a8 1a       	sub	r10, r24
    2b70:	b9 0a       	sbc	r11, r25



void printfdata(int cal,int ans,int number,int sign,char *a){
	int print,x,y,i;
	int prm=0,neg=0;
    2b72:	81 2c       	mov	r8, r1
    2b74:	91 2c       	mov	r9, r1
    2b76:	b1 cf       	rjmp	.-158    	; 0x2ada <printfdata+0xd8>
					}
					else prm=3;
				}
				else prm=2;
			}
			else prm=1;
    2b78:	81 e0       	ldi	r24, 0x01	; 1
    2b7a:	90 e0       	ldi	r25, 0x00	; 0
    2b7c:	05 c0       	rjmp	.+10     	; 0x2b88 <printfdata+0x186>
					if (print/1000){
						prm=4;
					}
					else prm=3;
				}
				else prm=2;
    2b7e:	82 e0       	ldi	r24, 0x02	; 2
    2b80:	90 e0       	ldi	r25, 0x00	; 0
    2b82:	02 c0       	rjmp	.+4      	; 0x2b88 <printfdata+0x186>
	{
		if (print>0){
			if (print/10){
				if (print/100){
					if (print/1000){
						prm=4;
    2b84:	84 e0       	ldi	r24, 0x04	; 4
    2b86:	90 e0       	ldi	r25, 0x00	; 0
				}
				else prm=2;
			}
			else prm=1;
		}
		if (print<0)
    2b88:	ff 23       	and	r31, r31
    2b8a:	74 f7       	brge	.-36     	; 0x2b68 <printfdata+0x166>
    2b8c:	7c cf       	rjmp	.-264    	; 0x2a86 <printfdata+0x84>
		{
			*a=*(a+1)=*(a+2)=*(a+3)=45;
		}
	}
	
    2b8e:	df 91       	pop	r29
    2b90:	cf 91       	pop	r28
    2b92:	1f 91       	pop	r17
    2b94:	0f 91       	pop	r16
    2b96:	ff 90       	pop	r15
    2b98:	ef 90       	pop	r14
    2b9a:	df 90       	pop	r13
    2b9c:	cf 90       	pop	r12
    2b9e:	bf 90       	pop	r11
    2ba0:	af 90       	pop	r10
    2ba2:	9f 90       	pop	r9
    2ba4:	8f 90       	pop	r8
    2ba6:	08 95       	ret

00002ba8 <__vector_6>:
void calculate(long int cal,char number,char sign,long int *a,long int *b);
void printfdata(int cal,int ans,int number,int sing,char *a);
char EXtin=0;
char n=0,a,b;
long int m=0,ans=0;
ISR(INT5_vect){
    2ba8:	1f 92       	push	r1
    2baa:	0f 92       	push	r0
    2bac:	0f b6       	in	r0, 0x3f	; 63
    2bae:	0f 92       	push	r0
    2bb0:	11 24       	eor	r1, r1
    2bb2:	0b b6       	in	r0, 0x3b	; 59
    2bb4:	0f 92       	push	r0
    2bb6:	ef 92       	push	r14
    2bb8:	ff 92       	push	r15
    2bba:	0f 93       	push	r16
    2bbc:	1f 93       	push	r17
    2bbe:	2f 93       	push	r18
    2bc0:	3f 93       	push	r19
    2bc2:	4f 93       	push	r20
    2bc4:	5f 93       	push	r21
    2bc6:	6f 93       	push	r22
    2bc8:	7f 93       	push	r23
    2bca:	8f 93       	push	r24
    2bcc:	9f 93       	push	r25
    2bce:	af 93       	push	r26
    2bd0:	bf 93       	push	r27
    2bd2:	ef 93       	push	r30
    2bd4:	ff 93       	push	r31
    2bd6:	cf 93       	push	r28
    2bd8:	df 93       	push	r29
    2bda:	00 d0       	rcall	.+0      	; 0x2bdc <__vector_6+0x34>
    2bdc:	00 d0       	rcall	.+0      	; 0x2bde <__vector_6+0x36>
    2bde:	cd b7       	in	r28, 0x3d	; 61
    2be0:	de b7       	in	r29, 0x3e	; 62
	char p[4]={0,0,0,48};
    2be2:	19 82       	std	Y+1, r1	; 0x01
    2be4:	1a 82       	std	Y+2, r1	; 0x02
    2be6:	1b 82       	std	Y+3, r1	; 0x03
    2be8:	80 e3       	ldi	r24, 0x30	; 48
    2bea:	8c 83       	std	Y+4, r24	; 0x04

	while(n==0){
    2bec:	80 91 f2 01 	lds	r24, 0x01F2	; 0x8001f2 <n>
    2bf0:	81 11       	cpse	r24, r1
    2bf2:	24 c0       	rjmp	.+72     	; 0x2c3c <__vector_6+0x94>
		ASA_KB00_get(2,100,1,&n);
    2bf4:	22 ef       	ldi	r18, 0xF2	; 242
    2bf6:	31 e0       	ldi	r19, 0x01	; 1
    2bf8:	41 e0       	ldi	r20, 0x01	; 1
    2bfa:	64 e6       	ldi	r22, 0x64	; 100
    2bfc:	82 e0       	ldi	r24, 0x02	; 2
    2bfe:	0e 94 16 05 	call	0xa2c	; 0xa2c <ASA_KB00_get>
char n=0,a,b;
long int m=0,ans=0;
ISR(INT5_vect){
	char p[4]={0,0,0,48};

	while(n==0){
    2c02:	80 91 f2 01 	lds	r24, 0x01F2	; 0x8001f2 <n>
    2c06:	88 23       	and	r24, r24
    2c08:	a9 f3       	breq	.-22     	; 0x2bf4 <__vector_6+0x4c>
		ASA_KB00_get(2,100,1,&n);
	}
	
	if (p[0]==45 && p[1]==45 && p[2]==45 && p[3]==45){
    2c0a:	99 81       	ldd	r25, Y+1	; 0x01
    2c0c:	9d 32       	cpi	r25, 0x2D	; 45
    2c0e:	b1 f4       	brne	.+44     	; 0x2c3c <__vector_6+0x94>
    2c10:	9a 81       	ldd	r25, Y+2	; 0x02
    2c12:	9d 32       	cpi	r25, 0x2D	; 45
    2c14:	99 f4       	brne	.+38     	; 0x2c3c <__vector_6+0x94>
    2c16:	9b 81       	ldd	r25, Y+3	; 0x03
    2c18:	9d 32       	cpi	r25, 0x2D	; 45
    2c1a:	81 f4       	brne	.+32     	; 0x2c3c <__vector_6+0x94>
    2c1c:	9c 81       	ldd	r25, Y+4	; 0x04
    2c1e:	9d 32       	cpi	r25, 0x2D	; 45
    2c20:	69 f4       	brne	.+26     	; 0x2c3c <__vector_6+0x94>
		while(n!=65){
    2c22:	81 34       	cpi	r24, 0x41	; 65
    2c24:	59 f0       	breq	.+22     	; 0x2c3c <__vector_6+0x94>
			ASA_KB00_get(2,100,1,&n);
    2c26:	22 ef       	ldi	r18, 0xF2	; 242
    2c28:	31 e0       	ldi	r19, 0x01	; 1
    2c2a:	41 e0       	ldi	r20, 0x01	; 1
    2c2c:	64 e6       	ldi	r22, 0x64	; 100
    2c2e:	82 e0       	ldi	r24, 0x02	; 2
    2c30:	0e 94 16 05 	call	0xa2c	; 0xa2c <ASA_KB00_get>
	while(n==0){
		ASA_KB00_get(2,100,1,&n);
	}
	
	if (p[0]==45 && p[1]==45 && p[2]==45 && p[3]==45){
		while(n!=65){
    2c34:	80 91 f2 01 	lds	r24, 0x01F2	; 0x8001f2 <n>
    2c38:	81 34       	cpi	r24, 0x41	; 65
    2c3a:	a9 f7       	brne	.-22     	; 0x2c26 <__vector_6+0x7e>
			ASA_KB00_get(2,100,1,&n);
		}
	}
	keyresoure(n,&a,&b);
    2c3c:	43 ef       	ldi	r20, 0xF3	; 243
    2c3e:	51 e0       	ldi	r21, 0x01	; 1
    2c40:	64 ef       	ldi	r22, 0xF4	; 244
    2c42:	71 e0       	ldi	r23, 0x01	; 1
    2c44:	80 91 f2 01 	lds	r24, 0x01F2	; 0x8001f2 <n>
    2c48:	a2 dc       	rcall	.-1724   	; 0x258e <keyresoure>
	if (a==10 && b==1)
    2c4a:	80 91 f4 01 	lds	r24, 0x01F4	; 0x8001f4 <a>
    2c4e:	8a 30       	cpi	r24, 0x0A	; 10
    2c50:	a1 f4       	brne	.+40     	; 0x2c7a <__vector_6+0xd2>
    2c52:	90 91 f3 01 	lds	r25, 0x01F3	; 0x8001f3 <b>
    2c56:	91 30       	cpi	r25, 0x01	; 1
    2c58:	81 f4       	brne	.+32     	; 0x2c7a <__vector_6+0xd2>
	{
		m=ans=0;
    2c5a:	10 92 ea 01 	sts	0x01EA, r1	; 0x8001ea <ans>
    2c5e:	10 92 eb 01 	sts	0x01EB, r1	; 0x8001eb <ans+0x1>
    2c62:	10 92 ec 01 	sts	0x01EC, r1	; 0x8001ec <ans+0x2>
    2c66:	10 92 ed 01 	sts	0x01ED, r1	; 0x8001ed <ans+0x3>
    2c6a:	10 92 ee 01 	sts	0x01EE, r1	; 0x8001ee <m>
    2c6e:	10 92 ef 01 	sts	0x01EF, r1	; 0x8001ef <m+0x1>
    2c72:	10 92 f0 01 	sts	0x01F0, r1	; 0x8001f0 <m+0x2>
    2c76:	10 92 f1 01 	sts	0x01F1, r1	; 0x8001f1 <m+0x3>
	}
	counting(a,b,&m);
    2c7a:	4e ee       	ldi	r20, 0xEE	; 238
    2c7c:	51 e0       	ldi	r21, 0x01	; 1
    2c7e:	60 91 f3 01 	lds	r22, 0x01F3	; 0x8001f3 <b>
    2c82:	c2 dc       	rcall	.-1660   	; 0x2608 <counting>
	calculate(m,a,b,&ans,&m);
    2c84:	60 91 ee 01 	lds	r22, 0x01EE	; 0x8001ee <m>
    2c88:	70 91 ef 01 	lds	r23, 0x01EF	; 0x8001ef <m+0x1>
    2c8c:	80 91 f0 01 	lds	r24, 0x01F0	; 0x8001f0 <m+0x2>
    2c90:	90 91 f1 01 	lds	r25, 0x01F1	; 0x8001f1 <m+0x3>
    2c94:	0f 2e       	mov	r0, r31
    2c96:	fe ee       	ldi	r31, 0xEE	; 238
    2c98:	ef 2e       	mov	r14, r31
    2c9a:	f1 e0       	ldi	r31, 0x01	; 1
    2c9c:	ff 2e       	mov	r15, r31
    2c9e:	f0 2d       	mov	r31, r0
    2ca0:	0a ee       	ldi	r16, 0xEA	; 234
    2ca2:	11 e0       	ldi	r17, 0x01	; 1
    2ca4:	20 91 f3 01 	lds	r18, 0x01F3	; 0x8001f3 <b>
    2ca8:	40 91 f4 01 	lds	r20, 0x01F4	; 0x8001f4 <a>
    2cac:	08 dd       	rcall	.-1520   	; 0x26be <calculate>
	printf("%d\t",p[0]);
    2cae:	89 81       	ldd	r24, Y+1	; 0x01
    2cb0:	1f 92       	push	r1
    2cb2:	8f 93       	push	r24
    2cb4:	0c e5       	ldi	r16, 0x5C	; 92
    2cb6:	11 e0       	ldi	r17, 0x01	; 1
    2cb8:	1f 93       	push	r17
    2cba:	0f 93       	push	r16
    2cbc:	96 d0       	rcall	.+300    	; 0x2dea <printf>
	printf("%d\t",p[1]);
    2cbe:	8a 81       	ldd	r24, Y+2	; 0x02
    2cc0:	1f 92       	push	r1
    2cc2:	8f 93       	push	r24
    2cc4:	1f 93       	push	r17
    2cc6:	0f 93       	push	r16
    2cc8:	90 d0       	rcall	.+288    	; 0x2dea <printf>
	printf("%d\t",p[2]);
    2cca:	8b 81       	ldd	r24, Y+3	; 0x03
    2ccc:	1f 92       	push	r1
    2cce:	8f 93       	push	r24
    2cd0:	1f 93       	push	r17
    2cd2:	0f 93       	push	r16
    2cd4:	8a d0       	rcall	.+276    	; 0x2dea <printf>
	printf("%d\n",p[3]);
    2cd6:	8c 81       	ldd	r24, Y+4	; 0x04
    2cd8:	1f 92       	push	r1
    2cda:	8f 93       	push	r24
    2cdc:	80 e6       	ldi	r24, 0x60	; 96
    2cde:	91 e0       	ldi	r25, 0x01	; 1
    2ce0:	9f 93       	push	r25
    2ce2:	8f 93       	push	r24
    2ce4:	82 d0       	rcall	.+260    	; 0x2dea <printf>
	printfdata(m,ans,a,b,p);
    2ce6:	20 91 f3 01 	lds	r18, 0x01F3	; 0x8001f3 <b>
    2cea:	30 e0       	ldi	r19, 0x00	; 0
    2cec:	40 91 f4 01 	lds	r20, 0x01F4	; 0x8001f4 <a>
    2cf0:	50 e0       	ldi	r21, 0x00	; 0
    2cf2:	60 91 ea 01 	lds	r22, 0x01EA	; 0x8001ea <ans>
    2cf6:	70 91 eb 01 	lds	r23, 0x01EB	; 0x8001eb <ans+0x1>
    2cfa:	8e 01       	movw	r16, r28
    2cfc:	0f 5f       	subi	r16, 0xFF	; 255
    2cfe:	1f 4f       	sbci	r17, 0xFF	; 255
    2d00:	80 91 ee 01 	lds	r24, 0x01EE	; 0x8001ee <m>
    2d04:	90 91 ef 01 	lds	r25, 0x01EF	; 0x8001ef <m+0x1>
    2d08:	7c de       	rcall	.-776    	; 0x2a02 <printfdata>

	ASA_7S00_put(1,0,4,p);
    2d0a:	98 01       	movw	r18, r16
    2d0c:	44 e0       	ldi	r20, 0x04	; 4
    2d0e:	60 e0       	ldi	r22, 0x00	; 0
    2d10:	81 e0       	ldi	r24, 0x01	; 1
    2d12:	0e 94 19 04 	call	0x832	; 0x832 <ASA_7S00_put>
    2d16:	2f ef       	ldi	r18, 0xFF	; 255
    2d18:	8f e5       	ldi	r24, 0x5F	; 95
    2d1a:	93 e0       	ldi	r25, 0x03	; 3
    2d1c:	21 50       	subi	r18, 0x01	; 1
    2d1e:	80 40       	sbci	r24, 0x00	; 0
    2d20:	90 40       	sbci	r25, 0x00	; 0
    2d22:	e1 f7       	brne	.-8      	; 0x2d1c <__vector_6+0x174>
    2d24:	00 c0       	rjmp	.+0      	; 0x2d26 <__vector_6+0x17e>
    2d26:	00 00       	nop
	_delay_ms(100);
	while(n!=0){
    2d28:	0f b6       	in	r0, 0x3f	; 63
    2d2a:	f8 94       	cli
    2d2c:	de bf       	out	0x3e, r29	; 62
    2d2e:	0f be       	out	0x3f, r0	; 63
    2d30:	cd bf       	out	0x3d, r28	; 61
    2d32:	80 91 f2 01 	lds	r24, 0x01F2	; 0x8001f2 <n>
    2d36:	88 23       	and	r24, r24
    2d38:	59 f0       	breq	.+22     	; 0x2d50 <__vector_6+0x1a8>
		ASA_KB00_get(2,100,1,&n);
    2d3a:	22 ef       	ldi	r18, 0xF2	; 242
    2d3c:	31 e0       	ldi	r19, 0x01	; 1
    2d3e:	41 e0       	ldi	r20, 0x01	; 1
    2d40:	64 e6       	ldi	r22, 0x64	; 100
    2d42:	82 e0       	ldi	r24, 0x02	; 2
    2d44:	0e 94 16 05 	call	0xa2c	; 0xa2c <ASA_KB00_get>
	printf("%d\n",p[3]);
	printfdata(m,ans,a,b,p);

	ASA_7S00_put(1,0,4,p);
	_delay_ms(100);
	while(n!=0){
    2d48:	80 91 f2 01 	lds	r24, 0x01F2	; 0x8001f2 <n>
    2d4c:	81 11       	cpse	r24, r1
    2d4e:	f5 cf       	rjmp	.-22     	; 0x2d3a <__vector_6+0x192>
		ASA_KB00_get(2,100,1,&n);
	}
}
    2d50:	0f 90       	pop	r0
    2d52:	0f 90       	pop	r0
    2d54:	0f 90       	pop	r0
    2d56:	0f 90       	pop	r0
    2d58:	df 91       	pop	r29
    2d5a:	cf 91       	pop	r28
    2d5c:	ff 91       	pop	r31
    2d5e:	ef 91       	pop	r30
    2d60:	bf 91       	pop	r27
    2d62:	af 91       	pop	r26
    2d64:	9f 91       	pop	r25
    2d66:	8f 91       	pop	r24
    2d68:	7f 91       	pop	r23
    2d6a:	6f 91       	pop	r22
    2d6c:	5f 91       	pop	r21
    2d6e:	4f 91       	pop	r20
    2d70:	3f 91       	pop	r19
    2d72:	2f 91       	pop	r18
    2d74:	1f 91       	pop	r17
    2d76:	0f 91       	pop	r16
    2d78:	ff 90       	pop	r15
    2d7a:	ef 90       	pop	r14
    2d7c:	0f 90       	pop	r0
    2d7e:	0b be       	out	0x3b, r0	; 59
    2d80:	0f 90       	pop	r0
    2d82:	0f be       	out	0x3f, r0	; 63
    2d84:	0f 90       	pop	r0
    2d86:	1f 90       	pop	r1
    2d88:	18 95       	reti

00002d8a <__divmodhi4>:
    2d8a:	97 fb       	bst	r25, 7
    2d8c:	07 2e       	mov	r0, r23
    2d8e:	16 f4       	brtc	.+4      	; 0x2d94 <__divmodhi4+0xa>
    2d90:	00 94       	com	r0
    2d92:	06 d0       	rcall	.+12     	; 0x2da0 <__divmodhi4_neg1>
    2d94:	77 fd       	sbrc	r23, 7
    2d96:	08 d0       	rcall	.+16     	; 0x2da8 <__divmodhi4_neg2>
    2d98:	14 d0       	rcall	.+40     	; 0x2dc2 <__udivmodhi4>
    2d9a:	07 fc       	sbrc	r0, 7
    2d9c:	05 d0       	rcall	.+10     	; 0x2da8 <__divmodhi4_neg2>
    2d9e:	3e f4       	brtc	.+14     	; 0x2dae <__divmodhi4_exit>

00002da0 <__divmodhi4_neg1>:
    2da0:	90 95       	com	r25
    2da2:	81 95       	neg	r24
    2da4:	9f 4f       	sbci	r25, 0xFF	; 255
    2da6:	08 95       	ret

00002da8 <__divmodhi4_neg2>:
    2da8:	70 95       	com	r23
    2daa:	61 95       	neg	r22
    2dac:	7f 4f       	sbci	r23, 0xFF	; 255

00002dae <__divmodhi4_exit>:
    2dae:	08 95       	ret

00002db0 <__tablejump2__>:
    2db0:	ee 0f       	add	r30, r30
    2db2:	ff 1f       	adc	r31, r31
    2db4:	00 24       	eor	r0, r0
    2db6:	00 1c       	adc	r0, r0
    2db8:	0b be       	out	0x3b, r0	; 59
    2dba:	07 90       	elpm	r0, Z+
    2dbc:	f6 91       	elpm	r31, Z
    2dbe:	e0 2d       	mov	r30, r0
    2dc0:	09 94       	ijmp

00002dc2 <__udivmodhi4>:
    2dc2:	aa 1b       	sub	r26, r26
    2dc4:	bb 1b       	sub	r27, r27
    2dc6:	51 e1       	ldi	r21, 0x11	; 17
    2dc8:	07 c0       	rjmp	.+14     	; 0x2dd8 <__udivmodhi4_ep>

00002dca <__udivmodhi4_loop>:
    2dca:	aa 1f       	adc	r26, r26
    2dcc:	bb 1f       	adc	r27, r27
    2dce:	a6 17       	cp	r26, r22
    2dd0:	b7 07       	cpc	r27, r23
    2dd2:	10 f0       	brcs	.+4      	; 0x2dd8 <__udivmodhi4_ep>
    2dd4:	a6 1b       	sub	r26, r22
    2dd6:	b7 0b       	sbc	r27, r23

00002dd8 <__udivmodhi4_ep>:
    2dd8:	88 1f       	adc	r24, r24
    2dda:	99 1f       	adc	r25, r25
    2ddc:	5a 95       	dec	r21
    2dde:	a9 f7       	brne	.-22     	; 0x2dca <__udivmodhi4_loop>
    2de0:	80 95       	com	r24
    2de2:	90 95       	com	r25
    2de4:	bc 01       	movw	r22, r24
    2de6:	cd 01       	movw	r24, r26
    2de8:	08 95       	ret

00002dea <printf>:
    2dea:	cf 93       	push	r28
    2dec:	df 93       	push	r29
    2dee:	cd b7       	in	r28, 0x3d	; 61
    2df0:	de b7       	in	r29, 0x3e	; 62
    2df2:	ae 01       	movw	r20, r28
    2df4:	4b 5f       	subi	r20, 0xFB	; 251
    2df6:	5f 4f       	sbci	r21, 0xFF	; 255
    2df8:	fa 01       	movw	r30, r20
    2dfa:	61 91       	ld	r22, Z+
    2dfc:	71 91       	ld	r23, Z+
    2dfe:	af 01       	movw	r20, r30
    2e00:	80 91 c3 02 	lds	r24, 0x02C3	; 0x8002c3 <__iob+0x2>
    2e04:	90 91 c4 02 	lds	r25, 0x02C4	; 0x8002c4 <__iob+0x3>
    2e08:	03 d0       	rcall	.+6      	; 0x2e10 <vfprintf>
    2e0a:	df 91       	pop	r29
    2e0c:	cf 91       	pop	r28
    2e0e:	08 95       	ret

00002e10 <vfprintf>:
    2e10:	2f 92       	push	r2
    2e12:	3f 92       	push	r3
    2e14:	4f 92       	push	r4
    2e16:	5f 92       	push	r5
    2e18:	6f 92       	push	r6
    2e1a:	7f 92       	push	r7
    2e1c:	8f 92       	push	r8
    2e1e:	9f 92       	push	r9
    2e20:	af 92       	push	r10
    2e22:	bf 92       	push	r11
    2e24:	cf 92       	push	r12
    2e26:	df 92       	push	r13
    2e28:	ef 92       	push	r14
    2e2a:	ff 92       	push	r15
    2e2c:	0f 93       	push	r16
    2e2e:	1f 93       	push	r17
    2e30:	cf 93       	push	r28
    2e32:	df 93       	push	r29
    2e34:	cd b7       	in	r28, 0x3d	; 61
    2e36:	de b7       	in	r29, 0x3e	; 62
    2e38:	2b 97       	sbiw	r28, 0x0b	; 11
    2e3a:	0f b6       	in	r0, 0x3f	; 63
    2e3c:	f8 94       	cli
    2e3e:	de bf       	out	0x3e, r29	; 62
    2e40:	0f be       	out	0x3f, r0	; 63
    2e42:	cd bf       	out	0x3d, r28	; 61
    2e44:	6c 01       	movw	r12, r24
    2e46:	7b 01       	movw	r14, r22
    2e48:	8a 01       	movw	r16, r20
    2e4a:	fc 01       	movw	r30, r24
    2e4c:	17 82       	std	Z+7, r1	; 0x07
    2e4e:	16 82       	std	Z+6, r1	; 0x06
    2e50:	83 81       	ldd	r24, Z+3	; 0x03
    2e52:	81 ff       	sbrs	r24, 1
    2e54:	bf c1       	rjmp	.+894    	; 0x31d4 <vfprintf+0x3c4>
    2e56:	ce 01       	movw	r24, r28
    2e58:	01 96       	adiw	r24, 0x01	; 1
    2e5a:	3c 01       	movw	r6, r24
    2e5c:	f6 01       	movw	r30, r12
    2e5e:	93 81       	ldd	r25, Z+3	; 0x03
    2e60:	f7 01       	movw	r30, r14
    2e62:	93 fd       	sbrc	r25, 3
    2e64:	85 91       	lpm	r24, Z+
    2e66:	93 ff       	sbrs	r25, 3
    2e68:	81 91       	ld	r24, Z+
    2e6a:	7f 01       	movw	r14, r30
    2e6c:	88 23       	and	r24, r24
    2e6e:	09 f4       	brne	.+2      	; 0x2e72 <vfprintf+0x62>
    2e70:	ad c1       	rjmp	.+858    	; 0x31cc <vfprintf+0x3bc>
    2e72:	85 32       	cpi	r24, 0x25	; 37
    2e74:	39 f4       	brne	.+14     	; 0x2e84 <vfprintf+0x74>
    2e76:	93 fd       	sbrc	r25, 3
    2e78:	85 91       	lpm	r24, Z+
    2e7a:	93 ff       	sbrs	r25, 3
    2e7c:	81 91       	ld	r24, Z+
    2e7e:	7f 01       	movw	r14, r30
    2e80:	85 32       	cpi	r24, 0x25	; 37
    2e82:	21 f4       	brne	.+8      	; 0x2e8c <vfprintf+0x7c>
    2e84:	b6 01       	movw	r22, r12
    2e86:	90 e0       	ldi	r25, 0x00	; 0
    2e88:	d6 d1       	rcall	.+940    	; 0x3236 <fputc>
    2e8a:	e8 cf       	rjmp	.-48     	; 0x2e5c <vfprintf+0x4c>
    2e8c:	91 2c       	mov	r9, r1
    2e8e:	21 2c       	mov	r2, r1
    2e90:	31 2c       	mov	r3, r1
    2e92:	ff e1       	ldi	r31, 0x1F	; 31
    2e94:	f3 15       	cp	r31, r3
    2e96:	d8 f0       	brcs	.+54     	; 0x2ece <vfprintf+0xbe>
    2e98:	8b 32       	cpi	r24, 0x2B	; 43
    2e9a:	79 f0       	breq	.+30     	; 0x2eba <vfprintf+0xaa>
    2e9c:	38 f4       	brcc	.+14     	; 0x2eac <vfprintf+0x9c>
    2e9e:	80 32       	cpi	r24, 0x20	; 32
    2ea0:	79 f0       	breq	.+30     	; 0x2ec0 <vfprintf+0xb0>
    2ea2:	83 32       	cpi	r24, 0x23	; 35
    2ea4:	a1 f4       	brne	.+40     	; 0x2ece <vfprintf+0xbe>
    2ea6:	23 2d       	mov	r18, r3
    2ea8:	20 61       	ori	r18, 0x10	; 16
    2eaa:	1d c0       	rjmp	.+58     	; 0x2ee6 <vfprintf+0xd6>
    2eac:	8d 32       	cpi	r24, 0x2D	; 45
    2eae:	61 f0       	breq	.+24     	; 0x2ec8 <vfprintf+0xb8>
    2eb0:	80 33       	cpi	r24, 0x30	; 48
    2eb2:	69 f4       	brne	.+26     	; 0x2ece <vfprintf+0xbe>
    2eb4:	23 2d       	mov	r18, r3
    2eb6:	21 60       	ori	r18, 0x01	; 1
    2eb8:	16 c0       	rjmp	.+44     	; 0x2ee6 <vfprintf+0xd6>
    2eba:	83 2d       	mov	r24, r3
    2ebc:	82 60       	ori	r24, 0x02	; 2
    2ebe:	38 2e       	mov	r3, r24
    2ec0:	e3 2d       	mov	r30, r3
    2ec2:	e4 60       	ori	r30, 0x04	; 4
    2ec4:	3e 2e       	mov	r3, r30
    2ec6:	2a c0       	rjmp	.+84     	; 0x2f1c <vfprintf+0x10c>
    2ec8:	f3 2d       	mov	r31, r3
    2eca:	f8 60       	ori	r31, 0x08	; 8
    2ecc:	1d c0       	rjmp	.+58     	; 0x2f08 <vfprintf+0xf8>
    2ece:	37 fc       	sbrc	r3, 7
    2ed0:	2d c0       	rjmp	.+90     	; 0x2f2c <vfprintf+0x11c>
    2ed2:	20 ed       	ldi	r18, 0xD0	; 208
    2ed4:	28 0f       	add	r18, r24
    2ed6:	2a 30       	cpi	r18, 0x0A	; 10
    2ed8:	40 f0       	brcs	.+16     	; 0x2eea <vfprintf+0xda>
    2eda:	8e 32       	cpi	r24, 0x2E	; 46
    2edc:	b9 f4       	brne	.+46     	; 0x2f0c <vfprintf+0xfc>
    2ede:	36 fc       	sbrc	r3, 6
    2ee0:	75 c1       	rjmp	.+746    	; 0x31cc <vfprintf+0x3bc>
    2ee2:	23 2d       	mov	r18, r3
    2ee4:	20 64       	ori	r18, 0x40	; 64
    2ee6:	32 2e       	mov	r3, r18
    2ee8:	19 c0       	rjmp	.+50     	; 0x2f1c <vfprintf+0x10c>
    2eea:	36 fe       	sbrs	r3, 6
    2eec:	06 c0       	rjmp	.+12     	; 0x2efa <vfprintf+0xea>
    2eee:	8a e0       	ldi	r24, 0x0A	; 10
    2ef0:	98 9e       	mul	r9, r24
    2ef2:	20 0d       	add	r18, r0
    2ef4:	11 24       	eor	r1, r1
    2ef6:	92 2e       	mov	r9, r18
    2ef8:	11 c0       	rjmp	.+34     	; 0x2f1c <vfprintf+0x10c>
    2efa:	ea e0       	ldi	r30, 0x0A	; 10
    2efc:	2e 9e       	mul	r2, r30
    2efe:	20 0d       	add	r18, r0
    2f00:	11 24       	eor	r1, r1
    2f02:	22 2e       	mov	r2, r18
    2f04:	f3 2d       	mov	r31, r3
    2f06:	f0 62       	ori	r31, 0x20	; 32
    2f08:	3f 2e       	mov	r3, r31
    2f0a:	08 c0       	rjmp	.+16     	; 0x2f1c <vfprintf+0x10c>
    2f0c:	8c 36       	cpi	r24, 0x6C	; 108
    2f0e:	21 f4       	brne	.+8      	; 0x2f18 <vfprintf+0x108>
    2f10:	83 2d       	mov	r24, r3
    2f12:	80 68       	ori	r24, 0x80	; 128
    2f14:	38 2e       	mov	r3, r24
    2f16:	02 c0       	rjmp	.+4      	; 0x2f1c <vfprintf+0x10c>
    2f18:	88 36       	cpi	r24, 0x68	; 104
    2f1a:	41 f4       	brne	.+16     	; 0x2f2c <vfprintf+0x11c>
    2f1c:	f7 01       	movw	r30, r14
    2f1e:	93 fd       	sbrc	r25, 3
    2f20:	85 91       	lpm	r24, Z+
    2f22:	93 ff       	sbrs	r25, 3
    2f24:	81 91       	ld	r24, Z+
    2f26:	7f 01       	movw	r14, r30
    2f28:	81 11       	cpse	r24, r1
    2f2a:	b3 cf       	rjmp	.-154    	; 0x2e92 <vfprintf+0x82>
    2f2c:	98 2f       	mov	r25, r24
    2f2e:	9f 7d       	andi	r25, 0xDF	; 223
    2f30:	95 54       	subi	r25, 0x45	; 69
    2f32:	93 30       	cpi	r25, 0x03	; 3
    2f34:	28 f4       	brcc	.+10     	; 0x2f40 <vfprintf+0x130>
    2f36:	0c 5f       	subi	r16, 0xFC	; 252
    2f38:	1f 4f       	sbci	r17, 0xFF	; 255
    2f3a:	9f e3       	ldi	r25, 0x3F	; 63
    2f3c:	99 83       	std	Y+1, r25	; 0x01
    2f3e:	0d c0       	rjmp	.+26     	; 0x2f5a <vfprintf+0x14a>
    2f40:	83 36       	cpi	r24, 0x63	; 99
    2f42:	31 f0       	breq	.+12     	; 0x2f50 <vfprintf+0x140>
    2f44:	83 37       	cpi	r24, 0x73	; 115
    2f46:	71 f0       	breq	.+28     	; 0x2f64 <vfprintf+0x154>
    2f48:	83 35       	cpi	r24, 0x53	; 83
    2f4a:	09 f0       	breq	.+2      	; 0x2f4e <vfprintf+0x13e>
    2f4c:	55 c0       	rjmp	.+170    	; 0x2ff8 <vfprintf+0x1e8>
    2f4e:	20 c0       	rjmp	.+64     	; 0x2f90 <vfprintf+0x180>
    2f50:	f8 01       	movw	r30, r16
    2f52:	80 81       	ld	r24, Z
    2f54:	89 83       	std	Y+1, r24	; 0x01
    2f56:	0e 5f       	subi	r16, 0xFE	; 254
    2f58:	1f 4f       	sbci	r17, 0xFF	; 255
    2f5a:	88 24       	eor	r8, r8
    2f5c:	83 94       	inc	r8
    2f5e:	91 2c       	mov	r9, r1
    2f60:	53 01       	movw	r10, r6
    2f62:	12 c0       	rjmp	.+36     	; 0x2f88 <vfprintf+0x178>
    2f64:	28 01       	movw	r4, r16
    2f66:	f2 e0       	ldi	r31, 0x02	; 2
    2f68:	4f 0e       	add	r4, r31
    2f6a:	51 1c       	adc	r5, r1
    2f6c:	f8 01       	movw	r30, r16
    2f6e:	a0 80       	ld	r10, Z
    2f70:	b1 80       	ldd	r11, Z+1	; 0x01
    2f72:	36 fe       	sbrs	r3, 6
    2f74:	03 c0       	rjmp	.+6      	; 0x2f7c <vfprintf+0x16c>
    2f76:	69 2d       	mov	r22, r9
    2f78:	70 e0       	ldi	r23, 0x00	; 0
    2f7a:	02 c0       	rjmp	.+4      	; 0x2f80 <vfprintf+0x170>
    2f7c:	6f ef       	ldi	r22, 0xFF	; 255
    2f7e:	7f ef       	ldi	r23, 0xFF	; 255
    2f80:	c5 01       	movw	r24, r10
    2f82:	4e d1       	rcall	.+668    	; 0x3220 <strnlen>
    2f84:	4c 01       	movw	r8, r24
    2f86:	82 01       	movw	r16, r4
    2f88:	f3 2d       	mov	r31, r3
    2f8a:	ff 77       	andi	r31, 0x7F	; 127
    2f8c:	3f 2e       	mov	r3, r31
    2f8e:	15 c0       	rjmp	.+42     	; 0x2fba <vfprintf+0x1aa>
    2f90:	28 01       	movw	r4, r16
    2f92:	22 e0       	ldi	r18, 0x02	; 2
    2f94:	42 0e       	add	r4, r18
    2f96:	51 1c       	adc	r5, r1
    2f98:	f8 01       	movw	r30, r16
    2f9a:	a0 80       	ld	r10, Z
    2f9c:	b1 80       	ldd	r11, Z+1	; 0x01
    2f9e:	36 fe       	sbrs	r3, 6
    2fa0:	03 c0       	rjmp	.+6      	; 0x2fa8 <vfprintf+0x198>
    2fa2:	69 2d       	mov	r22, r9
    2fa4:	70 e0       	ldi	r23, 0x00	; 0
    2fa6:	02 c0       	rjmp	.+4      	; 0x2fac <vfprintf+0x19c>
    2fa8:	6f ef       	ldi	r22, 0xFF	; 255
    2faa:	7f ef       	ldi	r23, 0xFF	; 255
    2fac:	c5 01       	movw	r24, r10
    2fae:	2d d1       	rcall	.+602    	; 0x320a <strnlen_P>
    2fb0:	4c 01       	movw	r8, r24
    2fb2:	f3 2d       	mov	r31, r3
    2fb4:	f0 68       	ori	r31, 0x80	; 128
    2fb6:	3f 2e       	mov	r3, r31
    2fb8:	82 01       	movw	r16, r4
    2fba:	33 fc       	sbrc	r3, 3
    2fbc:	19 c0       	rjmp	.+50     	; 0x2ff0 <vfprintf+0x1e0>
    2fbe:	82 2d       	mov	r24, r2
    2fc0:	90 e0       	ldi	r25, 0x00	; 0
    2fc2:	88 16       	cp	r8, r24
    2fc4:	99 06       	cpc	r9, r25
    2fc6:	a0 f4       	brcc	.+40     	; 0x2ff0 <vfprintf+0x1e0>
    2fc8:	b6 01       	movw	r22, r12
    2fca:	80 e2       	ldi	r24, 0x20	; 32
    2fcc:	90 e0       	ldi	r25, 0x00	; 0
    2fce:	33 d1       	rcall	.+614    	; 0x3236 <fputc>
    2fd0:	2a 94       	dec	r2
    2fd2:	f5 cf       	rjmp	.-22     	; 0x2fbe <vfprintf+0x1ae>
    2fd4:	f5 01       	movw	r30, r10
    2fd6:	37 fc       	sbrc	r3, 7
    2fd8:	85 91       	lpm	r24, Z+
    2fda:	37 fe       	sbrs	r3, 7
    2fdc:	81 91       	ld	r24, Z+
    2fde:	5f 01       	movw	r10, r30
    2fe0:	b6 01       	movw	r22, r12
    2fe2:	90 e0       	ldi	r25, 0x00	; 0
    2fe4:	28 d1       	rcall	.+592    	; 0x3236 <fputc>
    2fe6:	21 10       	cpse	r2, r1
    2fe8:	2a 94       	dec	r2
    2fea:	21 e0       	ldi	r18, 0x01	; 1
    2fec:	82 1a       	sub	r8, r18
    2fee:	91 08       	sbc	r9, r1
    2ff0:	81 14       	cp	r8, r1
    2ff2:	91 04       	cpc	r9, r1
    2ff4:	79 f7       	brne	.-34     	; 0x2fd4 <vfprintf+0x1c4>
    2ff6:	e1 c0       	rjmp	.+450    	; 0x31ba <vfprintf+0x3aa>
    2ff8:	84 36       	cpi	r24, 0x64	; 100
    2ffa:	11 f0       	breq	.+4      	; 0x3000 <vfprintf+0x1f0>
    2ffc:	89 36       	cpi	r24, 0x69	; 105
    2ffe:	39 f5       	brne	.+78     	; 0x304e <vfprintf+0x23e>
    3000:	f8 01       	movw	r30, r16
    3002:	37 fe       	sbrs	r3, 7
    3004:	07 c0       	rjmp	.+14     	; 0x3014 <vfprintf+0x204>
    3006:	60 81       	ld	r22, Z
    3008:	71 81       	ldd	r23, Z+1	; 0x01
    300a:	82 81       	ldd	r24, Z+2	; 0x02
    300c:	93 81       	ldd	r25, Z+3	; 0x03
    300e:	0c 5f       	subi	r16, 0xFC	; 252
    3010:	1f 4f       	sbci	r17, 0xFF	; 255
    3012:	08 c0       	rjmp	.+16     	; 0x3024 <vfprintf+0x214>
    3014:	60 81       	ld	r22, Z
    3016:	71 81       	ldd	r23, Z+1	; 0x01
    3018:	07 2e       	mov	r0, r23
    301a:	00 0c       	add	r0, r0
    301c:	88 0b       	sbc	r24, r24
    301e:	99 0b       	sbc	r25, r25
    3020:	0e 5f       	subi	r16, 0xFE	; 254
    3022:	1f 4f       	sbci	r17, 0xFF	; 255
    3024:	f3 2d       	mov	r31, r3
    3026:	ff 76       	andi	r31, 0x6F	; 111
    3028:	3f 2e       	mov	r3, r31
    302a:	97 ff       	sbrs	r25, 7
    302c:	09 c0       	rjmp	.+18     	; 0x3040 <vfprintf+0x230>
    302e:	90 95       	com	r25
    3030:	80 95       	com	r24
    3032:	70 95       	com	r23
    3034:	61 95       	neg	r22
    3036:	7f 4f       	sbci	r23, 0xFF	; 255
    3038:	8f 4f       	sbci	r24, 0xFF	; 255
    303a:	9f 4f       	sbci	r25, 0xFF	; 255
    303c:	f0 68       	ori	r31, 0x80	; 128
    303e:	3f 2e       	mov	r3, r31
    3040:	2a e0       	ldi	r18, 0x0A	; 10
    3042:	30 e0       	ldi	r19, 0x00	; 0
    3044:	a3 01       	movw	r20, r6
    3046:	33 d1       	rcall	.+614    	; 0x32ae <__ultoa_invert>
    3048:	88 2e       	mov	r8, r24
    304a:	86 18       	sub	r8, r6
    304c:	44 c0       	rjmp	.+136    	; 0x30d6 <vfprintf+0x2c6>
    304e:	85 37       	cpi	r24, 0x75	; 117
    3050:	31 f4       	brne	.+12     	; 0x305e <vfprintf+0x24e>
    3052:	23 2d       	mov	r18, r3
    3054:	2f 7e       	andi	r18, 0xEF	; 239
    3056:	b2 2e       	mov	r11, r18
    3058:	2a e0       	ldi	r18, 0x0A	; 10
    305a:	30 e0       	ldi	r19, 0x00	; 0
    305c:	25 c0       	rjmp	.+74     	; 0x30a8 <vfprintf+0x298>
    305e:	93 2d       	mov	r25, r3
    3060:	99 7f       	andi	r25, 0xF9	; 249
    3062:	b9 2e       	mov	r11, r25
    3064:	8f 36       	cpi	r24, 0x6F	; 111
    3066:	c1 f0       	breq	.+48     	; 0x3098 <vfprintf+0x288>
    3068:	18 f4       	brcc	.+6      	; 0x3070 <vfprintf+0x260>
    306a:	88 35       	cpi	r24, 0x58	; 88
    306c:	79 f0       	breq	.+30     	; 0x308c <vfprintf+0x27c>
    306e:	ae c0       	rjmp	.+348    	; 0x31cc <vfprintf+0x3bc>
    3070:	80 37       	cpi	r24, 0x70	; 112
    3072:	19 f0       	breq	.+6      	; 0x307a <vfprintf+0x26a>
    3074:	88 37       	cpi	r24, 0x78	; 120
    3076:	21 f0       	breq	.+8      	; 0x3080 <vfprintf+0x270>
    3078:	a9 c0       	rjmp	.+338    	; 0x31cc <vfprintf+0x3bc>
    307a:	e9 2f       	mov	r30, r25
    307c:	e0 61       	ori	r30, 0x10	; 16
    307e:	be 2e       	mov	r11, r30
    3080:	b4 fe       	sbrs	r11, 4
    3082:	0d c0       	rjmp	.+26     	; 0x309e <vfprintf+0x28e>
    3084:	fb 2d       	mov	r31, r11
    3086:	f4 60       	ori	r31, 0x04	; 4
    3088:	bf 2e       	mov	r11, r31
    308a:	09 c0       	rjmp	.+18     	; 0x309e <vfprintf+0x28e>
    308c:	34 fe       	sbrs	r3, 4
    308e:	0a c0       	rjmp	.+20     	; 0x30a4 <vfprintf+0x294>
    3090:	29 2f       	mov	r18, r25
    3092:	26 60       	ori	r18, 0x06	; 6
    3094:	b2 2e       	mov	r11, r18
    3096:	06 c0       	rjmp	.+12     	; 0x30a4 <vfprintf+0x294>
    3098:	28 e0       	ldi	r18, 0x08	; 8
    309a:	30 e0       	ldi	r19, 0x00	; 0
    309c:	05 c0       	rjmp	.+10     	; 0x30a8 <vfprintf+0x298>
    309e:	20 e1       	ldi	r18, 0x10	; 16
    30a0:	30 e0       	ldi	r19, 0x00	; 0
    30a2:	02 c0       	rjmp	.+4      	; 0x30a8 <vfprintf+0x298>
    30a4:	20 e1       	ldi	r18, 0x10	; 16
    30a6:	32 e0       	ldi	r19, 0x02	; 2
    30a8:	f8 01       	movw	r30, r16
    30aa:	b7 fe       	sbrs	r11, 7
    30ac:	07 c0       	rjmp	.+14     	; 0x30bc <vfprintf+0x2ac>
    30ae:	60 81       	ld	r22, Z
    30b0:	71 81       	ldd	r23, Z+1	; 0x01
    30b2:	82 81       	ldd	r24, Z+2	; 0x02
    30b4:	93 81       	ldd	r25, Z+3	; 0x03
    30b6:	0c 5f       	subi	r16, 0xFC	; 252
    30b8:	1f 4f       	sbci	r17, 0xFF	; 255
    30ba:	06 c0       	rjmp	.+12     	; 0x30c8 <vfprintf+0x2b8>
    30bc:	60 81       	ld	r22, Z
    30be:	71 81       	ldd	r23, Z+1	; 0x01
    30c0:	80 e0       	ldi	r24, 0x00	; 0
    30c2:	90 e0       	ldi	r25, 0x00	; 0
    30c4:	0e 5f       	subi	r16, 0xFE	; 254
    30c6:	1f 4f       	sbci	r17, 0xFF	; 255
    30c8:	a3 01       	movw	r20, r6
    30ca:	f1 d0       	rcall	.+482    	; 0x32ae <__ultoa_invert>
    30cc:	88 2e       	mov	r8, r24
    30ce:	86 18       	sub	r8, r6
    30d0:	fb 2d       	mov	r31, r11
    30d2:	ff 77       	andi	r31, 0x7F	; 127
    30d4:	3f 2e       	mov	r3, r31
    30d6:	36 fe       	sbrs	r3, 6
    30d8:	0d c0       	rjmp	.+26     	; 0x30f4 <vfprintf+0x2e4>
    30da:	23 2d       	mov	r18, r3
    30dc:	2e 7f       	andi	r18, 0xFE	; 254
    30de:	a2 2e       	mov	r10, r18
    30e0:	89 14       	cp	r8, r9
    30e2:	58 f4       	brcc	.+22     	; 0x30fa <vfprintf+0x2ea>
    30e4:	34 fe       	sbrs	r3, 4
    30e6:	0b c0       	rjmp	.+22     	; 0x30fe <vfprintf+0x2ee>
    30e8:	32 fc       	sbrc	r3, 2
    30ea:	09 c0       	rjmp	.+18     	; 0x30fe <vfprintf+0x2ee>
    30ec:	83 2d       	mov	r24, r3
    30ee:	8e 7e       	andi	r24, 0xEE	; 238
    30f0:	a8 2e       	mov	r10, r24
    30f2:	05 c0       	rjmp	.+10     	; 0x30fe <vfprintf+0x2ee>
    30f4:	b8 2c       	mov	r11, r8
    30f6:	a3 2c       	mov	r10, r3
    30f8:	03 c0       	rjmp	.+6      	; 0x3100 <vfprintf+0x2f0>
    30fa:	b8 2c       	mov	r11, r8
    30fc:	01 c0       	rjmp	.+2      	; 0x3100 <vfprintf+0x2f0>
    30fe:	b9 2c       	mov	r11, r9
    3100:	a4 fe       	sbrs	r10, 4
    3102:	0f c0       	rjmp	.+30     	; 0x3122 <vfprintf+0x312>
    3104:	fe 01       	movw	r30, r28
    3106:	e8 0d       	add	r30, r8
    3108:	f1 1d       	adc	r31, r1
    310a:	80 81       	ld	r24, Z
    310c:	80 33       	cpi	r24, 0x30	; 48
    310e:	21 f4       	brne	.+8      	; 0x3118 <vfprintf+0x308>
    3110:	9a 2d       	mov	r25, r10
    3112:	99 7e       	andi	r25, 0xE9	; 233
    3114:	a9 2e       	mov	r10, r25
    3116:	09 c0       	rjmp	.+18     	; 0x312a <vfprintf+0x31a>
    3118:	a2 fe       	sbrs	r10, 2
    311a:	06 c0       	rjmp	.+12     	; 0x3128 <vfprintf+0x318>
    311c:	b3 94       	inc	r11
    311e:	b3 94       	inc	r11
    3120:	04 c0       	rjmp	.+8      	; 0x312a <vfprintf+0x31a>
    3122:	8a 2d       	mov	r24, r10
    3124:	86 78       	andi	r24, 0x86	; 134
    3126:	09 f0       	breq	.+2      	; 0x312a <vfprintf+0x31a>
    3128:	b3 94       	inc	r11
    312a:	a3 fc       	sbrc	r10, 3
    312c:	10 c0       	rjmp	.+32     	; 0x314e <vfprintf+0x33e>
    312e:	a0 fe       	sbrs	r10, 0
    3130:	06 c0       	rjmp	.+12     	; 0x313e <vfprintf+0x32e>
    3132:	b2 14       	cp	r11, r2
    3134:	80 f4       	brcc	.+32     	; 0x3156 <vfprintf+0x346>
    3136:	28 0c       	add	r2, r8
    3138:	92 2c       	mov	r9, r2
    313a:	9b 18       	sub	r9, r11
    313c:	0d c0       	rjmp	.+26     	; 0x3158 <vfprintf+0x348>
    313e:	b2 14       	cp	r11, r2
    3140:	58 f4       	brcc	.+22     	; 0x3158 <vfprintf+0x348>
    3142:	b6 01       	movw	r22, r12
    3144:	80 e2       	ldi	r24, 0x20	; 32
    3146:	90 e0       	ldi	r25, 0x00	; 0
    3148:	76 d0       	rcall	.+236    	; 0x3236 <fputc>
    314a:	b3 94       	inc	r11
    314c:	f8 cf       	rjmp	.-16     	; 0x313e <vfprintf+0x32e>
    314e:	b2 14       	cp	r11, r2
    3150:	18 f4       	brcc	.+6      	; 0x3158 <vfprintf+0x348>
    3152:	2b 18       	sub	r2, r11
    3154:	02 c0       	rjmp	.+4      	; 0x315a <vfprintf+0x34a>
    3156:	98 2c       	mov	r9, r8
    3158:	21 2c       	mov	r2, r1
    315a:	a4 fe       	sbrs	r10, 4
    315c:	0f c0       	rjmp	.+30     	; 0x317c <vfprintf+0x36c>
    315e:	b6 01       	movw	r22, r12
    3160:	80 e3       	ldi	r24, 0x30	; 48
    3162:	90 e0       	ldi	r25, 0x00	; 0
    3164:	68 d0       	rcall	.+208    	; 0x3236 <fputc>
    3166:	a2 fe       	sbrs	r10, 2
    3168:	16 c0       	rjmp	.+44     	; 0x3196 <vfprintf+0x386>
    316a:	a1 fc       	sbrc	r10, 1
    316c:	03 c0       	rjmp	.+6      	; 0x3174 <vfprintf+0x364>
    316e:	88 e7       	ldi	r24, 0x78	; 120
    3170:	90 e0       	ldi	r25, 0x00	; 0
    3172:	02 c0       	rjmp	.+4      	; 0x3178 <vfprintf+0x368>
    3174:	88 e5       	ldi	r24, 0x58	; 88
    3176:	90 e0       	ldi	r25, 0x00	; 0
    3178:	b6 01       	movw	r22, r12
    317a:	0c c0       	rjmp	.+24     	; 0x3194 <vfprintf+0x384>
    317c:	8a 2d       	mov	r24, r10
    317e:	86 78       	andi	r24, 0x86	; 134
    3180:	51 f0       	breq	.+20     	; 0x3196 <vfprintf+0x386>
    3182:	a1 fe       	sbrs	r10, 1
    3184:	02 c0       	rjmp	.+4      	; 0x318a <vfprintf+0x37a>
    3186:	8b e2       	ldi	r24, 0x2B	; 43
    3188:	01 c0       	rjmp	.+2      	; 0x318c <vfprintf+0x37c>
    318a:	80 e2       	ldi	r24, 0x20	; 32
    318c:	a7 fc       	sbrc	r10, 7
    318e:	8d e2       	ldi	r24, 0x2D	; 45
    3190:	b6 01       	movw	r22, r12
    3192:	90 e0       	ldi	r25, 0x00	; 0
    3194:	50 d0       	rcall	.+160    	; 0x3236 <fputc>
    3196:	89 14       	cp	r8, r9
    3198:	30 f4       	brcc	.+12     	; 0x31a6 <vfprintf+0x396>
    319a:	b6 01       	movw	r22, r12
    319c:	80 e3       	ldi	r24, 0x30	; 48
    319e:	90 e0       	ldi	r25, 0x00	; 0
    31a0:	4a d0       	rcall	.+148    	; 0x3236 <fputc>
    31a2:	9a 94       	dec	r9
    31a4:	f8 cf       	rjmp	.-16     	; 0x3196 <vfprintf+0x386>
    31a6:	8a 94       	dec	r8
    31a8:	f3 01       	movw	r30, r6
    31aa:	e8 0d       	add	r30, r8
    31ac:	f1 1d       	adc	r31, r1
    31ae:	80 81       	ld	r24, Z
    31b0:	b6 01       	movw	r22, r12
    31b2:	90 e0       	ldi	r25, 0x00	; 0
    31b4:	40 d0       	rcall	.+128    	; 0x3236 <fputc>
    31b6:	81 10       	cpse	r8, r1
    31b8:	f6 cf       	rjmp	.-20     	; 0x31a6 <vfprintf+0x396>
    31ba:	22 20       	and	r2, r2
    31bc:	09 f4       	brne	.+2      	; 0x31c0 <vfprintf+0x3b0>
    31be:	4e ce       	rjmp	.-868    	; 0x2e5c <vfprintf+0x4c>
    31c0:	b6 01       	movw	r22, r12
    31c2:	80 e2       	ldi	r24, 0x20	; 32
    31c4:	90 e0       	ldi	r25, 0x00	; 0
    31c6:	37 d0       	rcall	.+110    	; 0x3236 <fputc>
    31c8:	2a 94       	dec	r2
    31ca:	f7 cf       	rjmp	.-18     	; 0x31ba <vfprintf+0x3aa>
    31cc:	f6 01       	movw	r30, r12
    31ce:	86 81       	ldd	r24, Z+6	; 0x06
    31d0:	97 81       	ldd	r25, Z+7	; 0x07
    31d2:	02 c0       	rjmp	.+4      	; 0x31d8 <vfprintf+0x3c8>
    31d4:	8f ef       	ldi	r24, 0xFF	; 255
    31d6:	9f ef       	ldi	r25, 0xFF	; 255
    31d8:	2b 96       	adiw	r28, 0x0b	; 11
    31da:	0f b6       	in	r0, 0x3f	; 63
    31dc:	f8 94       	cli
    31de:	de bf       	out	0x3e, r29	; 62
    31e0:	0f be       	out	0x3f, r0	; 63
    31e2:	cd bf       	out	0x3d, r28	; 61
    31e4:	df 91       	pop	r29
    31e6:	cf 91       	pop	r28
    31e8:	1f 91       	pop	r17
    31ea:	0f 91       	pop	r16
    31ec:	ff 90       	pop	r15
    31ee:	ef 90       	pop	r14
    31f0:	df 90       	pop	r13
    31f2:	cf 90       	pop	r12
    31f4:	bf 90       	pop	r11
    31f6:	af 90       	pop	r10
    31f8:	9f 90       	pop	r9
    31fa:	8f 90       	pop	r8
    31fc:	7f 90       	pop	r7
    31fe:	6f 90       	pop	r6
    3200:	5f 90       	pop	r5
    3202:	4f 90       	pop	r4
    3204:	3f 90       	pop	r3
    3206:	2f 90       	pop	r2
    3208:	08 95       	ret

0000320a <strnlen_P>:
    320a:	fc 01       	movw	r30, r24
    320c:	05 90       	lpm	r0, Z+
    320e:	61 50       	subi	r22, 0x01	; 1
    3210:	70 40       	sbci	r23, 0x00	; 0
    3212:	01 10       	cpse	r0, r1
    3214:	d8 f7       	brcc	.-10     	; 0x320c <strnlen_P+0x2>
    3216:	80 95       	com	r24
    3218:	90 95       	com	r25
    321a:	8e 0f       	add	r24, r30
    321c:	9f 1f       	adc	r25, r31
    321e:	08 95       	ret

00003220 <strnlen>:
    3220:	fc 01       	movw	r30, r24
    3222:	61 50       	subi	r22, 0x01	; 1
    3224:	70 40       	sbci	r23, 0x00	; 0
    3226:	01 90       	ld	r0, Z+
    3228:	01 10       	cpse	r0, r1
    322a:	d8 f7       	brcc	.-10     	; 0x3222 <strnlen+0x2>
    322c:	80 95       	com	r24
    322e:	90 95       	com	r25
    3230:	8e 0f       	add	r24, r30
    3232:	9f 1f       	adc	r25, r31
    3234:	08 95       	ret

00003236 <fputc>:
    3236:	0f 93       	push	r16
    3238:	1f 93       	push	r17
    323a:	cf 93       	push	r28
    323c:	df 93       	push	r29
    323e:	fb 01       	movw	r30, r22
    3240:	23 81       	ldd	r18, Z+3	; 0x03
    3242:	21 fd       	sbrc	r18, 1
    3244:	03 c0       	rjmp	.+6      	; 0x324c <fputc+0x16>
    3246:	8f ef       	ldi	r24, 0xFF	; 255
    3248:	9f ef       	ldi	r25, 0xFF	; 255
    324a:	2c c0       	rjmp	.+88     	; 0x32a4 <fputc+0x6e>
    324c:	22 ff       	sbrs	r18, 2
    324e:	16 c0       	rjmp	.+44     	; 0x327c <fputc+0x46>
    3250:	46 81       	ldd	r20, Z+6	; 0x06
    3252:	57 81       	ldd	r21, Z+7	; 0x07
    3254:	24 81       	ldd	r18, Z+4	; 0x04
    3256:	35 81       	ldd	r19, Z+5	; 0x05
    3258:	42 17       	cp	r20, r18
    325a:	53 07       	cpc	r21, r19
    325c:	44 f4       	brge	.+16     	; 0x326e <fputc+0x38>
    325e:	a0 81       	ld	r26, Z
    3260:	b1 81       	ldd	r27, Z+1	; 0x01
    3262:	9d 01       	movw	r18, r26
    3264:	2f 5f       	subi	r18, 0xFF	; 255
    3266:	3f 4f       	sbci	r19, 0xFF	; 255
    3268:	31 83       	std	Z+1, r19	; 0x01
    326a:	20 83       	st	Z, r18
    326c:	8c 93       	st	X, r24
    326e:	26 81       	ldd	r18, Z+6	; 0x06
    3270:	37 81       	ldd	r19, Z+7	; 0x07
    3272:	2f 5f       	subi	r18, 0xFF	; 255
    3274:	3f 4f       	sbci	r19, 0xFF	; 255
    3276:	37 83       	std	Z+7, r19	; 0x07
    3278:	26 83       	std	Z+6, r18	; 0x06
    327a:	14 c0       	rjmp	.+40     	; 0x32a4 <fputc+0x6e>
    327c:	8b 01       	movw	r16, r22
    327e:	ec 01       	movw	r28, r24
    3280:	fb 01       	movw	r30, r22
    3282:	00 84       	ldd	r0, Z+8	; 0x08
    3284:	f1 85       	ldd	r31, Z+9	; 0x09
    3286:	e0 2d       	mov	r30, r0
    3288:	09 95       	icall
    328a:	89 2b       	or	r24, r25
    328c:	e1 f6       	brne	.-72     	; 0x3246 <fputc+0x10>
    328e:	d8 01       	movw	r26, r16
    3290:	16 96       	adiw	r26, 0x06	; 6
    3292:	8d 91       	ld	r24, X+
    3294:	9c 91       	ld	r25, X
    3296:	17 97       	sbiw	r26, 0x07	; 7
    3298:	01 96       	adiw	r24, 0x01	; 1
    329a:	17 96       	adiw	r26, 0x07	; 7
    329c:	9c 93       	st	X, r25
    329e:	8e 93       	st	-X, r24
    32a0:	16 97       	sbiw	r26, 0x06	; 6
    32a2:	ce 01       	movw	r24, r28
    32a4:	df 91       	pop	r29
    32a6:	cf 91       	pop	r28
    32a8:	1f 91       	pop	r17
    32aa:	0f 91       	pop	r16
    32ac:	08 95       	ret

000032ae <__ultoa_invert>:
    32ae:	fa 01       	movw	r30, r20
    32b0:	aa 27       	eor	r26, r26
    32b2:	28 30       	cpi	r18, 0x08	; 8
    32b4:	51 f1       	breq	.+84     	; 0x330a <__ultoa_invert+0x5c>
    32b6:	20 31       	cpi	r18, 0x10	; 16
    32b8:	81 f1       	breq	.+96     	; 0x331a <__ultoa_invert+0x6c>
    32ba:	e8 94       	clt
    32bc:	6f 93       	push	r22
    32be:	6e 7f       	andi	r22, 0xFE	; 254
    32c0:	6e 5f       	subi	r22, 0xFE	; 254
    32c2:	7f 4f       	sbci	r23, 0xFF	; 255
    32c4:	8f 4f       	sbci	r24, 0xFF	; 255
    32c6:	9f 4f       	sbci	r25, 0xFF	; 255
    32c8:	af 4f       	sbci	r26, 0xFF	; 255
    32ca:	b1 e0       	ldi	r27, 0x01	; 1
    32cc:	3e d0       	rcall	.+124    	; 0x334a <__ultoa_invert+0x9c>
    32ce:	b4 e0       	ldi	r27, 0x04	; 4
    32d0:	3c d0       	rcall	.+120    	; 0x334a <__ultoa_invert+0x9c>
    32d2:	67 0f       	add	r22, r23
    32d4:	78 1f       	adc	r23, r24
    32d6:	89 1f       	adc	r24, r25
    32d8:	9a 1f       	adc	r25, r26
    32da:	a1 1d       	adc	r26, r1
    32dc:	68 0f       	add	r22, r24
    32de:	79 1f       	adc	r23, r25
    32e0:	8a 1f       	adc	r24, r26
    32e2:	91 1d       	adc	r25, r1
    32e4:	a1 1d       	adc	r26, r1
    32e6:	6a 0f       	add	r22, r26
    32e8:	71 1d       	adc	r23, r1
    32ea:	81 1d       	adc	r24, r1
    32ec:	91 1d       	adc	r25, r1
    32ee:	a1 1d       	adc	r26, r1
    32f0:	20 d0       	rcall	.+64     	; 0x3332 <__ultoa_invert+0x84>
    32f2:	09 f4       	brne	.+2      	; 0x32f6 <__ultoa_invert+0x48>
    32f4:	68 94       	set
    32f6:	3f 91       	pop	r19
    32f8:	2a e0       	ldi	r18, 0x0A	; 10
    32fa:	26 9f       	mul	r18, r22
    32fc:	11 24       	eor	r1, r1
    32fe:	30 19       	sub	r19, r0
    3300:	30 5d       	subi	r19, 0xD0	; 208
    3302:	31 93       	st	Z+, r19
    3304:	de f6       	brtc	.-74     	; 0x32bc <__ultoa_invert+0xe>
    3306:	cf 01       	movw	r24, r30
    3308:	08 95       	ret
    330a:	46 2f       	mov	r20, r22
    330c:	47 70       	andi	r20, 0x07	; 7
    330e:	40 5d       	subi	r20, 0xD0	; 208
    3310:	41 93       	st	Z+, r20
    3312:	b3 e0       	ldi	r27, 0x03	; 3
    3314:	0f d0       	rcall	.+30     	; 0x3334 <__ultoa_invert+0x86>
    3316:	c9 f7       	brne	.-14     	; 0x330a <__ultoa_invert+0x5c>
    3318:	f6 cf       	rjmp	.-20     	; 0x3306 <__ultoa_invert+0x58>
    331a:	46 2f       	mov	r20, r22
    331c:	4f 70       	andi	r20, 0x0F	; 15
    331e:	40 5d       	subi	r20, 0xD0	; 208
    3320:	4a 33       	cpi	r20, 0x3A	; 58
    3322:	18 f0       	brcs	.+6      	; 0x332a <__ultoa_invert+0x7c>
    3324:	49 5d       	subi	r20, 0xD9	; 217
    3326:	31 fd       	sbrc	r19, 1
    3328:	40 52       	subi	r20, 0x20	; 32
    332a:	41 93       	st	Z+, r20
    332c:	02 d0       	rcall	.+4      	; 0x3332 <__ultoa_invert+0x84>
    332e:	a9 f7       	brne	.-22     	; 0x331a <__ultoa_invert+0x6c>
    3330:	ea cf       	rjmp	.-44     	; 0x3306 <__ultoa_invert+0x58>
    3332:	b4 e0       	ldi	r27, 0x04	; 4
    3334:	a6 95       	lsr	r26
    3336:	97 95       	ror	r25
    3338:	87 95       	ror	r24
    333a:	77 95       	ror	r23
    333c:	67 95       	ror	r22
    333e:	ba 95       	dec	r27
    3340:	c9 f7       	brne	.-14     	; 0x3334 <__ultoa_invert+0x86>
    3342:	00 97       	sbiw	r24, 0x00	; 0
    3344:	61 05       	cpc	r22, r1
    3346:	71 05       	cpc	r23, r1
    3348:	08 95       	ret
    334a:	9b 01       	movw	r18, r22
    334c:	ac 01       	movw	r20, r24
    334e:	0a 2e       	mov	r0, r26
    3350:	06 94       	lsr	r0
    3352:	57 95       	ror	r21
    3354:	47 95       	ror	r20
    3356:	37 95       	ror	r19
    3358:	27 95       	ror	r18
    335a:	ba 95       	dec	r27
    335c:	c9 f7       	brne	.-14     	; 0x3350 <__ultoa_invert+0xa2>
    335e:	62 0f       	add	r22, r18
    3360:	73 1f       	adc	r23, r19
    3362:	84 1f       	adc	r24, r20
    3364:	95 1f       	adc	r25, r21
    3366:	a0 1d       	adc	r26, r0
    3368:	08 95       	ret

0000336a <_exit>:
    336a:	f8 94       	cli

0000336c <__stop_program>:
    336c:	ff cf       	rjmp	.-2      	; 0x336c <__stop_program>
